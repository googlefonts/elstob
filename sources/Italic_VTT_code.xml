<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttVttLibVersion="1.0">
  <fpgm>
    <assembly>/* Font-program */
/* ACT generated Thu Feb 20 17:43:54 2020 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instrunction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)² */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)²&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend² */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend²&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add ½ denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said ½ denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-½,+½] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-½,+½] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d² &lt;= w² or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;d² - w²&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;sqrt(d² - w²)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d² - w² =: dx&gt;, &lt;w·sqrt(d² - w²) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1·pv| &lt; 1/16 means fv1 is within ±arcsin(1/16) or ±3.5833° perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]


</assembly>
  </fpgm>
  <prep>
    <assembly>/* auto-generated pre-program */
/* VTT 6.31 compiler Sun May 17 08:25:39 2020 */

/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 2047
GT[]
MPPEM[]
#PUSH, 8
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* ScanCtrl */
SCANCTRL[], 511

/* ScanType */
SCANTYPE[], 4

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

WS[], 16, 0
/* LinearAdvanceWidths */
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 61, 2, 85
CALL[], 9, 61, 8, 85
SVTCA[Y]
CALL[], 0, 89
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
SVTCA[Y]
CALL[], 14, 89
CALL[], 7, 40, 6, 85
CALL[], 11, 40, 10, 85
CALL[], 15, 52, 14, 85
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 61, 4, 85
CALL[], 13, 61, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 61, 16, 85
CALL[], 19, 61, 18, 85
SVTCA[X]
CALL[], 21, 25, 36, 22, 21, 90
SVTCA[X]
CALL[], 23, 21, 22, 0, 91
SVTCA[X]
CALL[], 26, 63, 25, 255, 91
SVTCA[X]
CALL[], 24, 21, 22, 0, 91
SVTCA[X]
CALL[], 27, 63, 25, 255, 91
SVTCA[X]
CALL[], 28, 51, 23, 22, 92
SVTCA[X]
CALL[], 29, 22, 57, 31
SVTCA[Y]
CALL[], 30, 23, 255, 31
CALL[], 31, 30, 171, 31
CALL[], 32, 23, 8, 31
CALL[], 33, 22, 128, 31
CALL[], 34, 33, 128, 31
CALL[], 35, 34, 37, 31
CALL[], 36, 34, 205, 31
CALL[], 37, 36, 94, 31
CALL[], 38, 22, 5, 31
SVTCA[X]
CALL[], 39, 25, 32, 31
CALL[], 40, 39, 43, 31
CALL[], 41, 40, 205, 31
CALL[], 42, 25, 18, 31
SVTCA[Y]
CALL[], 43, 26, 79, 31
CALL[], 44, 28, 43, 85
CALL[], 45, 43, 103, 31
CALL[], 46, 43, 35, 31
CALL[], 47, 26, 8, 31
CALL[], 48, 27, 22, 31
CALL[], 49, 25, 27, 31
CALL[], 50, 49, 32, 31
CALL[], 51, 50, 61, 31
CALL[], 52, 50, 94, 31
CALL[], 53, 49, 43, 31
CALL[], 59, 58, 94, 31
SVTCA[X]
CALL[], 62, 61, 19, 31
CALL[], 63, 62, 171, 31
CALL[], 64, 61, 147, 31
SVTCA[Y]
CALL[], 70, 67, 28, 31
CALL[], 74, 73, 43, 31
RTG[]
</assembly>
  </prep>
  <cvt>
    <talk>CATEGORY Stroke
CATEGORY StrokeInheritance
GROUP SmallCap
GROUP Runic

InstructionsOn @8..2047

/* DropOutCtrlOff @255 */

ScanCtrl = 511
ScanType = 4

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

ASM("WS[], 16, 0") /* &amp;amp;lt;== S[16] = threshold ppem that less than or equal is no RES */

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:  1358 /* cap height */
ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:    27 ~   2 @ 61 /* cap height overshoot */
      9:   -27 ~   8 @ 61 /* base line undershoot */
Black
Y
StraightStroke
65: 52 /* Serif height */
67: 62 /* Bar height */
RoundStroke
68: 58 /* round stroke (e.g. top of O) */

LowerCase
Grey
Y
  SquareHeight
      0:  1485 /* lc ascender */
ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")
      6:   900 /* x height */
ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -501 /* lc descender */
ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:  1485 /* lc ascender overshoot */
      7:    11 ~   6 @ 40 /* x height overshoot */
     11:   -23 ~  10 @ 40 /* base line undershoot */
     15:   -20 ~  14 @ 52 /* lc descender undershoot */
Black
Y
StraightStroke
66: 52 /* Serif height */
RoundStroke
69: 57 /* round stroke (e.g. top of o) */
  
Figure
  SquareHeight
      4:  1317 /* figure height */
ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:    17 ~   4 @ 61 /* figure height overshoot */
     13:   -17 ~  12 @ 61 /* base line undershoot */
	89: 1168 /* Std dot height */

Other
  SquareHeight
     16:  1125 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
     17:    42 ~  16 @ 61 /* other height overshoot */
     19:   -42 ~  18 @ 61 /* base line undershoot */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     21:   107 /* 3x */
90: 229 /* vertical height of dot */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     22:   151 /* 1x */
LowerCase
  Black
  X
  StrokeInheritance
     25:    85 /* 2x */
ASM("SVTCA[X]")
ASM("CALL[], 21, 25, 36, 22, 21, 90")

UpperCase
  Black
  Y
  StrokeInheritance
     23:    51 /* 58x */
ASM("SVTCA[X]")
ASM("CALL[], 23, 21, 22, 0, 91")
LowerCase
  Black
  Y
  StrokeInheritance
     26:    84 /* 6x */
ASM("SVTCA[X]")
ASM("CALL[], 26, 63, 25, 255, 91")

UpperCase
  Black
  Diag
  StrokeInheritance
     24:    51 /* 58x */
ASM("SVTCA[X]")
ASM("CALL[], 24, 21, 22, 0, 91")
LowerCase
  Black
  Diag
  StrokeInheritance
     27:    84 /* 6x */
ASM("SVTCA[X]")
ASM("CALL[], 27, 63, 25, 255, 91")

/***** StrokeInheritance CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     28:   131 /* 4x */
ASM("SVTCA[X]")
ASM("CALL[], 28, 51, 23, 22, 92")
     29:   169 =  22 @ 57 /* 11x */
  Y
  StrokeInheritance
     30:    52 =  23 @255 /* 70x */
     31:    57 =  30 @171 /* 11x */
     32:   194 =  23 @  8 /* 1x */
  Diag
  StrokeInheritance
     33:   159 =  22 @128 /* 16x */
     34:   167 =  33 @128 /* 12x */
     35:   139 =  34 @ 37 /* 3x */
     36:   172 =  34 @205 /* 9x */
     37:   161 =  36 @ 94 /* 4x */
     38:   400 =  22 @  5 /* 2x */

LowerCase
  Black
  X
  StrokeInheritance
     39:   117 =  25 @ 32 /* 19x */
     40:    93 =  39 @ 43 /* 6x */
     41:    88 =  40 @205 /* 3x */
     42:   142 =  25 @ 18 /* 32x */
  Y
  StrokeInheritance
     43:    97 =  26 @ 79 /* 49x */
     44:   -37 ~  43 @ 28 /* 19x */
     45:    93 =  43 @103 /* 12x */
     46:   129 =  43 @ 35 /* 5x */
     47:   213 =  26 @  8 /* 1x */
  Diag
  StrokeInheritance
     48:    37 =  27 @ 22 /* 3x */
     49:   123 =  25 @ 27 /* 48x */
     50:    91 =  49 @ 32 /* 17x */
     51:    74 =  50 @ 61 /* 4x */
     52:   102 =  50 @ 94 /* 2x */
     53:   148 =  49 @ 43 /* 2x */

Figure
  Black
  X
  StrokeInheritance
     54:     2 /* 1x */
     55:   142 /* 15x */
  Y
  StrokeInheritance
     56:    66 /* 13x */
     57:   100 /* 8x */
  Diag
  StrokeInheritance
     58:    72 /* 4x */
     59:    83 =  58 @ 94 /* 2x */
     60:   127 /* 4x */

Other
  Black
  X
  StrokeInheritance
     61:   136 /* 21x */
     62:    81 =  61 @ 19 /* 8x */
     63:    75 =  62 @171 /* 7x */
     64:   143 =  61 @147 /* 13x */
/*      65:   116 =  64 @ 38 5x */
/*     66:   280 3x */
  Y
  StrokeInheritance
/*     67:    73 28x */
/*     68:    66 =  67 @147 18x */
/*     69:    79 =  68 @ 79  9x */
     70:   110 =  67 @ 28 /* 10x */
     71:   238 /* 5x */
  Diag
  StrokeInheritance
     72:    84 /* 11x */
     73:   121 /* 27x */
     74:   145 =  73 @ 43 /* 10x */
Y
StraightStroke
88: 61 /* Any bar */


SmallCap
Grey
Y
SquareHeight
75: 1016 /* height */
77: 0 /* baseline */
RoundHeight
76: 21 /* height overshoot */
78: -23 /* baseline undershoot */
Black
Y
StraightStroke
81: 52 /* serif height */
79: 62 /* bar height */
RoundStroke
80: 57 /* round stroke */

Runic
Grey
Y
SquareHeight
85: 1358 /* Rune height */
86: 0 /* Rune baseline */
Black
Y
StraightStroke
87: 52 /* serif height */

</talk>
  </cvt>
  <glyf>
    <TTGlyph ID="0">
      <instructions>
        <talk>/* VTTTalk glyph 0, char 0xffff */
/* GUI generated Sun Feb 23 08:09:23 2020 */

/* Y direction */
YAnchor(0)
YDist(0,4)
YDist(4,10)
YDist(10,16)
YAnchor(1)
YDist(1,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 0, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 4
MDRP[M&lt;RWh], 10
MDRP[m&gt;RBl], 16
MDAP[R], 1
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1">
      <instructions>
        <talk>/* VTTTalk glyph 1, char 0x41 (A) */
/* GUI generated Fri Jan 24 16:17:20 2020 */

/* Y direction */
YAnchor(11,3)
YShift(11,1)
YAnchor(18,8)
YShift(18,0)
YShift(18,17)
YShift(18,22)
YLink(18,19,65)
YShift(19,23)
YInterpolate(11,27,18)
YShift(27,28)
YDist(27,26)
YShift(26,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1, char 0x41 (A) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 11, 3
SHP[1], 1
MIAP[R], 18, 8
SHP[1], 0
SHP[1], 17
SHP[1], 22
MIRP[m&gt;RBl], 19, 65
SHP[2], 23
SRP2[], 11
IP[], 27
SRP1[], 27
SHP[1], 28
SRP0[], 27
MDRP[m&gt;RBl], 26
SHP[2], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="2">
      <instructions>
        <talk>/* VTTTalk glyph 2, char 0xa732 */
/* GUI generated Fri Jan 24 16:20:19 2020 */

/* Y direction */
YAnchor(11,3)
YShift(11,1)
YShift(11,29)
YAnchor(51,8)
YShift(51,17)
YShift(51,18)
YShift(51,22)
YShift(51,47)
YShift(51,52)
YInterpolate(51,37,11)
YShift(37,38)
YShift(37,41)
YShift(37,42)
YDist(37,36)
YShift(36,39)
YShift(36,40)
YShift(36,43)
YLink(51,50,65)
YShift(50,46)
YShift(50,53)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 2, char 0xa732 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 11, 3
SHP[1], 1
SHP[1], 29
MIAP[R], 51, 8
SHP[1], 17
SHP[1], 18
SHP[1], 22
SHP[1], 47
SHP[1], 52
SRP2[], 11
IP[], 37
SRP1[], 37
SHP[1], 38
SHP[1], 41
SHP[1], 42
SRP0[], 37
MDRP[m&lt;RGr], 36
SHP[2], 39
SHP[2], 40
SHP[2], 43
SRP0[], 51
MIRP[m&gt;RBl], 50, 65
SHP[2], 46
SHP[2], 53
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="3">
      <instructions>
        <talk>/* VTTTalk glyph 3, char 0xa734 */
/* GUI generated Thu Apr 16 17:55:30 2020 */

/* Y direction */
YAnchor(11,3)
YShift(11,67)
YShift(11,27)
YAnchor(27)
YLink(27,45,68)
YAnchor(57,8)
YShift(57,0)
YShift(57,58)
YShift(57,69)
YShift(57,18)
YAnchor(18)
YLink(18,36,68)
YLink(57,56,65)
YShift(56,59)
YInterpolate(11,63,57)
YShift(63,64)
YDist(63,62)
YShift(62,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 3, char 0xa734 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 11, 3
SHP[1], 67
SHP[1], 27
MDAP[R], 27
MIRP[m&gt;RBl], 45, 68
MIAP[R], 57, 8
SHP[1], 0
SHP[1], 58
SHP[1], 69
SHP[1], 18
MDAP[R], 18
MIRP[m&gt;RBl], 36, 68
SRP0[], 57
MIRP[m&gt;RBl], 56, 65
SHP[2], 59
SRP2[], 11
IP[], 63
SRP1[], 63
SHP[1], 64
SRP0[], 63
MDRP[m&gt;RBl], 62
SHP[2], 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="4">
      <instructions>
        <talk>/* VTTTalk glyph 4, char 0xa736 */
/* GUI generated Thu Apr 16 17:55:56 2020 */

/* Y direction */
YAnchor(35,2)
YShift(35,9)
YShift(35,22)
YShift(35,31)
YShift(35,38)
YLink(35,36,65)
YShift(36,37)
YAnchor(44,8)
YShift(44,32)
YLink(44,43,65)
YShift(44,0)
YAnchor(0)
YLink(0,17,68)
YInterpolate(35,46,44)
YShift(46,47)
YDist(46,45)
YShift(45,48)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 4, char 0xa736 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 35, 2
SHP[1], 9
SHP[1], 22
SHP[1], 31
SHP[1], 38
MIRP[m&gt;RBl], 36, 65
SHP[2], 37
MIAP[R], 44, 8
SHP[1], 32
MIRP[m&gt;RBl], 43, 65
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 17, 68
SRP1[], 35
SRP2[], 44
IP[], 46
SRP1[], 46
SHP[1], 47
SRP0[], 46
MDRP[m&gt;RBl], 45
SHP[2], 48
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="5">
      <instructions>
        <talk>/* VTTTalk glyph 5, char 0xa738 */
/* GUI generated Fri Jan 24 16:52:37 2020 */

/* Y direction */
YAnchor(19,2)
YShift(19,7)
YShift(19,15)
YLink(19,18,65)
YShift(19,31)
YAnchor(25,8)
YShift(25,0)
YShift(25,14)
YLink(25,24,65)
YShift(25,33)
YInterpolate(19,27,25)
YShift(27,28)
YDist(27,26)
YShift(26,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 5, char 0xa738 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 19, 2
SHP[1], 7
SHP[1], 15
MIRP[m&gt;RBl], 18, 65
SHP[1], 31
MIAP[R], 25, 8
SHP[1], 0
SHP[1], 14
MIRP[m&gt;RBl], 24, 65
SHP[1], 33
SRP2[], 19
IP[], 27
SRP1[], 27
SHP[1], 28
SRP0[], 27
MDRP[m&gt;RBl], 26
SHP[2], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="6">
      <instructions>
        <talk>/* VTTTalk glyph 6, char 0xa73a */
/* GUI generated Fri Jan 24 16:54:32 2020 */

/* Y direction */
YAnchor(23,2)
YShift(23,11)
YShift(23,19)
YLink(23,22,65)
YShift(23,31)
YAnchor(29,8)
YShift(29,4)
YShift(29,18)
YLink(29,28,65)
YShift(29,33)
YIPAnchor(29,1,23)
YLink(1,0,67)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 6, char 0xa73a */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 23, 2
SHP[1], 11
SHP[1], 19
MIRP[m&gt;RBl], 22, 65
SHP[1], 31
MIAP[R], 29, 8
SHP[1], 4
SHP[1], 18
MIRP[m&gt;RBl], 28, 65
SHP[1], 33
SRP2[], 23
IP[], 1
MDAP[R], 1
MIRP[m&gt;RBl], 0, 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="7">
      <instructions>
        <talk>/* VTTTalk glyph 7, char 0xa73c */
/* GUI generated Fri Jan 24 16:58:38 2020 */

/* Y direction */
YAnchor(0,9)
YDist(0,6)
YShift(0,11)
YAnchor(26,8)
YLink(26,25,65)
YShift(26,52)
YAnchor(46,2)
YShift(46,15)
YShift(46,38)
YLink(46,45,65)
YShift(46,50)
YInterpolate(46,29,26)
YShift(29,30)
YDist(29,28)
YShift(28,27)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 7, char 0xa73c */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MDRP[m&gt;RBl], 6
SHP[1], 11
MIAP[R], 26, 8
MIRP[m&gt;RBl], 25, 65
SHP[1], 52
MIAP[R], 46, 2
SHP[1], 15
SHP[1], 38
MIRP[m&gt;RBl], 45, 65
SHP[1], 50
SRP2[], 26
IP[], 29
SRP1[], 29
SHP[1], 30
SRP0[], 29
MDRP[m&gt;RBl], 28
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="8">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 858, 1708, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="9">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 862, 1709, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="10">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 860, 1710, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="11">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 855, 1706, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="12">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 857, 1713, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="13">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 865, 1714, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="14">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 818, 1285, -3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="15">
      <instructions>
        <talk>/* VTTTalk glyph 15, char 0xc5 */
/* GUI generated Fri Jan 24 17:06:45 2020 */

/* Y direction */
YAnchor(15)
YDist(15,30)
YDist(30,23)
YDist(23,8)
YInterpolate(8,5,1,23)
YAnchor(36,8)
YShift(36,0)
YShift(36,4)
YShift(36,40)
YLink(36,37,65)
YShift(37,41)
YInterpolate(36,45,15)
YShift(45,46)
YDist(45,44)
YShift(44,47)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 15, char 0xc5 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MDAP[R], 15
MDRP[M&gt;RBl], 30
MDRP[M&lt;RWh], 23
MDRP[m&lt;RGr], 8
IP[], 5
IP[], 1
MIAP[R], 36, 8
SHP[1], 0
SHP[1], 4
SHP[1], 40
MIRP[m&gt;RBl], 37, 65
SHP[2], 41
SRP2[], 15
IP[], 45
SRP1[], 45
SHP[1], 46
SRP0[], 45
MDRP[m&gt;RBl], 44
SHP[2], 47
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="16">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 864, 1708, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="17">
      <instructions>
        <talk>/* VTTTalk glyph 17, char 0xc6 */
/* GUI generated Fri Jan 24 17:08:27 2020 */

/* Y direction */
YAnchor(6,2)
YShift(6,15)
YShift(6,22)
YLink(6,5,65)
YShift(5,14)
YAnchor(17,8)
YShift(17,16)
YShift(17,21)
YShift(17,25)
YLink(17,18,65)
YShift(18,26)
YIPAnchor(6,34,17)
YShift(34,38)
YLink(34,35,67)
YShift(35,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 17, char 0xc6 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 15
SHP[1], 22
MIRP[m&gt;RBl], 5, 65
SHP[2], 14
MIAP[R], 17, 8
SHP[1], 16
SHP[1], 21
SHP[1], 25
MIRP[m&gt;RBl], 18, 65
SHP[2], 26
SRP2[], 6
IP[], 34
MDAP[R], 34
SHP[1], 38
MIRP[m&gt;RBl], 35, 67
SHP[2], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="18">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 17, 0, 0
OVERLAP[]
OFFSET[R], 858, 1909, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="19">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 17, 0, 0
OVERLAP[]
OFFSET[R], 865, 1915, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="20">
      <instructions>
        <talk>/* VTTTalk glyph 20, char 0x42 (B) */
/* GUI generated Fri Jan 24 17:09:17 2020 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YLink(4,5,65)
YAnchor(26,2)
YShift(26,1)
YLink(26,25,65)
YIPAnchor(26,16,4)
YLink(16,15,65)
YShift(15,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 20, char 0x42 (B) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
MIRP[m&gt;RBl], 5, 65
MIAP[R], 26, 2
SHP[1], 1
MIRP[m&gt;RBl], 25, 65
SRP2[], 4
IP[], 16
MDAP[R], 16
MIRP[m&gt;RBl], 15, 65
SHP[2], 36
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="21">
      <instructions>
        <talk>/* VTTTalk glyph 21, char 0x43 (C) */
/* GUI generated Fri Jan 24 17:10:36 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,33,68)
YShift(0,39)
YAnchor(9,3)
YShift(9,15)
YLink(9,23,68)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 21, char 0x43 (C) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 33, 68
SHP[1], 39
MIAP[R], 9, 3
SHP[1], 15
MIRP[m&gt;RBl], 23, 68
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="22">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OVERLAP[]
OFFSET[R], 858, 1221, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="23">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OVERLAP[]
OFFSET[R], 861, 1227, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="24">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OVERLAP[]
OFFSET[R], 817, 1190, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="25">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OVERLAP[]
OFFSET[R], 856, 1217, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="26">
      <instructions>
        <talk>/* VTTTalk glyph 26, char 0x44 (D) */
/* GUI generated Sun Jan 26 17:00:45 2020 */

/* Y direction */
YAnchor(0,8)
YLink(0,1,65)
YShift(0,37)
YAnchor(23,3)
YDist(23,16,&gt;=)
YShift(23,39)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 26, char 0x44 (D) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 1, 65
SHP[1], 37
MIAP[R], 23, 3
MDRP[m&gt;RGr], 16
SHP[1], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="27">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OVERLAP[]
OFFSET[R], 825, 973, 283
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="28">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 26, 0, 0
OVERLAP[]
OFFSET[R], 861, 1316, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="29">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 27, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="30">
      <instructions>
        <talk>/* VTTTalk glyph 30, char 0x45 (E) */
/* GUI generated Fri Jan 24 23:01:56 2020 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YLink(4,5,65)
YAnchor(27,2)
YShift(27,1)
YLink(27,26,65)
YIPAnchor(27,13,4)
YShift(13,17)
YDist(13,14)
YShift(14,18)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 30, char 0x45 (E) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
MIRP[m&gt;RBl], 5, 65
MIAP[R], 27, 2
SHP[1], 1
MIRP[m&gt;RBl], 26, 65
SRP2[], 4
IP[], 13
MDAP[R], 13
SHP[1], 17
MDRP[m&lt;RGr], 14
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="31">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 858, 1312, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="32">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 862, 1313, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="33">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 861, 1318, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="34">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 860, 1314, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="35">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 855, 1310, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="36">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 856, 1308, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="37">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 857, 1317, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="38">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 865, 1318, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="39">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OVERLAP[]
OFFSET[R], 818, 1480, -3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="40">
      <instructions>
        <talk>/* VTTTalk glyph 40, char 0x46 (F) */
/* GUI generated Fri Jan 24 23:03:02 2020 */

/* Y direction */
YAnchor(10,2)
YShift(10,1)
YLink(10,9,65)
YAnchor(13,8)
YShift(13,0)
YLink(13,14,65)
YIPAnchor(10,18,13)
YShift(18,22)
YLink(18,17,67)
YShift(17,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 40, char 0x46 (F) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 10, 2
SHP[1], 1
MIRP[m&gt;RBl], 9, 65
MIAP[R], 13, 8
SHP[1], 0
MIRP[m&gt;RBl], 14, 65
SRP2[], 10
IP[], 18
MDAP[R], 18
SHP[1], 22
MIRP[m&gt;RBl], 17, 67
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="41">
      <instructions>
        <talk>/* VTTTalk glyph 41, char 0x47 (G) */
/* GUI generated Fri Jan 24 23:04:02 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,32,68)
YAnchor(9,3)
YShift(9,14)
YLink(9,21,68)
YIPAnchor(9,45,0)
YLink(45,46,65)
YShift(46,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 41, char 0x47 (G) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 32, 68
MIAP[R], 9, 3
SHP[1], 14
MIRP[m&gt;RBl], 21, 68
SRP2[], 0
IP[], 45
MDAP[R], 45
MIRP[m&gt;RBl], 46, 65
SHP[2], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="42">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 816, 1271, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="43">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 856, 1206, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="44">
      <instructions>
        <talk>/* VTTTalk glyph 44, char 0x21c */
/* GUI generated Thu Feb 20 18:19:04 2020 */

/* Y direction */
YAnchor(0,9)
YDist(0,1)
YAnchor(29,3)
YLink(29,20,68)
YShift(29,47)
YInterpolate(29,36,12,0)
YShift(12,13)
YShift(29,24)
YShift(24,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 44, char 0x21c */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MDRP[m&gt;RBl], 1
MIAP[R], 29, 3
MIRP[m&gt;RBl], 20, 68
SHP[1], 47
SRP2[], 0
IP[], 36
IP[], 12
SRP1[], 12
SHP[1], 13
SRP1[], 29
SHP[1], 24
SRP1[], 24
SHP[1], 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="45">
      <instructions>
        <talk>/* VTTTalk glyph 45, char 0x48 (H) */
/* GUI generated Sat Feb 22 16:07:14 2020 */

/* Y direction */
YAnchor(13,2)
YShift(13,5)
YShift(13,9)
YShift(13,17)
YLink(13,12,65)
YShift(12,16)
YAnchor(20,8)
YShift(20,4)
YShift(20,8)
YShift(20,24)
YIPAnchor(13,0,20)
YLink(0,1,67)
YLink(20,21,65)
YShift(21,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 45, char 0x48 (H) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 13, 2
SHP[1], 5
SHP[1], 9
SHP[1], 17
MIRP[m&gt;RBl], 12, 65
SHP[2], 16
MIAP[R], 20, 8
SHP[1], 4
SHP[1], 8
SHP[1], 24
SRP2[], 13
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 67
SRP0[], 20
MIRP[m&gt;RBl], 21, 65
SHP[2], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="46">
      <instructions>
        <talk>/* VTTTalk glyph 46, char 0x49 (I) */
/* GUI generated Fri Jan 24 23:12:40 2020 */

/* Y direction */
YAnchor(5,2)
YShift(5,1)
YLink(5,4,65)
YAnchor(8,8)
YShift(8,0)
YLink(8,9,65)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 46, char 0x49 (I) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 5, 2
SHP[1], 1
MIRP[m&gt;RBl], 4, 65
MIAP[R], 8, 8
SHP[1], 0
MIRP[m&gt;RBl], 9, 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="47">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 56, 763, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="48">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 858, 1017, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="49">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 862, 1018, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="50">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 860, 1019, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="51">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 855, 1015, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="52">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 856, 1013, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="53">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 857, 1022, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="54">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 865, 1023, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="55">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OVERLAP[]
OFFSET[R], 818, 606, -3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="56">
      <instructions>
        <talk>/* VTTTalk Unicode 0x4a (J) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 31 2 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(31,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(31,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,6) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(31,19)

Smooth()

</talk>
        <assembly>/* TT glyph 56, char 0x4a (J) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 31, 2
MDRP[m&gt;RBl], 30
SRP0[], 0
MDRP[m&gt;RBl], 6
SRP1[], 31
SHP[1], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="57">
      <instructions>
        <talk>/* VTTTalk glyph 57, char 0x4b (K) */
/* GUI generated Fri Jan 24 23:14:54 2020 */

/* Y direction */
YAnchor(20,8)
YShift(20,0)
YShift(20,19)
YShift(20,24)
YLink(20,21,65)
YShift(21,25)
YAnchor(29,2)
YShift(29,1)
YShift(29,16)
YShift(29,33)
YIPAnchor(29,9,20)
YInterpolate(29,18,17,9)
YLink(9,10,65)
YLink(29,28,65)
YShift(28,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 57, char 0x4b (K) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 20, 8
SHP[1], 0
SHP[1], 19
SHP[1], 24
MIRP[m&gt;RBl], 21, 65
SHP[2], 25
MIAP[R], 29, 2
SHP[1], 1
SHP[1], 16
SHP[1], 33
SRP2[], 20
IP[], 9
MDAP[R], 9
SRP2[], 29
IP[], 18
IP[], 17
MIRP[m&gt;RBl], 10, 65
SRP0[], 29
MIRP[m&gt;RBl], 28, 65
SHP[2], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="58">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OVERLAP[]
OFFSET[R], 816, 1124, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="59">
      <instructions>
        <talk>/* VTTTalk glyph 59, char 0x4c (L) */
/* GUI generated Fri Jan 24 23:16:56 2020 */

/* Y direction */
YAnchor(0,8)
YLink(0,1,65)
YShift(0,9)
YAnchor(14,2)
YShift(14,10)
YLink(14,13,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 59, char 0x4c (L) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 1, 65
SHP[1], 9
MIAP[R], 14, 2
SHP[1], 10
MIRP[m&gt;RBl], 13, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="60">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OVERLAP[]
OFFSET[R], 858, 1047, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="61">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OVERLAP[]
OFFSET[R], 795, 1351, 32
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="62">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OVERLAP[]
OFFSET[R], 816, 1181, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="63">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OVERLAP[]
OFFSET[R], 867, 1002, -40

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="64">
      <instructions>
        <talk>/* VTTTalk glyph 64, char 0x4d (M) */
/* GUI generated Fri Jan 24 23:19:05 2020 */

/* Y direction */
YAnchor(4,2)
YShift(4,1)
YShift(4,14)
YShift(4,18)
YShift(4,21)
YShift(4,26)
YLink(4,3,65)
YShift(3,16)
YAnchor(28,8)
YShift(28,19)
YShift(28,20)
YShift(28,24)
YShift(28,32)
YLink(28,29,65)
YShift(29,33)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 64, char 0x4d (M) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 4, 2
SHP[1], 1
SHP[1], 14
SHP[1], 18
SHP[1], 21
SHP[1], 26
MIRP[m&gt;RBl], 3, 65
SHP[2], 16
MIAP[R], 28, 8
SHP[1], 19
SHP[1], 20
SHP[1], 24
SHP[1], 32
MIRP[m&gt;RBl], 29, 65
SHP[2], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="65">
      <instructions>
        <talk>/* VTTTalk glyph 65, char 0x4e (N) */
/* GUI generated Fri Jan 24 23:24:02 2020 */

/* Y direction */
YAnchor(9,2)
YShift(9,25)
YShift(9,29)
YShift(9,33)
YLink(9,8,65)
YShift(8,32)
YAnchor(20,8)
YShift(20,0)
YShift(20,24)
YShift(20,31)
YLink(20,21,65)
YShift(21,18)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 65, char 0x4e (N) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 9, 2
SHP[1], 25
SHP[1], 29
SHP[1], 33
MIRP[m&gt;RBl], 8, 65
SHP[2], 32
MIAP[R], 20, 8
SHP[1], 0
SHP[1], 24
SHP[1], 31
MIRP[m&gt;RBl], 21, 65
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="66">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 65, 0, 0
OVERLAP[]
OFFSET[R], 858, 1379, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="67">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 65, 0, 0
OVERLAP[]
OFFSET[R], 861, 1385, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="68">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 65, 0, 0
OVERLAP[]
OFFSET[R], 816, 1261, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="69">
      <instructions>
        <talk>/* VTTTalk glyph 69, char 0x14a */
/* GUI generated Fri Jan 24 23:26:50 2020 */

/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(24,2)
YShift(24,32)
YShift(24,43)
YShift(24,47)
YLink(24,23,65)
YShift(23,42)
YAnchor(38,8)
YLink(38,39,65)
YShift(38,46)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 69, char 0x14a */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MIAP[R], 24, 2
SHP[1], 32
SHP[1], 43
SHP[1], 47
MIRP[m&gt;RBl], 23, 65
SHP[2], 42
MIAP[R], 38, 8
MIRP[m&gt;RBl], 39, 65
SHP[1], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="70">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 65, 0, 0
OVERLAP[]
OFFSET[R], 864, 1379, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="71">
      <instructions>
        <talk>/* VTTTalk glyph 71, char 0x4f (O) */
/* GUI generated Fri Jan 24 23:27:44 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,20,68)
YAnchor(10,3)
YLink(10,31,68)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 71, char 0x4f (O) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 20, 68
MIAP[R], 10, 3
MIRP[m&gt;RBl], 31, 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="72">
      <instructions>
        <talk>/* VTTTalk glyph 72, char 0xa74e */
/* GUI generated Fri Jan 24 23:29:01 2020 */

/* Y direction */
YAnchor(0,9)
YShift(0,27)
YLink(0,34,68)
YShift(34,58)
YAnchor(10,3)
YShift(10,17)
YLink(10,47,68)
YShift(47,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 72, char 0xa74e */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 27
MIRP[m&gt;RBl], 34, 68
SHP[2], 58
MIAP[R], 10, 3
SHP[1], 17
MIRP[m&gt;RBl], 47, 68
SHP[2], 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="73">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 858, 1059, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="74">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 862, 1060, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="75">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 860, 1061, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="76">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 855, 1057, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="77">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 857, 1064, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="78">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 859, 1063, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="79">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 865, 1065, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="80">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 818, 979, -13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="81">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 868, 1214, 9

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="82">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OVERLAP[]
OFFSET[R], 858, 1059, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="83">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 864, 1059, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="84">
      <instructions>
        <talk>/* VTTTalk glyph 84, char 0x152 */
/* GUI generated Thu Apr 16 17:57:52 2020 */

/* Y direction */
YAnchor(24,8)
YLink(24,16,65)
YShift(24,0)
YAnchor(0)
YLink(0,27,67)
YAnchor(61,2)
YShift(61,14)
YLink(61,60,65)
YShift(61,10)
YAnchor(10)
YLink(10,36,68)
YIPAnchor(61,47,24)
YShift(47,51)
YLink(47,48,67)
YShift(48,52)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 84, char 0x152 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 24, 8
MIRP[m&gt;RBl], 16, 65
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 27, 67
MIAP[R], 61, 2
SHP[1], 14
MIRP[m&gt;RBl], 60, 65
SHP[1], 10
MDAP[R], 10
MIRP[m&gt;RBl], 36, 68
SRP1[], 61
SRP2[], 24
IP[], 47
MDAP[R], 47
SHP[1], 51
MIRP[m&gt;RBl], 48, 67
SHP[2], 52
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="85">
      <instructions>
        <talk>/* VTTTalk glyph 85, char 0x50 (P) */
/* GUI generated Fri Jan 24 23:33:28 2020 */

/* Y direction */
YAnchor(21,2)
YShift(21,1)
YLink(21,20,65)
YAnchor(30,8)
YShift(30,0)
YLink(30,31,65)
YIPAnchor(21,4,30)
YDist(4,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 85, char 0x50 (P) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 21, 2
SHP[1], 1
MIRP[m&gt;RBl], 20, 65
MIAP[R], 30, 8
SHP[1], 0
MIRP[m&gt;RBl], 31, 65
SRP2[], 21
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="86">
      <instructions>
        <talk>/* VTTTalk glyph 86, char 0xa767 */
/* GUI generated Fri Jan 24 23:34:43 2020 */

/* Y direction */
YAnchor(5,2)
YShift(5,1)
YLink(5,4,65)
YAnchor(8,8)
YShift(8,0)
YLink(8,9,65)
YIPAnchor(5,29,12,8)
YDist(29,28)
YDist(12,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 86, char 0xa767 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 5, 2
SHP[1], 1
MIRP[m&gt;RBl], 4, 65
MIAP[R], 8, 8
SHP[1], 0
MIRP[m&gt;RBl], 9, 65
SRP2[], 5
IP[], 29
IP[], 12
MDAP[R], 29
MDAP[R], 12
SRP0[], 29
MDRP[m&gt;RBl], 28
SRP0[], 12
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="87">
      <instructions>
        <talk>/* VTTTalk glyph 87, char 0x51 (Q) */
/* GUI generated Fri Jan 24 23:36:15 2020 */

/* Y direction */
YAnchor(11,3)
YLink(11,40,68)
YAnchor(21,9)
YDist(21,28)
YShift(21,51)
YShift(21,0)
YDist(0,55)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 87, char 0x51 (Q) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 11, 3
MIRP[m&gt;RBl], 40, 68
MIAP[R], 21, 9
MDRP[m&lt;RGr], 28
SHP[1], 51
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 55
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="88">
      <instructions>
        <talk>/* VTTTalk glyph 88, char 0x52 (R) */
/* GUI generated Fri Jan 24 23:37:12 2020 */

/* Y direction */
YAnchor(21,2)
YLink(21,20,65)
YShift(21,46)
YAnchor(41,8)
YShift(41,0)
YShift(41,39)
YLink(41,42,65)
YShift(41,45)
YIPAnchor(21,7,41)
YDist(7,11)
YShift(7,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 88, char 0x52 (R) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 21, 2
MIRP[m&gt;RBl], 20, 65
SHP[1], 46
MIAP[R], 41, 8
SHP[1], 0
SHP[1], 39
MIRP[m&gt;RBl], 42, 65
SHP[1], 45
SRP2[], 21
IP[], 7
MDAP[R], 7
MDRP[m&lt;RGr], 11
SHP[1], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="89">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OVERLAP[]
OFFSET[R], 858, 1215, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="90">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OVERLAP[]
OFFSET[R], 861, 1221, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="91">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OVERLAP[]
OFFSET[R], 816, 1219, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="92">
      <instructions>
        <talk>/* VTTTalk glyph 92, char 0x53 (S) */
/* GUI generated Thu Feb 20 18:47:32 2020 */

/* Y direction */
YAnchor(0,9)
YShift(0,7)
YLink(0,17,68)
YAnchor(31,3)
YShift(31,36)
YLink(31,46,68)
YInterpolate(0,24,53,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 92, char 0x53 (S) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 7
MIRP[m&gt;RBl], 17, 68
MIAP[R], 31, 3
SHP[1], 36
MIRP[m&gt;RBl], 46, 68
SRP2[], 0
IP[], 24
IP[], 53
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="93">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OVERLAP[]
OFFSET[R], 858, 1112, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="94">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OVERLAP[]
OFFSET[R], 861, 1118, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="95">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OVERLAP[]
OFFSET[R], 817, 934, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="96">
      <instructions>
        <talk>/* VTTTalk glyph 96, char 0x1e9e */
/* GUI generated Thu Apr 16 17:58:28 2020 */

/* Y direction */
YAnchor(41,3)
YShift(41,22)
YLink(41,27,68)
YAnchor(59,8)
YShift(59,33)
YLink(59,58,65)
YShift(59,0)
YAnchor(0)
YLink(0,13,68)
YInterpolate(59,20,47,41)
YShift(20,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 96, char 0x1e9e */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 41, 3
SHP[1], 22
MIRP[m&gt;RBl], 27, 68
MIAP[R], 59, 8
SHP[1], 33
MIRP[m&gt;RBl], 58, 65
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 13, 68
SRP1[], 59
SRP2[], 41
IP[], 20
IP[], 47
SRP1[], 20
SHP[1], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="97">
      <instructions>
        <talk>/* VTTTalk glyph 97, char 0x54 (T) */
/* GUI generated Fri Jan 24 23:42:14 2020 */

/* Y direction */
YAnchor(5,2)
YShift(5,2)
YShift(5,10)
YLink(5,17,65)
YShift(5,23)
YAnchor(26,8)
YShift(26,22)
YLink(26,27,65)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 97, char 0x54 (T) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 5, 2
SHP[1], 2
SHP[1], 10
MIRP[m&gt;RBl], 17, 65
SHP[1], 23
MIAP[R], 26, 8
SHP[1], 22
MIRP[m&gt;RBl], 27, 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="98">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 97, 0, 0
OVERLAP[]
OFFSET[R], 825, 1291, 282

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="99">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 97, 0, 0
OVERLAP[]
OFFSET[R], 861, 1379, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="100">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 97, 0, 0
OVERLAP[]
OFFSET[R], 817, 1149, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="101">
      <instructions>
        <talk>/* VTTTalk glyph 101, char 0x55 (U) */
/* GUI generated Fri Jan 24 23:43:07 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,15,68)
YAnchor(29,2)
YShift(29,8)
YShift(29,21)
YShift(29,33)
YLink(29,28,65)
YShift(28,32)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 101, char 0x55 (U) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 15, 68
MIAP[R], 29, 2
SHP[1], 8
SHP[1], 21
SHP[1], 33
MIRP[m&gt;RBl], 28, 65
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="102">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 858, 1415, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="103">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 862, 1416, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="104">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 860, 1417, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="105">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 855, 1413, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="106">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 857, 1420, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="107">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 859, 1419, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="108">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 865, 1421, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="109">
      <instructions>
        <talk>/* VTTTalk glyph 109, char 0x172 */
/* GUI generated Thu Feb 20 18:52:59 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,15,68)
YShift(0,26)
YShift(0,44)
YAnchor(31,2)
YShift(31,8)
YShift(31,20)
YShift(31,34)
YLink(31,32,65)
YShift(32,33)
YDist(44,37)
YAnchor(37)
YDist(37,50)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 109, char 0x172 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 15, 68
SHP[1], 26
SHP[1], 44
MIAP[R], 31, 2
SHP[1], 8
SHP[1], 20
SHP[1], 34
MIRP[m&gt;RBl], 32, 65
SHP[2], 33
SRP0[], 44
MDRP[m&lt;RGr], 37
MDAP[R], 37
MDRP[m&gt;RBl], 50
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="110">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 863, 1437, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="111">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OVERLAP[]
OFFSET[R], 864, 1415, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="112">
      <instructions>
        <talk>/* VTTTalk Unicode 0x56 (V) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 10 2 */
/* Min and Max */
YAnchor(0,9)	/* min, CVT */
YAnchor(10,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(10,14) /*stroke, CVT of another stroke*/
YDist(14,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(10,9) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(10,6)

/* Extreme Max */
YShift(10,2)

Smooth()
</talk>
        <assembly>/* TT glyph 112, char 0x56 (V) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIAP[R], 10, 2
SHP[1], 14
SRP0[], 14
MDRP[m&gt;RBl], 13
SRP0[], 10
MDRP[m&gt;RBl], 9
SHP[1], 6
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="113">
      <instructions>
        <talk>/* VTTTalk glyph 113, char 0x57 (W) */
/* GUI generated Fri Jan 24 23:45:16 2020 */

/* Y direction */
YAnchor(8,9)
YShift(8,0)
YShift(8,4)
YShift(8,12)
YAnchor(17,2)
YShift(17,1)
YShift(17,6)
YShift(17,10)
YShift(17,13)
YShift(17,21)
YShift(17,25)
YLink(17,16,65)
YShift(16,20)
YShift(16,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 113, char 0x57 (W) */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 8, 9
SHP[1], 0
SHP[1], 4
SHP[1], 12
MIAP[R], 17, 2
SHP[1], 1
SHP[1], 6
SHP[1], 10
SHP[1], 13
SHP[1], 21
SHP[1], 25
MIRP[m&gt;RBl], 16, 65
SHP[2], 20
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="114">
      <instructions>
        <talk>/* VTTTalk glyph 114, char 0xa760 */
/* GUI generated Fri Jan 24 23:47:53 2020 */

/* Y direction */
YAnchor(4,9)
YShift(4,8)
YAnchor(17,2)
YShift(17,1)
YShift(17,6)
YShift(17,9)
YShift(17,14)
YShift(17,21)
YShift(17,39)
YLink(17,16,65)
YShift(16,15)
YShift(16,20)
YAnchor(24)
YDist(24,30)
YShift(24,35)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 114, char 0xa760 */
/* VTT 6.31 compiler Sat May 16 18:56:26 2020 */
SVTCA[Y]
MIAP[R], 4, 9
SHP[1], 8
MIAP[R], 17, 2
SHP[1], 1
SHP[1], 6
SHP[1], 9
SHP[1], 14
SHP[1], 21
SHP[1], 39
MIRP[m&gt;RBl], 16, 65
SHP[2], 15
SHP[2], 20
MDAP[R], 24
MDRP[m&gt;RBl], 30
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="115">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 113, 0, 0
OVERLAP[]
OFFSET[R], 858, 1653, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="116">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 113, 0, 0
OVERLAP[]
OFFSET[R], 860, 1655, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="117">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 113, 0, 0
OVERLAP[]
OFFSET[R], 855, 1651, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="118">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 113, 0, 0
OVERLAP[]
OFFSET[R], 857, 1658, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="119">
      <instructions>
        <talk>/* VTTTalk glyph 119, char 0x1f7 */
/* GUI generated Fri Jan 24 23:50:08 2020 */

/* Y direction */
YAnchor(16,2)
YShift(16,1)
YLink(16,15,65)
YAnchor(30,8)
YShift(30,3)
YLink(30,29,65)
YInterpolate(30,4,16)
YDist(4,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 119, char 0x1f7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 16, 2
SHP[1], 1
MIRP[m&gt;RBl], 15, 65
MIAP[R], 30, 8
SHP[1], 3
MIRP[m&gt;RBl], 29, 65
SRP2[], 16
IP[], 4
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="120">
      <instructions>
        <talk>/* VTTTalk glyph 120, char 0x58 (X) */
/* GUI generated Fri Jan 24 23:52:16 2020 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YShift(4,8)
YShift(4,12)
YLink(4,5,65)
YShift(5,13)
YAnchor(17,2)
YShift(17,1)
YShift(17,22)
YShift(17,25)
YInterpolate(17,21,10,4)
YShift(21,20)
YShift(10,9)
YLink(17,16,65)
YShift(16,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 120, char 0x58 (X) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
SHP[1], 8
SHP[1], 12
MIRP[m&gt;RBl], 5, 65
SHP[2], 13
MIAP[R], 17, 2
SHP[1], 1
SHP[1], 22
SHP[1], 25
SRP2[], 4
IP[], 21
IP[], 10
SRP1[], 21
SHP[1], 20
SRP1[], 10
SHP[1], 9
MIRP[m&gt;RBl], 16, 65
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="121">
      <instructions>
        <talk>/* VTTTalk glyph 121, char 0x59 (Y) */
/* GUI generated Fri Jan 24 23:54:19 2020 */

/* Y direction */
YAnchor(13,2)
YShift(13,3)
YShift(13,8)
YShift(13,17)
YLink(13,12,65)
YShift(12,16)
YAnchor(20,8)
YShift(20,0)
YLink(20,21,65)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 121, char 0x59 (Y) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 2
SHP[1], 3
SHP[1], 8
SHP[1], 17
MIRP[m&gt;RBl], 12, 65
SHP[2], 16
MIAP[R], 20, 8
SHP[1], 0
MIRP[m&gt;RBl], 21, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="122">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 858, 1323, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="123">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 860, 1325, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="124">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 855, 1321, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="125">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 857, 1328, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="126">
      <instructions>
        <talk>/* VTTTalk glyph 126, char 0x5a (Z) */
/* GUI generated Fri Jan 24 23:55:42 2020 */

/* Y direction */
YAnchor(5,8)
YShift(5,0)
YShift(5,22)
YLink(5,23,65)
YAnchor(19,2)
YShift(19,7)
YLink(19,9,65)
YShift(19,16)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 126, char 0x5a (Z) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 0
SHP[1], 22
MIRP[m&gt;RBl], 23, 65
MIAP[R], 19, 2
SHP[1], 7
MIRP[m&gt;RBl], 9, 65
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="127">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 126, 0, 0
OVERLAP[]
OFFSET[R], 858, 1262, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="128">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 126, 0, 0
OVERLAP[]
OFFSET[R], 861, 1268, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="129">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 126, 0, 0
OVERLAP[]
OFFSET[R], 856, 1258, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="130">
      <instructions>
        <talk>/* VTTTalk glyph 130, char 0x126 */
/* GUI generated Sat Jan 25 06:15:29 2020 */

/* Y direction */
YAnchor(14,2)
YShift(14,6)
YShift(14,9)
YShift(14,17)
YLink(14,15,65)
YShift(15,16)
YAnchor(23,8)
YShift(23,7)
YShift(23,8)
YShift(23,24)
YIPAnchor(14,28,0,23)
YLink(28,29,67)
YLink(0,1,67)
YLink(23,22,65)
YShift(22,25)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 130, char 0x126 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 2
SHP[1], 6
SHP[1], 9
SHP[1], 17
MIRP[m&gt;RBl], 15, 65
SHP[2], 16
MIAP[R], 23, 8
SHP[1], 7
SHP[1], 8
SHP[1], 24
SRP2[], 14
IP[], 28
IP[], 0
MDAP[R], 28
MDAP[R], 0
SRP0[], 28
MIRP[m&gt;RBl], 29, 67
SRP0[], 0
MIRP[m&gt;RBl], 1, 67
SRP0[], 23
MIRP[m&gt;RBl], 22, 65
SHP[2], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="131">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 126, 0, 0
OVERLAP[]
OFFSET[R], 866, 1185, 300
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="132">
      <instructions>
        <talk>/* VTTTalk glyph 132, char 0x1f6 */
/* GUI generated Thu Apr 16 17:59:24 2020 */

/* Y direction */
YAnchor(48,2)
YShift(48,8)
YShift(48,44)
YShift(48,55)
YLink(48,49,65)
YShift(49,54)
YAnchor(53,8)
YShift(53,45)
YLink(53,52,65)
YShift(53,0)
YAnchor(0)
YLink(0,16,68)
YIPAnchor(48,29,38,53)
YLink(38,39,67)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 132, char 0x1f6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 48, 2
SHP[1], 8
SHP[1], 44
SHP[1], 55
MIRP[m&gt;RBl], 49, 65
SHP[2], 54
MIAP[R], 53, 8
SHP[1], 45
MIRP[m&gt;RBl], 52, 65
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 16, 68
SRP1[], 48
SRP2[], 53
IP[], 29
IP[], 38
MDAP[R], 29
MDAP[R], 38
MIRP[m&gt;RBl], 39, 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="133">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 15, 0, 0
OVERLAP[]
OFFSET[R], 858, 2201, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="134">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 865, 1329, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="135">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OVERLAP[]
OFFSET[R], 825, 986, 285
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="136">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 856, 1319, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="137">
      <instructions>
        <talk>/* VTTTalk glyph 137, char 0x2c62 */
/* GUI generated Sat Jan 25 06:20:32 2020 */

/* Y direction */
YAnchor(24,8)
YLink(24,25,65)
YShift(24,33)
YAnchor(38,2)
YShift(38,34)
YLink(38,37,65)
YIPAnchor(38,12,0,24)
YDist(12,5)
YDist(0,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 137, char 0x2c62 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 24, 8
MIRP[m&gt;RBl], 25, 65
SHP[1], 33
MIAP[R], 38, 2
SHP[1], 34
MIRP[m&gt;RBl], 37, 65
SRP2[], 24
IP[], 12
IP[], 0
MDAP[R], 12
MDAP[R], 0
SRP0[], 12
MDRP[m&gt;RBl], 5
SRP0[], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="138">
      <instructions>
        <talk>/* VTTTalk glyph 138, char 0xa74a */
/* GUI generated Sat Jan 25 06:24:37 2020 */

/* Y direction */
YAnchor(4,9)
YLink(4,24,68)
YAnchor(14,3)
YLink(14,36,68)
YIPAnchor(14,0,4)
YLink(0,1,67)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 138, char 0xa74a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 9
MIRP[m&gt;RBl], 24, 68
MIAP[R], 14, 3
MIRP[m&gt;RBl], 36, 68
SRP2[], 4
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="139">
      <instructions>
        <talk>/* VTTTalk glyph 139, char 0xffff */
/* GUI generated Sat Jan 25 06:26:28 2020 */

/* Y direction */
YAnchor(13,3)
YLink(13,51,68)
YAnchor(23,9)
YLink(23,39,68)
YDist(23,0)
YDist(0,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 139, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 3
MIRP[m&gt;RBl], 51, 68
MIAP[R], 23, 9
MIRP[m&gt;RBl], 39, 68
MDRP[M&lt;RGr], 0
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="140">
      <instructions>
        <talk>/* VTTTalk glyph 140, char 0xffff */
/* GUI generated Sat Jan 25 06:29:05 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,3)
YShift(8,37)
YDist(37,28)
YAnchor(15,9)
YDist(15,16)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 140, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 3
SHP[1], 37
SRP0[], 37
MDRP[m&gt;RBl], 28
MIAP[R], 15, 9
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="141">
      <instructions>
        <talk>/* VTTTalk glyph 141, char 0xffff */
/* GUI generated Sat Jan 25 06:31:47 2020 */

/* Y direction */
YAnchor(44,3)
YShift(44,30)
YAnchor(51,8)
YShift(51,37)
YLink(51,52,65)
YShift(51,0)
YDist(0,24)
YInterpolate(44,8,55,51)
YDist(8,14)
YShift(8,18)
YShift(55,58)
YDist(55,56)
YShift(56,57)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 141, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 44, 3
SHP[1], 30
MIAP[R], 51, 8
SHP[1], 37
MIRP[m&gt;RBl], 52, 65
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 24
SRP1[], 44
SRP2[], 51
IP[], 8
IP[], 55
SRP0[], 8
MDRP[m&gt;RBl], 14
SHP[1], 18
SRP1[], 55
SHP[1], 58
SRP0[], 55
MDRP[m&gt;RBl], 56
SHP[2], 57
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="142">
      <instructions>
        <talk>/* VTTTalk glyph 142, char 0xffff */
/* GUI generated Thu Feb 20 19:35:56 2020 */

/* Y direction */
YAnchor(0,8)
YLink(0,1,65,&gt;=)
YShift(0,60)
YAnchor(46,3)
YLink(46,16,65,&gt;=)
YShift(46,61)
YInterpolate(0,36,46)
YDist(36,26)
YShift(36,27)
YDist(36,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 142, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 1, 65
SHP[1], 60
MIAP[R], 46, 3
MIRP[m&gt;RGr], 16, 65
SHP[1], 61
SRP2[], 0
IP[], 36
SRP0[], 36
MDRP[m&gt;RBl], 26
SHP[1], 27
MDRP[m&lt;RGr], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="143">
      <instructions>
        <talk>/* VTTTalk glyph 142, char 0xffff */
/* GUI generated Sat Jan 25 06:34:12 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,11)
YAnchor(44,3)
YShift(44,51)
YDist(44,61)
YInterpolate(44,32,0)
YShift(32,35)
YDist(32,33)
YShift(33,34)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 143, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 11
MIAP[R], 44, 3
SHP[1], 51
MDRP[m&gt;RBl], 61
SRP2[], 0
IP[], 32
SRP1[], 32
SHP[1], 35
SRP0[], 32
MDRP[m&gt;RBl], 33
SHP[2], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="144">
      <instructions>
        <talk>/* VTTTalk glyph 144, char 0xffff */
/* GUI generated Thu Feb 20 19:39:36 2020 */

/* Y direction */
YAnchor(42,2)
YLink(42,17,65)
YShift(42,56)
YAnchor(51,8)
YLink(51,52,65)
YShift(51,55)
YIPAnchor(51,0,34,42)
YDist(0,7)
YDist(34,24)
YShift(34,25)
YDist(34,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 144, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 42, 2
MIRP[m&gt;RBl], 17, 65
SHP[1], 56
MIAP[R], 51, 8
MIRP[m&gt;RBl], 52, 65
SHP[1], 55
SRP2[], 42
IP[], 0
IP[], 34
MDAP[R], 0
MDAP[R], 34
SRP0[], 0
MDRP[m&gt;RBl], 7
SRP0[], 34
MDRP[m&gt;RBl], 24
SHP[1], 25
MDRP[m&lt;RGr], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="145">
      <instructions>
        <talk>/* VTTTalk glyph 145, char 0xffff */
/* GUI generated Thu Apr 16 18:00:13 2020 */

/* Y direction */
YAnchor(0,9)
YDist(0,51)
YDist(0,58)
YAnchor(34,2)
YLink(34,25,68)
YDelta(25,-1/4@12..25,-3/8@26..34,-1/2@35..50)
YShift(34,67)
YAnchor(72,8)
YShift(72,68)
YLink(72,71,65)
YIPAnchor(34,11,72)
YDist(11,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 145, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MDRP[m&gt;RBl], 51
MDRP[m&lt;RGr], 58
MIAP[R], 34, 2
MIRP[m&gt;RBl], 25, 68
CALL[], 25, -16, 12, 25, 72
CALL[], 25, -24, 26, 34, 72
CALL[], 25, -32, 35, 50, 72
SHP[1], 67
MIAP[R], 72, 8
SHP[1], 68
MIRP[m&gt;RBl], 71, 65
SRP2[], 34
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="146">
      <instructions>
        <talk>/* VTTTalk glyph 146, char 0xffff */
/* GUI generated Thu Feb 20 19:47:54 2020 */

/* Y direction */
YAnchor(11,2)
YShift(11,1)
YDist(11,18)
YLink(11,25,67)
YDist(25,4)
YAnchor(38,8)
YShift(38,3)
YLink(38,37,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 146, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 11, 2
SHP[1], 1
MDRP[m&lt;RGr], 18
MIRP[M&gt;RBl], 25, 67
MDRP[m&lt;RGr], 4
MIAP[R], 38, 8
SHP[1], 3
MIRP[m&gt;RBl], 37, 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="147">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 48 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(48)	/* min */
YAnchor(19)	/* max */

/* YDir: Stroke #0 */
YInterpolate(19,27,48)
YAnchor(27)
YDist(27,43) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(19,7) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(48,49) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(48,47)

Smooth()


</talk>
        <assembly>/* TT glyph 147, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 48
MDAP[R], 19
SRP2[], 48
IP[], 27
MDAP[R], 27
MDRP[m&gt;RBl], 43
SRP0[], 19
MDRP[m&gt;RBl], 7
SRP0[], 48
MDRP[m&gt;RBl], 49
SHP[1], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="148">
      <instructions>
        <talk>/* VTTTalk glyph 148, char 0x61 (a) */
/* GUI generated Sun Feb 23 09:06:02 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,26)
YShift(0,38)
YDist(38,52)
YAnchor(9,7)
YDist(9,17)
YShift(9,45)

/* X direction */

Smooth()
XDelta(55,-1/8@12..26)
XDelta(54,-1/8@12..26)
/* XDelta(59,-1/8@12..26) */
XDelta(56,1/8@12..26)
XDelta(57,1/8@12..26)
XDelta(58,1/8@12..26)
XDelta(59,1/16@12..26)
</talk>
        <assembly>/* TT glyph 148, char 0x61 (a) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 26
SHP[1], 38
SRP0[], 38
MDRP[m&gt;RBl], 52
MIAP[R], 9, 7
MDRP[m&gt;RBl], 17
SHP[1], 45
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 55, -8, 12, 26, 72
CALL[], 54, -8, 12, 26, 72
CALL[], 56, 8, 12, 26, 72
CALL[], 57, 8, 12, 26, 72
CALL[], 58, 8, 12, 26, 72
CALL[], 59, 4, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="149">
      <instructions>
        <talk>/* VTTTalk glyph 149, char 0xa733 */
/* GUI generated Sun Feb 23 09:04:35 2020 */

/* Y direction */
YAnchor(41,11)
YShift(41,0)
YDist(41,67)
YShift(67,29)
YShift(41,79)
YDist(79,93)
YAnchor(50,7)
YShift(50,7)
YShift(50,12)
YShift(50,86)
YDist(50,58)
YShift(58,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 149, char 0xa733 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 41, 11
SHP[1], 0
MDRP[m&gt;RBl], 67
SHP[2], 29
SHP[1], 79
SRP0[], 79
MDRP[m&gt;RBl], 93
MIAP[R], 50, 7
SHP[1], 7
SHP[1], 12
SHP[1], 86
MDRP[m&gt;RBl], 58
SHP[2], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="150">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 793, 832, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="151">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 798, 995, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="152">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 796, 1019, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="153">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 790, 910, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="154">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 792, 806, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="155">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 801, 960, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="156">
      <instructions>
        <talk>/* VTTTalk glyph 156, char 0xa735 */
/* GUI generated Sun Feb 23 08:58:58 2020 */

/* Y direction */
YAnchor(42,11)
YShift(42,41)
YLink(42,58,69)
YShift(42,0)
YDist(0,26)
YAnchor(50,7)
YShift(50,40)
YLink(50,67,69)
YShift(50,9)
YDist(9,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 156, char 0xa735 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 42, 11
SHP[1], 41
MIRP[m&gt;RBl], 58, 69
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 26
MIAP[R], 50, 7
SHP[1], 40
MIRP[m&gt;RBl], 67, 69
SHP[1], 9
SRP0[], 9
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="157">
      <instructions>
        <talk>/* VTTTalk glyph 157, char 0x105 */
/* GUI generated Thu Feb 20 20:01:04 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,26,69)
YShift(0,44)
YLink(44,57,69)
YDist(44,38,&gt;=)
YDist(38,70)
YAnchor(9)
YLink(9,17,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 157, char 0x105 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 26, 69
SHP[1], 44
SRP0[], 44
MIRP[m&gt;RBl], 57, 69
MDRP[M&gt;RGr], 38
MDRP[m&gt;RBl], 70
MDAP[R], 9
MIRP[m&gt;RBl], 17, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="158">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 799, 942, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="159">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
OVERLAP[]
OFFSET[R], 800, 1042, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="160">
      <instructions>
        <talk>/* VTTTalk glyph 160, char 0xa737 */
/* GUI generated Thu Feb 20 20:09:02 2020 */

/* Y direction */
YAnchor(50,11)
YDist(50,76)
YShift(50,0)
YDist(0,16)
YShift(50,28)
YDist(28,42)
YAnchor(59,7)
YShift(59,8)
YShift(59,36)
YLink(59,67,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 160, char 0xa737 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 50, 11
MDRP[m&gt;RBl], 76
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 16
SRP1[], 50
SHP[1], 28
SRP0[], 28
MDRP[m&gt;RBl], 42
MIAP[R], 59, 7
SHP[1], 8
SHP[1], 36
MIRP[m&gt;RBl], 67, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="161">
      <instructions>
        <talk>/* VTTTalk glyph 159, char 0xa739 */
/* GUI generated Sat Jan 25 07:07:54 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,26)
YShift(0,38)
YDist(39,54)
YAnchor(9,7)
YDist(9,17)
YShift(9,46)
YShift(9,67)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 161, char 0xa739 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 26
SHP[1], 38
SRP0[], 39
MDRP[m&gt;RBl], 54
MIAP[R], 9, 7
MDRP[m&gt;RBl], 17
SHP[1], 46
SHP[1], 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="162">
      <instructions>
        <talk>/* VTTTalk glyph 160, char 0xa73b */
/* GUI generated Sat Jan 25 07:10:25 2020 */

/* Y direction */
YAnchor(4,11)
YDist(4,30)
YShift(4,42)
YDist(42,58)
YAnchor(13,7)
YDist(13,21)
YShift(13,50)
YShift(13,71)
YIPAnchor(4,0,13)
YDist(0,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 162, char 0xa73b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 11
MDRP[m&gt;RBl], 30
SHP[1], 42
SRP0[], 42
MDRP[m&gt;RBl], 58
MIAP[R], 13, 7
MDRP[m&gt;RBl], 21
SHP[1], 50
SHP[1], 71
SRP2[], 4
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="163">
      <instructions>
        <talk>/* VTTTalk glyph 161, char 0xa73d */
/* GUI generated Tue Jan 28 15:55:23 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,27)
YShift(0,39)
YDist(39,53)
YAnchor(9,6)
YDist(9,18)
YShift(9,46)
YShift(9,87)
YAnchor(62)
YDist(62,69)
YDist(62,75)

/* X direction */

Smooth()
XDelta(90,1/8@11..28)
XDelta(91,1/4@11..28)
XDelta(92,1/4@11..28)
XDelta(93,1/4@11..28)
XDelta(94,1/4@11..28)
XDelta(95,1/4@11..28)
XDelta(96,1/8@11..28)</talk>
        <assembly>/* TT glyph 163, char 0xa73d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 27
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 53
MIAP[R], 9, 6
MDRP[m&gt;RBl], 18
SHP[1], 46
SHP[1], 87
MDAP[R], 62
MDRP[m&gt;RBl], 69
MDRP[m&gt;RBl], 75
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 90, 8, 11, 28, 72
CALL[], 91, 16, 11, 28, 72
CALL[], 92, 16, 11, 28, 72
CALL[], 93, 16, 11, 28, 72
CALL[], 94, 16, 11, 28, 72
CALL[], 95, 16, 11, 28, 72
CALL[], 96, 8, 11, 28, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="164">
      <instructions>
        <talk>/* VTTTalk glyph 162, char 0xe6 */
/* GUI generated Tue Jan 28 16:01:07 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,59)
YShift(0,42)
YDist(42,35)
YAnchor(9,6)
YDist(9,26)
YShift(9,51)
YInterpolate(0,17,9)
YDist(17,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 164, char 0xe6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 59
SHP[1], 42
SRP0[], 42
MDRP[m&gt;RBl], 35
MIAP[R], 9, 6
MDRP[m&gt;RBl], 26
SHP[1], 51
SRP2[], 0
IP[], 17
SRP0[], 17
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="165">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 164, 0, 0
OVERLAP[]
OFFSET[R], 793, 1057, 15

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="166">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 164, 0, 0
OVERLAP[]
OFFSET[R], 801, 1185, 15

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="167">
      <instructions>
        <talk>/* VTTTalk glyph 165, char 0x62 (b) */
/* GUI generated Sat Jan 25 07:15:59 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,26)
YAnchor(10,0)
YLink(10,9,66)
YAnchor(17,7)
YDist(17,35)

/* X direction */

Smooth()
XDelta(36,0.5@11..27)
XDelta(37,0.5@11..27)
XDelta(38,0.5@11..27)
XDelta(39,0.5@11..27)
XDelta(40,0.5@11..27)
XDelta(41,0.5@11..27)
XDelta(42,0.5@11..27)
XDelta(43,0.5@11..27)
</talk>
        <assembly>/* TT glyph 167, char 0x62 (b) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 26
MIAP[R], 10, 0
MIRP[m&gt;RBl], 9, 66
MIAP[R], 17, 7
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 36, 32, 11, 27, 72
CALL[], 37, 32, 11, 27, 72
CALL[], 38, 32, 11, 27, 72
CALL[], 39, 32, 11, 27, 72
CALL[], 40, 32, 11, 27, 72
CALL[], 41, 32, 11, 27, 72
CALL[], 42, 32, 11, 27, 72
CALL[], 43, 32, 11, 27, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="168">
      <instructions>
        <talk>/* VTTTalk glyph 166, char 0x63 (c) */
/* GUI generated Sat Jan 25 07:14:41 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,27)
YAnchor(9,6)
YDist(9,15)
YShift(9,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 168, char 0x63 (c) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 27
MIAP[R], 9, 6
MDRP[m&gt;RBl], 15
SHP[1], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="169">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OVERLAP[]
OFFSET[R], 793, 785, 14
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="170">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OVERLAP[]
OFFSET[R], 797, 860, 14
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="171">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OVERLAP[]
OFFSET[R], 817, 737, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="172">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OVERLAP[]
OFFSET[R], 791, 892, 14
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="173">
      <instructions>
        <talk>/* VTTTalk glyph 171, char 0x64 (d) */
/* GUI generated Sat Jan 25 07:15:43 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YShift(0,37)
YDist(37,55)
YAnchor(9,7)
YDist(9,16)
YAnchor(47,0)
YLink(47,46,66)

/* X direction */

Smooth()
XDelta(32,0.25@11..26)
XDelta(33,0.25@11..26)
XDelta(34,0.25@11..26)
XDelta(35,0.25@11..26)
XDelta(36,0.25@11..26)

XDelta(58,-1/8@12..26)
XDelta(57,-1/8@12..26)
XDelta(56,-1/8@12..26)
XDelta(59,1/8@12..26)
XDelta(60,1/8@12..26)
XDelta(61,1/8@12..26)
XDelta(62,1/8@12..26)
</talk>
        <assembly>/* TT glyph 173, char 0x64 (d) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
SHP[1], 37
SRP0[], 37
MDRP[m&gt;RBl], 55
MIAP[R], 9, 7
MDRP[m&gt;RBl], 16
MIAP[R], 47, 0
MIRP[m&gt;RBl], 46, 66
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 32, 16, 11, 26, 72
CALL[], 33, 16, 11, 26, 72
CALL[], 34, 16, 11, 26, 72
CALL[], 35, 16, 11, 26, 72
CALL[], 36, 16, 11, 26, 72
CALL[], 58, -8, 12, 26, 72
CALL[], 57, -8, 12, 26, 72
CALL[], 56, -8, 12, 26, 72
CALL[], 59, 8, 12, 26, 72
CALL[], 60, 8, 12, 26, 72
CALL[], 61, 8, 12, 26, 72
CALL[], 62, 8, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="174">
      <instructions>
        <talk>/* VTTTalk glyph 172, char 0xf0 */
/* GUI generated Sat Jan 25 07:16:35 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,23,69)
YAnchor(7,7)
YLink(7,14,69)
YShift(7,44)
YAnchor(34)
YShift(34,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 174, char 0xf0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 23, 69
MIAP[R], 7, 7
MIRP[m&gt;RBl], 14, 69
SHP[1], 44
MDAP[R], 34
SHP[1], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="175">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 173, 0, 0
OVERLAP[]
OFFSET[R], 795, 1363, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="176">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 173, 0, 0
OVERLAP[]
OFFSET[R], 825, 1414, 751
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="177">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YDist(0,32)
YAnchor(8,6)
YLink(8,24,69)
YIPAnchor(0,16,8)
YDist(16,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 177, char 0x65 (e) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 32
MIAP[R], 8, 6
MIRP[m&gt;RBl], 24, 69
SRP2[], 0
IP[], 16
MDAP[R], 16
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="178">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 793, 872, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="179">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 798, 1035, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="180">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 797, 947, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="181">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 796, 1059, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="182">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 790, 950, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="183">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 791, 979, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="184">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 792, 846, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="185">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 801, 1000, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="186">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OVERLAP[]
OFFSET[R], 818, 824, 47
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="187">
      <instructions>
        <talk>/* Min and Max */
YAnchor(0)	/* min */
YAnchor(23,7)	/* max */

/* YDir: Stroke #0 */
YDist(23,16) /*perpendicular to the stroke*/

Smooth()</talk>
        <assembly>/* TT glyph 187, char 0xa76b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 23, 7
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="188">
      <instructions>
        <talk>/* VTTTalk glyph 186, char 0x259 */
/* GUI generated Sat Jan 25 07:19:09 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(31,7)
YDist(31,25)
YInterpolate(0,9,31)
YDist(9,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 188, char 0x259 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 31, 7
MDRP[m&gt;RBl], 25
SRP2[], 0
IP[], 9
SRP0[], 9
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="189">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YLink(0,39,69)
YAnchor(55,7)
YDist(55,48)
YIPAnchor(55,23,0)
YInterpolate(55,9,23)
YLink(9,30,69)
YDist(23,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 189, char 0x25a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 39, 69
MIAP[R], 55, 7
MDRP[m&gt;RBl], 48
SRP2[], 0
IP[], 23
MDAP[R], 23
SRP2[], 55
IP[], 9
SRP0[], 9
MIRP[m&gt;RBl], 30, 69
SRP0[], 23
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="190">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,15)
YDist(0,6)
YShift(0,9)
YLink(0,13,69)
YAnchor(24,0)
YLink(24,36,69)
YIPAnchor(24,47,0)
YLink(47,46,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 190, char 0x66 (f) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MDRP[m&lt;RGr], 6
SHP[1], 9
MIRP[m&gt;RBl], 13, 69
MIAP[R], 24, 0
MIRP[m&gt;RBl], 36, 69
SRP2[], 0
IP[], 47
MDAP[R], 47
MIRP[m&gt;RBl], 46, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="191">
      <instructions>
        <talk>/* VTTTalk glyph 189, char 0x67 (g) */
/* GUI generated Sun Jan 26 17:07:53 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,18,69)
YAnchor(75,7)
YLink(75,92,69)
YIPAnchor(75,68,9,0)
YLink(68,83,69,&gt;=)
YInterpolate(68,34,83)
YDist(9,10)
YShift(75,59)
YDist(59,53)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 191, char 0x67 (g) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 18, 69
MIAP[R], 75, 7
MIRP[m&gt;RBl], 92, 69
SRP2[], 0
IP[], 68
IP[], 9
MDAP[R], 68
MDAP[R], 9
SRP0[], 68
MIRP[m&gt;RGr], 83, 69
IP[], 34
SRP0[], 9
MDRP[m&gt;RBl], 10
SRP1[], 75
SHP[1], 59
SRP0[], 59
MDRP[m&gt;RBl], 53
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="192">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 191, 0, 0
OVERLAP[]
OFFSET[R], 803, 725, 9

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="193">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 191, 0, 0
OVERLAP[]
OFFSET[R], 791, 908, 9

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="194">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,14)
YDist(0,12)
YShift(12,6)
YAnchor(43,7)
YDist(43,36)
YShift(43,64)
YInterpolate(0,26,43)
YShift(26,27)

/* X direction */

Smooth()
XDelta(58,1/8@11..28)
XDelta(59,1/4@11..28)
XDelta(60,3/8@11..28)
XDelta(61,3/8@11..28)
XDelta(62,3/8@11..28)

</talk>
        <assembly>/* TT glyph 194, char 0x21d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 12
SHP[2], 6
MIAP[R], 43, 7
MDRP[m&gt;RBl], 36
SHP[1], 64
SRP2[], 0
IP[], 26
SRP1[], 26
SHP[1], 27
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 58, 8, 11, 28, 72
CALL[], 59, 16, 11, 28, 72
CALL[], 60, 24, 11, 28, 72
CALL[], 61, 24, 11, 28, 72
CALL[], 62, 24, 11, 28, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="195">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,10)
YAnchor(4,0)
YLink(4,3,66)
YAnchor(8,11)
YDist(8,15)
YDist(8,21)
YAnchor(39,7)
YDist(39,30)

/* X direction */

Smooth()
XDelta(32,1/4@11..28)
XDelta(33,1/4@11..28)
XDelta(34,1/4@11..28)</talk>
        <assembly>/* TT glyph 195, char 0x68 (h) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 4, 0
MIRP[m&gt;RBl], 3, 66
MIAP[R], 8, 11
MDRP[m&gt;RBl], 15
MDRP[m&gt;RBl], 21
MIAP[R], 39, 7
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 32, 16, 11, 28, 72
CALL[], 33, 16, 11, 28, 72
CALL[], 34, 16, 11, 28, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="196">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 791, 731, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="197">
      <instructions>
        <talk>/* VTTTalk glyph 195, char 0x131 */
/* GUI generated Sat Jan 25 07:33:42 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YAnchor(21,7)
YDist(21,12)

/* X direction */

Smooth()
XDelta(36,-1/8@12..26)
XDelta(35,-1/8@12..26)
XDelta(34,-1/8@12..26)
XDelta(37,1/8@12..26)
XDelta(38,1/8@12..26)
XDelta(39,1/8@12..26)
XDelta(40,1/8@12..26)

/* XDelta(13,1/8@12..26) */
XDelta(14,1/8@12..26)
XDelta(15,1/8@12..26)
XDelta(19,-1/8@12..26)
XDelta(18,-1/8@12..26)
XDelta(17,-1/8@12..26)
XDelta(16,-1/8@12..26)
</talk>
        <assembly>/* TT glyph 197, char 0x131 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
MIAP[R], 21, 7
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 36, -8, 12, 26, 72
CALL[], 35, -8, 12, 26, 72
CALL[], 34, -8, 12, 26, 72
CALL[], 37, 8, 12, 26, 72
CALL[], 38, 8, 12, 26, 72
CALL[], 39, 8, 12, 26, 72
CALL[], 40, 8, 12, 26, 72
CALL[], 14, 8, 12, 26, 72
CALL[], 15, 8, 12, 26, 72
CALL[], 19, -8, 12, 26, 72
CALL[], 18, -8, 12, 26, 72
CALL[], 17, -8, 12, 26, 72
CALL[], 16, -8, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="198">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 793, 624, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="199">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 798, 787, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="200">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 796, 811, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="201">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 790, 702, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="202">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 792, 598, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="203">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 196, 0, 0
OVERLAP[]
OFFSET[R], 206, 609, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="204">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 801, 752, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="205">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OVERLAP[]
OFFSET[R], 818, 553, 10
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="206">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OVERLAP[]
OFFSET[R], 791, 750, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="207">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,14)
YDist(0,12)
YAnchor(31,7)
YDist(31,22)

/* X direction */

Smooth()

XDelta(25,1/8@12..26)
XDelta(24,1/8@12..26)
/* XDelta(16,1/8@12..26) */
XDelta(26,-1/8@12..26)
XDelta(27,-1/8@12..26)
XDelta(28,-1/8@12..26)
XDelta(29,-1/8@12..26)</talk>
        <assembly>/* TT glyph 207, char 0x237 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 12
MIAP[R], 31, 7
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 25, 8, 12, 26, 72
CALL[], 24, 8, 12, 26, 72
CALL[], 26, -8, 12, 26, 72
CALL[], 27, -8, 12, 26, 72
CALL[], 28, -8, 12, 26, 72
CALL[], 29, -8, 12, 26, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="208">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,10)
YAnchor(4,0)
YLink(4,3,66)
YAnchor(8,11)
YDist(8,24)
YAnchor(51,7)
YLink(51,41,69)
YInterpolate(0,15,51)
YDist(15,16)
YShift(15,34)
YShift(15,46)

/* X direction */

Smooth()
XDelta(43,1/4@11..28)
XDelta(44,1/4@11..28)
XDelta(45,1/4@11..28)
XDelta(46,1/4@11..28)
YDelta(36,1/16@11..28)
YDelta(35,1/8@11..28)
YDelta(34,1/8@11..28)
YDelta(56,-1/8@11..28)
YDelta(57,-1/8@11..28)
YDelta(33,-1/8@11..28)

XDelta(28,-1/8@12..26)
XDelta(27,-1/8@12..26)
XDelta(26,-1/8@12..26)
XDelta(29,1/8@12..26)
XDelta(30,1/8@12..26)
XDelta(31,1/8@12..26)
XDelta(32,1/16@12..26)
</talk>
        <assembly>/* TT glyph 208, char 0x6b (k) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 4, 0
MIRP[m&gt;RBl], 3, 66
MIAP[R], 8, 11
MDRP[m&gt;RBl], 24
MIAP[R], 51, 7
MIRP[m&gt;RBl], 41, 69
SRP2[], 0
IP[], 15
SRP0[], 15
MDRP[m&gt;RBl], 16
SHP[1], 34
SHP[1], 46
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 43, 16, 11, 28, 72
CALL[], 44, 16, 11, 28, 72
CALL[], 45, 16, 11, 28, 72
CALL[], 46, 16, 11, 28, 72
SVTCA[Y]
CALL[], 36, 4, 11, 28, 72
CALL[], 35, 8, 11, 28, 72
CALL[], 34, 8, 11, 28, 72
CALL[], 56, -8, 11, 28, 72
CALL[], 57, -8, 11, 28, 72
CALL[], 33, -8, 11, 28, 72
SVTCA[X]
CALL[], 28, -8, 12, 26, 72
CALL[], 27, -8, 12, 26, 72
CALL[], 26, -8, 12, 26, 72
CALL[], 29, 8, 12, 26, 72
CALL[], 30, 8, 12, 26, 72
CALL[], 31, 8, 12, 26, 72
CALL[], 32, 4, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="209">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 208, 0, 0
OVERLAP[]
OFFSET[R], 816, 879, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="210">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YDist(0,18)
YAnchor(10,0)
YLink(10,9,66)

/* X direction */

Smooth()
XDelta(21,-1/8@12..26)
XDelta(20,-1/8@12..26)
/* XDelta(26,-1/8@12..26) */
XDelta(22,1/8@12..26)
XDelta(23,1/8@12..26)
XDelta(24,1/8@12..26)
XDelta(25,1/16@12..26)
</talk>
        <assembly>/* TT glyph 210, char 0x6c (l) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 18
MIAP[R], 10, 0
MIRP[m&gt;RBl], 9, 66
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 21, -8, 12, 26, 72
CALL[], 20, -8, 12, 26, 72
CALL[], 22, 8, 12, 26, 72
CALL[], 23, 8, 12, 26, 72
CALL[], 24, 8, 12, 26, 72
CALL[], 25, 4, 12, 26, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="211">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 858, 910, 158

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="212">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 795, 932, 140
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="213">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 816, 645, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="214">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 826, 686, 36
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="215">
      <instructions>
        <talk>/* VTTTalk glyph 213, char 0x6d (m) */
/* GUI generated Tue Jan 28 15:39:09 2020 */

/* Y direction */
YAnchor(0,10)
YShift(0,22)
YShift(0,34)
YShift(0,66)
YShift(0,47)
YDist(47,84)
YAnchor(14,7)
YDist(14,6)
YShift(14,71)
YShift(14,39)
YDist(39,28)
YShift(28,59)

/* X direction */

Smooth()
XDelta(30,1/8@11..25)
XDelta(31,1/4@11..25)
XDelta(32,1/4@11..25)
XDelta(33,1/4@11..25)
XDelta(61,1/8@11..25)
XDelta(62,1/4@11..25)
XDelta(63,1/4@11..25)
XDelta(64,1/4@11..25)
XDelta(65,1/4@11..25)

XDelta(87,-1/8@12..26)
XDelta(86,-1/8@12..26)
/* XDelta(59,-1/8@12..26) */
XDelta(88,1/8@12..26)
XDelta(89,1/8@12..26)
XDelta(90,1/8@12..26)
XDelta(91,1/8@12..26)

XDelta(9,1/8@12..26)
XDelta(8,1/8@12..26)
/* XDelta(16,1/8@12..26) */
XDelta(10,-1/8@12..26)
XDelta(11,-1/8@12..26)
XDelta(12,-1/8@12..26)
XDelta(13,-1/16@12..26)
</talk>
        <assembly>/* TT glyph 215, char 0x6d (m) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 22
SHP[2], 34
SHP[2], 66
SHP[2], 47
SRP0[], 47
MDRP[m&gt;RBl], 84
MIAP[R], 14, 7
MDRP[m&gt;RBl], 6
SHP[1], 71
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 28
SHP[2], 59
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 30, 8, 11, 25, 72
CALL[], 31, 16, 11, 25, 72
CALL[], 32, 16, 11, 25, 72
CALL[], 33, 16, 11, 25, 72
CALL[], 61, 8, 11, 25, 72
CALL[], 62, 16, 11, 25, 72
CALL[], 63, 16, 11, 25, 72
CALL[], 64, 16, 11, 25, 72
CALL[], 65, 16, 11, 25, 72
CALL[], 87, -8, 12, 26, 72
CALL[], 86, -8, 12, 26, 72
CALL[], 88, 8, 12, 26, 72
CALL[], 89, 8, 12, 26, 72
CALL[], 90, 8, 12, 26, 72
CALL[], 91, 8, 12, 26, 72
CALL[], 9, 8, 12, 26, 72
CALL[], 8, 8, 12, 26, 72
CALL[], 10, -8, 12, 26, 72
CALL[], 11, -8, 12, 26, 72
CALL[], 12, -8, 12, 26, 72
CALL[], 13, -4, 12, 26, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="216">
      <instructions>
        <talk>/* VTTTalk glyph 214, char 0x6e (n) */
/* GUI generated Sat Jan 25 07:44:32 2020 */

/* Y direction */
YAnchor(46,10)
YShift(46,19)
YShift(46,0)
YDist(0,38)
YAnchor(60,7)
YDist(60,52)
YShift(60,24)
YDist(24,12)

/* X direction */

Smooth()
XDelta(13,0.25@12..26)
XDelta(14,0.25@12..26)
XDelta(15,0.25@12..26)
XDelta(16,0.25@12..26)
XDelta(17,0.25@12..26)
XDelta(18,0.25@12..26)

XDelta(41,-1/8@12..26)
XDelta(40,-1/8@12..26)
/* XDelta(59,-1/8@12..26) */
XDelta(42,1/8@12..26)
XDelta(43,1/8@12..26)
XDelta(44,1/8@12..26)
XDelta(45,1/16@12..26)

XDelta(55,1/8@12..26)
XDelta(54,1/8@12..26)
/* XDelta(16,1/8@12..26) */
XDelta(56,-1/8@12..26)
XDelta(57,-1/8@12..26)
XDelta(58,-1/8@12..26)
XDelta(59,-1/16@12..26)</talk>
        <assembly>/* TT glyph 216, char 0x6e (n) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 46, 10
SHP[1], 19
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 38
MIAP[R], 60, 7
MDRP[m&gt;RBl], 52
SHP[1], 24
SRP0[], 24
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 13, 16, 12, 26, 72
CALL[], 14, 16, 12, 26, 72
CALL[], 15, 16, 12, 26, 72
CALL[], 16, 16, 12, 26, 72
CALL[], 17, 16, 12, 26, 72
CALL[], 18, 16, 12, 26, 72
CALL[], 41, -8, 12, 26, 72
CALL[], 40, -8, 12, 26, 72
CALL[], 42, 8, 12, 26, 72
CALL[], 43, 8, 12, 26, 72
CALL[], 44, 8, 12, 26, 72
CALL[], 45, 4, 12, 26, 72
CALL[], 55, 8, 12, 26, 72
CALL[], 54, 8, 12, 26, 72
CALL[], 56, -8, 12, 26, 72
CALL[], 57, -8, 12, 26, 72
CALL[], 58, -8, 12, 26, 72
CALL[], 59, -4, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="217">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OVERLAP[]
OFFSET[R], 793, 890, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="218">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OVERLAP[]
OFFSET[R], 797, 965, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="219">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OVERLAP[]
OFFSET[R], 816, 930, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="220">
      <instructions>
        <talk>/* VTTTalk glyph 218, char 0x14b */
/* GUI generated Sat Jan 25 07:46:04 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YDist(0,12)
YAnchor(50,10)
YShift(50,30)
YAnchor(64,7)
YDist(64,56)
YShift(64,35)
YDist(35,23)

/* X direction */

Smooth()

XDelta(25,0.25@11..26)
XDelta(26,0.25@11..26)
XDelta(27,0.25@11..26)
XDelta(28,0.25@11..26)
XDelta(29,0.25@11..26)

XDelta(59,1/8@12..26)
XDelta(58,1/8@12..26)
/* XDelta(16,1/8@12..26) */
XDelta(60,-1/8@12..26)
XDelta(61,-1/8@12..26)
XDelta(62,-1/8@12..26)
XDelta(63,-1/16@12..26)</talk>
        <assembly>/* TT glyph 220, char 0x14b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 12
MIAP[R], 50, 10
SHP[1], 30
MIAP[R], 64, 7
MDRP[m&gt;RBl], 56
SHP[1], 35
SRP0[], 35
MDRP[m&gt;RBl], 23
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 25, 16, 11, 26, 72
CALL[], 26, 16, 11, 26, 72
CALL[], 27, 16, 11, 26, 72
CALL[], 28, 16, 11, 26, 72
CALL[], 29, 16, 11, 26, 72
CALL[], 59, 8, 12, 26, 72
CALL[], 58, 8, 12, 26, 72
CALL[], 60, -8, 12, 26, 72
CALL[], 61, -8, 12, 26, 72
CALL[], 62, -8, 12, 26, 72
CALL[], 63, -4, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="221">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OVERLAP[]
OFFSET[R], 800, 1100, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="222">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,25,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 222, char 0x6f (o) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 25, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="223">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 793, 796, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="224">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 798, 959, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="225">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 796, 983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="226">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 790, 874, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="227">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 792, 770, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="228">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 794, 1074, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="229">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 801, 924, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="230">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YShift(0,21)
YLink(0,26,69)
YShift(26,46)
YAnchor(8,7)
YShift(8,13)
YLink(8,37,69)
YShift(37,55)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 230, char 0xa74f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 21
MIRP[m&gt;RBl], 26, 69
SHP[2], 46
MIAP[R], 8, 7
SHP[1], 13
MIRP[m&gt;RBl], 37, 69
SHP[2], 55
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="231">
      <instructions>
        <talk>/* VTTTalk glyph 229, char 0x1eb */
/* GUI generated Sat Jan 25 07:49:30 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,28)
YAnchor(6,11)
YLink(6,35,69)
YAnchor(14,7)
YLink(14,44,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 231, char 0x1eb */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 28
MIAP[R], 6, 11
MIRP[m&gt;RBl], 35, 69
MIAP[R], 14, 7
MIRP[m&gt;RBl], 44, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="232">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 827, 909, 37
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="233">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OVERLAP[]
OFFSET[R], 793, 796, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="234">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OVERLAP[]
OFFSET[R], 800, 1006, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="235">
      <instructions>
        <talk>/* VTTTalk glyph 235, char 0x153 */
/* GUI generated Thu Feb 20 21:11:40 2020 */

/* Y direction */
YAnchor(8,7)
YShift(8,40)
YLink(8,24,69)
YShift(24,56)
YAnchor(33,11)
YDist(33,64)
YDelta(64,1/4@12..23)
YDelta(64,1/2@24..30)
YShift(33,68)
YShift(33,0)
YLink(0,15,69)
YInterpolate(33,48,8)
YDist(48,49)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 235, char 0x153 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 7
SHP[1], 40
MIRP[m&gt;RBl], 24, 69
SHP[2], 56
MIAP[R], 33, 11
MDRP[m&gt;RBl], 64
CALL[], 64, 16, 12, 23, 72
CALL[], 64, 32, 24, 30, 72
SHP[1], 68
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 15, 69
SRP1[], 33
SRP2[], 8
IP[], 48
SRP0[], 48
MDRP[m&gt;RBl], 49
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="236">
      <instructions>
        <talk>/* VTTTalk glyph 234, char 0x70 (p) */
/* GUI generated Sun Jan 26 16:58:15 2020 */

/* Y direction */
YAnchor(5,11)
YLink(5,14,69)
YAnchor(32,7)
YShift(32,2)
YDist(32,22,&gt;=)
YAnchor(41,15)
YShift(41,0)
YLink(41,42,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 236, char 0x70 (p) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 11
MIRP[m&gt;RBl], 14, 69
MIAP[R], 32, 7
SHP[1], 2
MDRP[m&gt;RGr], 22
MIAP[R], 41, 15
SHP[1], 0
MIRP[m&gt;RBl], 42, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="237">
      <instructions>
        <talk>/* VTTTalk glyph 235, char 0xfe */
/* GUI generated Sat Jan 25 07:55:19 2020 */

/* Y direction */
YAnchor(4,0)
YLink(4,3,66)
YAnchor(8,14)
YShift(8,0)
YLink(8,9,66)
YAnchor(12,11)
YLink(12,21,69)
YAnchor(36,7)
YDist(36,29)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 237, char 0xfe */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 0
MIRP[m&gt;RBl], 3, 66
MIAP[R], 8, 14
SHP[1], 0
MIRP[m&gt;RBl], 9, 66
MIAP[R], 12, 11
MIRP[m&gt;RBl], 21, 69
MIAP[R], 36, 7
MDRP[m&gt;RBl], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="238">
      <instructions>
        <talk>/* VTTTalk glyph 236, char 0x71 (q) */
/* GUI generated Tue Jan 28 16:47:10 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YAnchor(10,7)
YShift(10,22)
YLink(10,36,69)
YAnchor(46,15)
YShift(46,20)
YShift(46,49)
YDist(46,47)
YShift(47,48)

/* X direction */

Smooth()
XDelta(26,-1/4@11..27)
XDelta(27,-1/2@11..27)
XDelta(28,-1/2@11..27)
XDelta(29,-1/2@11..27)
XDelta(30,-1/4@11..27)
XDelta(31,-1/8@11..27)
</talk>
        <assembly>/* TT glyph 238, char 0x71 (q) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
MIAP[R], 10, 7
SHP[1], 22
MIRP[m&gt;RBl], 36, 69
MIAP[R], 46, 15
SHP[1], 20
SHP[1], 49
MDRP[m&gt;RBl], 47
SHP[2], 48
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 26, -16, 11, 27, 72
CALL[], 27, -32, 11, 27, 72
CALL[], 28, -32, 11, 27, 72
CALL[], 29, -32, 11, 27, 72
CALL[], 30, -16, 11, 27, 72
CALL[], 31, -8, 11, 27, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="239">
      <instructions>
        <talk>/* VTTTalk glyph 237, char 0x72 (r) */
/* GUI generated Sat Jan 25 07:58:55 2020 */

/* Y direction */
YAnchor(0,10)
YShift(0,22)
YAnchor(14,7)
YDist(14,6)
YShift(14,28)
YDist(28,35)
YDist(28,40)

/* X direction */

/*XNoRound(46)
XAnchor(46)
XNoRound(22)
XAnchor(22) */


Smooth()
XDelta(22,-0.5@17..21)
XDelta(23,-0.5@17..21)
XDelta(24,-0.5@17..21)
XDelta(25,-0.5@17..21)
XDelta(26,-0.5@17..21)
XDelta(27,-0.5@17..21)
XDelta(22,-0.25@11..16)
XDelta(23,-0.25@11..16)
XDelta(24,-0.25@11..16)
XDelta(25,-0.25@11..16)
XDelta(26,-0.25@11..16)
XDelta(27,-0.25@11..16)

XDelta(9,1/8@12..26)
XDelta(8,1/8@12..26)
/* XDelta(16,1/8@12..26) */
XDelta(10,-1/8@12..26)
XDelta(11,-1/8@12..26)
XDelta(12,-1/8@12..26)
XDelta(13,-1/16@12..26)
</talk>
        <assembly>/* TT glyph 239, char 0x72 (r) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 22
MIAP[R], 14, 7
MDRP[m&gt;RBl], 6
SHP[1], 28
SRP0[], 28
MDRP[m&gt;RBl], 35
MDRP[m&gt;RBl], 40
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 22, -32, 17, 21, 72
CALL[], 23, -32, 17, 21, 72
CALL[], 24, -32, 17, 21, 72
CALL[], 25, -32, 17, 21, 72
CALL[], 26, -32, 17, 21, 72
CALL[], 27, -32, 17, 21, 72
CALL[], 22, -16, 11, 16, 72
CALL[], 23, -16, 11, 16, 72
CALL[], 24, -16, 11, 16, 72
CALL[], 25, -16, 11, 16, 72
CALL[], 26, -16, 11, 16, 72
CALL[], 27, -16, 11, 16, 72
CALL[], 9, 8, 12, 26, 72
CALL[], 8, 8, 12, 26, 72
CALL[], 10, -8, 12, 26, 72
CALL[], 11, -8, 12, 26, 72
CALL[], 12, -8, 12, 26, 72
CALL[], 13, -4, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="240">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 239, 0, 0
OVERLAP[]
OFFSET[R], 793, 779, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="241">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 239, 0, 0
OVERLAP[]
OFFSET[R], 797, 854, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="242">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 239, 0, 0
OVERLAP[]
OFFSET[R], 816, 694, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="243">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa75b */
/* ACT generated Fri Jan 24 16:10:37 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,10)	/* min */
YAnchor(16,7)	/* max */

/* YDir: Stroke #0 */
YDist(16,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,26) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 243, char 0xa75b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 16, 7
MDRP[m&gt;RBl], 9
SRP0[], 0
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="244">
      <instructions>
        <talk>/* VTTTalk glyph 242, char 0x73 (s) */
/* GUI generated Sat Jan 25 08:00:33 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,9)
YLink(0,15,69)
YAnchor(29,7)
YDist(29,35)
YLink(29,41,69)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 244, char 0x73 (s) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 9
MIRP[m&gt;RBl], 15, 69
MIAP[R], 29, 7
MDRP[m&gt;RBl], 35
MIRP[m&gt;RBl], 41, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="245">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 244, 0, 0
OVERLAP[]
OFFSET[R], 793, 664, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="246">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 244, 0, 0
OVERLAP[]
OFFSET[R], 797, 739, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="247">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 244, 0, 0
OVERLAP[]
OFFSET[R], 817, 685, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="248">
      <instructions>
        <talk>/* VTTTalk glyph 246, char 0xdf */
/* GUI generated Sat Jan 25 08:02:12 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YLink(0,13,69)
YAnchor(24,0)
YLink(24,79,69)
YAnchor(45,11)
YDist(45,54)
YLink(45,60,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 248, char 0xdf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
SHP[1], 9
MIRP[m&gt;RBl], 13, 69
MIAP[R], 24, 0
MIRP[m&gt;RBl], 79, 69
MIAP[R], 45, 11
MDRP[m&gt;RBl], 54
MIRP[m&gt;RBl], 60, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="249">
      <instructions>
        <talk>/* VTTTalk glyph 249, char 0x17f */
/* GUI generated Thu Feb 20 23:19:02 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YDist(0,13)
YAnchor(24,1)
YDist(24,30)
YLink(24,36,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 249, char 0x17f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MDRP[m&gt;RBl], 13
MIAP[R], 24, 1
MDRP[m&gt;RBl], 30
MIRP[m&gt;RBl], 36, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="250">
      <instructions>
        <talk>/* VTTTalk glyph 248, char 0x74 (t) */
/* GUI generated Sat Jan 25 08:05:30 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YAnchor(8)
YInterpolate(0,25,8)
YShift(25,24)
YDist(25,26)
YShift(26,27)

/* X direction */

Smooth()
XDelta(20,0.25@11..18)
XDelta(21,0.25@11..18)
XDelta(22,0.25@11..18)
XDelta(23,0.25@11..18)

XDelta(20,1/8@12..25)
XDelta(21,1/8@12..25)
XDelta(22,1/8@12..25)
XDelta(19,-1/8@12..25)
XDelta(18,-1/8@12..25)
XDelta(17,-1/8@12..25)
/* XDelta(59,-1/16@12..26) */</talk>
        <assembly>/* TT glyph 250, char 0x74 (t) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
MDAP[R], 8
SRP2[], 0
IP[], 25
SRP1[], 25
SHP[1], 24
SRP0[], 25
MDRP[m&gt;RBl], 26
SHP[2], 27
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 20, 16, 11, 18, 72
CALL[], 21, 16, 11, 18, 72
CALL[], 22, 16, 11, 18, 72
CALL[], 23, 16, 11, 18, 72
CALL[], 20, 8, 12, 25, 72
CALL[], 21, 8, 12, 25, 72
CALL[], 22, 8, 12, 25, 72
CALL[], 19, -8, 12, 25, 72
CALL[], 18, -8, 12, 25, 72
CALL[], 17, -8, 12, 25, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="251">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 250, 0, 0
OVERLAP[]
OFFSET[R], 825, 738, 74
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="252">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 250, 0, 0
OVERLAP[]
OFFSET[R], 795, 919, 26
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="253">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 250, 0, 0
OVERLAP[]
OFFSET[R], 817, 686, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="254">
      <instructions>
        <talk>/* VTTTalk glyph 252, char 0xa765 */
/* GUI generated Sat Jan 25 08:08:24 2020 */

/* Y direction */
YAnchor(8,0)
YLink(8,7,66)
YAnchor(12,14)
YShift(12,4)
YLink(12,13,66)
YAnchor(16,11)
YLink(16,25,69)
YAnchor(40,7)
YLink(40,33,69)
YIPAnchor(40,0,8)
YLink(0,1,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 254, char 0xa765 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 0
MIRP[m&gt;RBl], 7, 66
MIAP[R], 12, 14
SHP[1], 4
MIRP[m&gt;RBl], 13, 66
MIAP[R], 16, 11
MIRP[m&gt;RBl], 25, 69
MIAP[R], 40, 7
MIRP[m&gt;RBl], 33, 69
SRP2[], 8
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="255">
      <instructions>
        <talk>/* VTTTalk glyph 255, char 0x75 (u) */
/* GUI generated Thu Feb 20 21:27:50 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YShift(0,44)
YDist(44,58)
YAnchor(21,7)
YAnchor(38,6)
YShift(38,52)

/* X direction */

Smooth()
XDelta(39,1/2@20..26)
XDelta(40,1/2@20..26)
XDelta(41,1/2@20..26)
XDelta(42,1/2@20..26)
XDelta(43,1/4@20..26)

XDelta(39,3/8@13..19)
XDelta(40,3/8@13..19)
XDelta(41,3/8@13..19)
XDelta(42,3/8@13..19)
XDelta(43,1/4@13..19)

XDelta(39,1/8@12..14)
XDelta(40,1/8@12..14)
XDelta(41,1/8@12..14)
XDelta(42,1/8@12..14)
XDelta(43,1/8@12..14)

XDelta(61,-1/8@12..26)
XDelta(60,-1/8@12..26)
XDelta(59,-1/8@12..26)
XDelta(62,1/8@12..26)
XDelta(63,1/8@12..26)
XDelta(64,1/8@12..26)
XDelta(65,1/8@12..26)

XDelta(14,1/8@12..26)
XDelta(15,1/8@12..26)
XDelta(16,1/8@12..26)
XDelta(17,-1/8@12..26)
XDelta(18,-1/8@12..26)
XDelta(19,-1/8@12..26)
XDelta(20,-1/8@12..26)

</talk>
        <assembly>/* TT glyph 255, char 0x75 (u) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
SHP[1], 44
SRP0[], 44
MDRP[m&gt;RBl], 58
MIAP[R], 21, 7
MIAP[R], 38, 6
SHP[1], 52
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 39, 32, 20, 26, 72
CALL[], 40, 32, 20, 26, 72
CALL[], 41, 32, 20, 26, 72
CALL[], 42, 32, 20, 26, 72
CALL[], 43, 16, 20, 26, 72
CALL[], 39, 24, 13, 19, 72
CALL[], 40, 24, 13, 19, 72
CALL[], 41, 24, 13, 19, 72
CALL[], 42, 24, 13, 19, 72
CALL[], 43, 16, 13, 19, 72
DLTP1[(39 @3 1)(39 @4 1)(39 @5 1)]
DLTP1[(40 @3 1)(40 @4 1)(40 @5 1)]
DLTP1[(41 @3 1)(41 @4 1)(41 @5 1)]
DLTP1[(42 @3 1)(42 @4 1)(42 @5 1)]
DLTP1[(43 @3 1)(43 @4 1)(43 @5 1)]
CALL[], 61, -8, 12, 26, 72
CALL[], 60, -8, 12, 26, 72
CALL[], 59, -8, 12, 26, 72
CALL[], 62, 8, 12, 26, 72
CALL[], 63, 8, 12, 26, 72
CALL[], 64, 8, 12, 26, 72
CALL[], 65, 8, 12, 26, 72
CALL[], 14, 8, 12, 26, 72
CALL[], 15, 8, 12, 26, 72
CALL[], 16, 8, 12, 26, 72
CALL[], 17, -8, 12, 26, 72
CALL[], 18, -8, 12, 26, 72
CALL[], 19, -8, 12, 26, 72
CALL[], 20, -8, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="256">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 793, 875, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="257">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 798, 1038, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="258">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 796, 1062, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="259">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 790, 953, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="260">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 792, 849, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="261">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 794, 1153, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="262">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 801, 1003, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="263">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OVERLAP[]
OFFSET[R], 825, 965, 757

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="264">
      <instructions>
        <talk>/* VTTTalk glyph 264, char 0x195 */
/* GUI generated Thu Feb 20 21:53:47 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,40)
YAnchor(25,7)
YDist(25,13)
YShift(25,52)
YAnchor(65,0)
YAnchor(68,10)
YShift(68,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 264, char 0x195 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 40
MIAP[R], 25, 7
MDRP[m&gt;RBl], 13
SHP[1], 52
MIAP[R], 65, 0
MIAP[R], 68, 10
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="265">
      <instructions>
        <talk>/* VTTTalk glyph 265, char 0x19a */
/* GUI generated Thu Feb 20 21:56:23 2020 */

/* Y direction */
YAnchor(4,11)
YDist(4,22)
YAnchor(14,0)
YInterpolate(4,0,14)
YDist(0,1)

/* X direction */

Smooth()

XDelta(26,1/8@12..26)
XDelta(27,1/8@12..26)
XDelta(28,1/8@12..26)
XDelta(29,1/16@12..26)
XDelta(25,-1/8@12..26)
XDelta(24,-1/8@12..26)
/* XDelta(58,-1/8@12..26)
XDelta(59,-1/16@12..26) */
</talk>
        <assembly>/* TT glyph 265, char 0x19a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 11
MDRP[m&gt;RBl], 22
MIAP[R], 14, 0
SRP2[], 4
IP[], 0
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 26, 8, 12, 26, 72
CALL[], 27, 8, 12, 26, 72
CALL[], 28, 8, 12, 26, 72
CALL[], 29, 4, 12, 26, 72
CALL[], 25, -8, 12, 26, 72
CALL[], 24, -8, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="266">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 392, 0, 0
OVERLAP[]
OFFSET[R], 825, 897, 61
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="267">
      <instructions>
        <talk>/* VTTTalk glyph 267, char 0x1fb */
/* GUI generated Thu Feb 20 21:59:11 2020 */

/* Y direction */
YAnchor(31,11)
YDist(31,58)
YShift(31,70)
YDist(70,84)
YAnchor(40,7)
YDist(40,49)
YShift(40,77)
YDist(40,0)
YDist(0,15)
YDist(15,21)
YDist(21,7)
YDist(40,27)
YDist(27,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 267, char 0x1fb */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 31, 11
MDRP[m&gt;RBl], 58
SHP[1], 70
SRP0[], 70
MDRP[m&gt;RBl], 84
MIAP[R], 40, 7
MDRP[m&gt;RBl], 49
SHP[1], 77
MDRP[M&lt;RWh], 0
MDRP[M&gt;RBl], 15
MDRP[M&lt;RWh], 21
MDRP[m&gt;RBl], 7
SRP0[], 40
MDRP[M&lt;RWh], 27
MDRP[m&gt;RBl], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="268">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 387, 0, 0
OVERLAP[]
OFFSET[R], 801, 792, 13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="269">
      <instructions>
        <talk>/* VTTTalk Unicode 0x250 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(67)	/* max */

/* YDir: Stroke #0 */
YDist(67,59) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,33) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(67,20)

Smooth()
</talk>
        <assembly>/* TT glyph 269, char 0x250 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 67
MDRP[m&gt;RBl], 59
SRP0[], 0
MDRP[m&gt;RBl], 33
SRP1[], 67
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="270">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 148, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="271">
      <instructions>
        <talk>/* VTTTalk glyph 271, char 0x252 */
/* GUI generated Thu Feb 20 23:22:58 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,8)
YShift(0,37)
YAnchor(28,7)
YDist(28,17)
YShift(28,52)
YDist(52,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 271, char 0x252 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 8
SHP[1], 37
MIAP[R], 28, 7
MDRP[m&gt;RBl], 17
SHP[1], 52
SRP0[], 52
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="272">
      <instructions>
        <talk>/* VTTTalk glyph 272, char 0x253 */
/* GUI generated Thu Feb 20 23:23:43 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,46)
YAnchor(11,1)
YDist(11,17)
YShift(11,23)
YDist(11,27)
YAnchor(37,7)
YDist(37,55)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 272, char 0x253 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 46
MIAP[R], 11, 1
MDRP[m&lt;RGr], 17
SHP[1], 23
MDRP[m&gt;RBl], 27
MIAP[R], 37, 7
MDRP[m&gt;RBl], 55
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="273">
      <instructions>
        <talk>/* VTTTalk glyph 273, char 0x254 */
/* GUI generated Thu Feb 20 23:26:22 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,6)
YShift(0,9)
YDist(0,10)
YAnchor(25,7)
YDist(25,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 273, char 0x254 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 6
SHP[1], 9
MDRP[m&gt;RBl], 10
MIAP[R], 25, 7
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="274">
      <instructions>
        <talk>/* VTTTalk glyph 274, char 0x255 */
/* GUI generated Wed Feb 26 07:11:35 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,28)
YShift(0,40)
YAnchor(9,7)
YDist(9,16)
YDist(9,20)
YInterpolate(0,45,9)
YDist(45,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 274, char 0x255 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 28
SHP[1], 40
MIAP[R], 9, 7
MDRP[m&gt;RBl], 16
MDRP[m&gt;RBl], 20
SRP2[], 0
IP[], 45
SRP0[], 45
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="275">
      <instructions>
        <talk>/* VTTTalk glyph 275, char 0x256 */
/* GUI generated Thu Feb 20 23:29:27 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,19)
YShift(0,23)
YDist(0,29)
YAnchor(10,0)
YAnchor(35,11)
YDist(35,60)
YAnchor(44,7)
YDist(44,51)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 275, char 0x256 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 19
SHP[1], 23
MDRP[m&lt;RGr], 29
MIAP[R], 10, 0
MIAP[R], 35, 11
MDRP[m&gt;RBl], 60
MIAP[R], 44, 7
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="276">
      <instructions>
        <talk>/* VTTTalk glyph 276, char 0x257 */
/* GUI generated Thu Feb 20 23:32:29 2020 */

/* Y direction */
YAnchor(11,1)
YDist(11,17)
YShift(11,23)
YDist(11,27)
YAnchor(46,11)
YDist(46,71)
YShift(46,0)
YDist(0,38)
YAnchor(55,7)
YDist(55,62)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 276, char 0x257 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 11, 1
MDRP[m&lt;RGr], 17
SHP[1], 23
MDRP[m&gt;RBl], 27
MIAP[R], 46, 11
MDRP[m&gt;RBl], 71
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 38
MIAP[R], 55, 7
MDRP[m&gt;RBl], 62
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="277">
      <instructions>
        <talk>/* VTTTalk Unicode 0x258 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(27,7)	/* max */

/* YDir: Stroke #0 */
YDist(27,16) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(27,20,0)
YAnchor(20)
YDist(20,23) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,7) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 277, char 0x258 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 27, 7
MDRP[m&gt;RBl], 16
SRP2[], 0
IP[], 20
MDAP[R], 20
MDRP[m&gt;RBl], 23
SRP0[], 0
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="278">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25b */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(15,7)	/* max */

/* YDir: Stroke #0 */
YInterpolate(15,35,0)
YAnchor(35)
YDist(35,38) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,45) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 278, char 0x25b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 15, 7
IP[], 35
MDAP[R], 35
MDRP[m&gt;RBl], 38
SRP0[], 0
MDRP[m&gt;RBl], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="279">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25c */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(40,7)	/* max */

/* YDir: Stroke #0 */
YDist(40,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(40,17,0)
YAnchor(17)
YDist(17,18) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,8) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 279, char 0x25c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 40, 7
MDRP[m&gt;RBl], 26
SRP2[], 0
IP[], 17
MDAP[R], 17
MDRP[m&gt;RBl], 18
SRP0[], 0
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="280">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25d */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 25 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(25,11)	/* min */
YAnchor(65,7)	/* max */

/* YDir: Stroke #0 */
YDist(65,51) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(65,42,25)
YAnchor(42)
YDist(42,43) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(65,0,25)
YAnchor(0)
YDist(0,18) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(25,33) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 280, char 0x25d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 25, 11
MIAP[R], 65, 7
MDRP[m&gt;RBl], 51
SRP2[], 25
IP[], 42
MDAP[R], 42
MDRP[m&gt;RBl], 43
SRP1[], 65
SRP2[], 25
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 18
SRP0[], 25
MDRP[m&gt;RBl], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="281">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25e */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(9,7)	/* max */

/* YDir: Stroke #0 */
YDist(9,43) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(9,34,0)
YAnchor(34)
YDist(34,35) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,25) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 281, char 0x25e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 9, 7
MDRP[m&gt;RBl], 43
SRP2[], 0
IP[], 34
MDAP[R], 34
MDRP[m&gt;RBl], 35
SRP0[], 0
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="282">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25f */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0,14)	/* min */
YAnchor(27,6)	/* max */

/* YDir: Stroke #0 */
YDist(27,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YIPAnchor(27,30,0)
YAnchor(30)
YDist(30,31) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,12) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(27,20)

Smooth()

</talk>
        <assembly>/* TT glyph 282, char 0x25f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 27, 6
MDRP[m&gt;RBl], 26
SRP2[], 0
IP[], 30
MDAP[R], 30
MDAP[R], 30
MDRP[m&gt;RBl], 31
SRP0[], 0
MDRP[m&gt;RBl], 12
SRP1[], 27
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="283">
      <instructions>
        <talk>/* VTTTalk glyph 283, char 0x260 */
/* GUI generated Thu Feb 20 23:39:18 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,6)
YShift(0,12)
YDist(0,16)
YAnchor(26,1)
YDist(26,32)
YShift(26,38)
YDist(26,42)
YAnchor(52,11)
YDist(52,72)
YAnchor(62,7)
YDist(62,83)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 283, char 0x260 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&lt;RGr], 6
SHP[1], 12
MDRP[m&gt;RBl], 16
MIAP[R], 26, 1
MDRP[m&lt;RGr], 32
SHP[1], 38
MDRP[m&gt;RBl], 42
MIAP[R], 52, 11
MDRP[m&gt;RBl], 72
MIAP[R], 62, 7
MDRP[m&gt;RBl], 83
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="284">
      <instructions>
        <talk>/* VTTTalk glyph 284, char 0x261 */
/* GUI generated Thu Feb 20 23:41:08 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,12)
YDist(0,16)
YAnchor(29,11)
YDist(29,49)
YAnchor(39,7)
YShift(39,23)
YDist(39,60)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 284, char 0x261 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 12
MDRP[m&gt;RBl], 16
MIAP[R], 29, 11
MDRP[m&gt;RBl], 49
MIAP[R], 39, 7
SHP[1], 23
MDRP[m&gt;RBl], 60
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="285">
      <instructions>
        <talk>/* VTTTalk glyph 285, char 0x262 */
/* GUI generated Wed Feb 26 07:14:47 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,30,69)
YAnchor(9,7)
YShift(9,15)
YLink(9,22,69)
YIPAnchor(0,48,9)
YShift(48,35)
YLink(48,47,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 285, char 0x262 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 30, 69
MIAP[R], 9, 7
SHP[1], 15
MIRP[m&gt;RBl], 22, 69
SRP2[], 0
IP[], 48
MDAP[R], 48
SHP[1], 35
MIRP[m&gt;RBl], 47, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="286">
      <instructions>
        <talk>/* VTTTalk glyph 286, char 0x263 */
/* GUI generated Thu Feb 20 23:43:13 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,15)
YAnchor(32,6)
YShift(32,8)
YShift(32,21)
YShift(32,36)
YDist(32,31)
YShift(31,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 286, char 0x263 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 15
MIAP[R], 32, 6
SHP[1], 8
SHP[1], 21
SHP[1], 36
MDRP[m&gt;RBl], 31
SHP[2], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="287">
      <instructions>
        <talk>/* VTTTalk glyph 287, char 0x264 */
/* GUI generated Thu Feb 20 23:44:31 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,30)
YAnchor(49,7)
YShift(49,9)
YDist(49,39)
YShift(39,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 287, char 0x264 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 30
MIAP[R], 49, 7
SHP[1], 9
MDRP[m&gt;RBl], 39
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="288">
      <instructions>
        <talk>/* VTTTalk Unicode 0x265 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 8 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,14)	/* min */
YAnchor(18,7)	/* max */

/* YDir: Stroke #0 */
YDist(18,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YAnchor(8,11)
YDist(8,40) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(18,4)

Smooth()


</talk>
        <assembly>/* TT glyph 288, char 0x265 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 18, 7
MDRP[m&gt;RBl], 31
MIAP[R], 8, 11
MDRP[m&gt;RBl], 40
SRP1[], 18
SHP[1], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="289">
      <instructions>
        <talk>/* VTTTalk glyph 289, char 0x266 */
/* GUI generated Fri Feb 21 05:55:40 2020 */

/* Y direction */
YAnchor(5,1)
YDist(5,11)
YShift(5,17)
YDist(5,21)
YAnchor(27,10)
YShift(27,28)
YDist(28,35)
YDist(28,41)
YAnchor(59,7)
YDist(59,50)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 289, char 0x266 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 1
MDRP[m&lt;RGr], 11
SHP[1], 17
MDRP[m&gt;RBl], 21
MIAP[R], 27, 10
SHP[1], 28
SRP0[], 28
MDRP[m&gt;RBl], 35
MDRP[m&gt;RBl], 41
MIAP[R], 59, 7
MDRP[m&gt;RBl], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="290">
      <instructions>
        <talk>/* VTTTalk glyph 290, char 0x267 */
/* GUI generated Fri Feb 21 05:59:10 2020 */

/* Y direction */
YAnchor(5,1)
YDist(5,11)
YShift(5,17)
YDist(5,21)
YAnchor(27,10)
YShift(27,63)
YAnchor(28)
YDist(28,34)
YShift(28,40)
YDist(28,44)
YAnchor(68,7)
YDist(68,56)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 290, char 0x267 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 1
MDRP[m&lt;RGr], 11
SHP[1], 17
MDRP[m&gt;RBl], 21
MIAP[R], 27, 10
SHP[1], 63
MDAP[R], 28
MDRP[m&lt;RGr], 34
SHP[1], 40
MDRP[m&gt;RBl], 44
MIAP[R], 68, 7
MDRP[m&gt;RBl], 56
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="291">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OVERLAP[]
OFFSET[R], 882, 774, 52
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="292">
      <instructions>
        <talk>/* VTTTalk glyph 292, char 0x26a */
/* GUI generated Fri Feb 21 06:01:27 2020 */

/* Y direction */
YAnchor(1,6)
YLink(1,0,66)
YShift(1,9)
YAnchor(4,10)
YLink(4,5,66)
YShift(4,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 292, char 0x26a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 1, 6
MIRP[m&gt;RBl], 0, 66
SHP[1], 9
MIAP[R], 4, 10
MIRP[m&gt;RBl], 5, 66
SHP[1], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="293">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 210, 40, 0
OVERLAP[]
OFFSET[R], 850, 220, -80

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="294">
      <instructions>
        <talk>/* VTTTalk glyph 294, char 0x26c */
/* GUI generated Fri Feb 21 06:13:48 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,51)
YAnchor(43,0)
YIPAnchor(43,36,29,0)
YDist(36,13)
YDist(29,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 294, char 0x26c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 51
MIAP[R], 43, 0
SRP2[], 0
IP[], 36
IP[], 29
MDAP[R], 36
MDAP[R], 29
SRP0[], 36
MDRP[m&gt;RBl], 13
SRP0[], 29
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="295">
      <instructions>
        <talk>/* VTTTalk glyph 295, char 0x26d */
/* GUI generated Fri Feb 21 06:14:49 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,19)
YShift(0,23)
YDist(0,29)
YAnchor(10,0)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 295, char 0x26d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 19
SHP[1], 23
MDRP[m&lt;RGr], 29
MIAP[R], 10, 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="296">
      <instructions>
        <talk>/* VTTTalk glyph 296, char 0x26e */
/* GUI generated Fri Feb 21 06:22:07 2020 */

/* Y direction */
YAnchor(0)
YDist(0,19)
YShift(0,52)
YAnchor(52)
YAnchor(10,0)
YAnchor(38,6)
YDist(38,26)
YIPAnchor(38,70,0)
YDist(70,77)
YAnchor(45,14)
YDist(45,63)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 296, char 0x26e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 19
SHP[1], 52
MDAP[R], 52
MIAP[R], 10, 0
MIAP[R], 38, 6
MDRP[m&gt;RBl], 26
SRP2[], 0
IP[], 70
MDAP[R], 70
MDRP[m&gt;RBl], 77
MIAP[R], 45, 14
MDRP[m&gt;RBl], 63
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="297">
      <instructions>
        <talk>/* VTTTalk glyph 297, char 0x26f */
/* GUI generated Fri Feb 21 06:29:54 2020 */

/* Y direction */
YAnchor(45,11)
YShift(45,0)
YDist(45,59)
YShift(59,33)
YShift(45,70)
YDist(70,84)
YAnchor(53,6)
YShift(53,40)
YShift(53,64)
YShift(53,77)
YShift(53,21)
YDist(21,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 297, char 0x26f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 45, 11
SHP[1], 0
MDRP[m&gt;RBl], 59
SHP[2], 33
SHP[1], 70
SRP0[], 70
MDRP[m&gt;RBl], 84
MIAP[R], 53, 6
SHP[1], 40
SHP[1], 64
SHP[1], 77
SHP[1], 21
SRP0[], 21
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="298">
      <instructions>
        <talk>/* VTTTalk glyph 298, char 0x270 */
/* GUI generated Fri Feb 21 06:32:04 2020 */

/* Y direction */
YAnchor(39,6)
YShift(39,53)
YShift(39,66)
YShift(39,79)
YShift(39,21)
YDist(21,13)
YAnchor(45,11)
YShift(45,0)
YDist(45,61)
YShift(61,33)
YAnchor(72,14)
YDist(72,86)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 298, char 0x270 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 39, 6
SHP[1], 53
SHP[1], 66
SHP[1], 79
SHP[1], 21
SRP0[], 21
MDRP[m&gt;RBl], 13
MIAP[R], 45, 11
SHP[1], 0
MDRP[m&gt;RBl], 61
SHP[2], 33
MIAP[R], 72, 14
MDRP[m&gt;RBl], 86
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="299">
      <instructions>
        <talk>/* VTTTalk glyph 299, char 0x271 */
/* GUI generated Fri Feb 21 06:35:15 2020 */

/* Y direction */
YAnchor(27,7)
YShift(27,89)
YShift(27,14)
YDist(14,6)
YDist(27,43)
YShift(43,77)
YAnchor(36,10)
YShift(36,21)
YShift(36,48)
YShift(36,84)
YAnchor(49,14)
YDist(49,55)
YShift(49,61)
YDist(49,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 299, char 0x271 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 27, 7
SHP[1], 89
SHP[1], 14
SRP0[], 14
MDRP[m&gt;RBl], 6
SRP0[], 27
MDRP[m&gt;RBl], 43
SHP[2], 77
MIAP[R], 36, 10
SHP[1], 21
SHP[1], 48
SHP[1], 84
MIAP[R], 49, 14
MDRP[m&lt;RGr], 55
SHP[1], 61
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="300">
      <instructions>
        <talk>/* VTTTalk glyph 300, char 0x272 */
/* GUI generated Fri Feb 21 06:41:31 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,12)
YDist(0,16)
YAnchor(49,7)
YDist(49,82)
YShift(49,36)
YDist(36,28)
YAnchor(70,11)
YDist(70,62)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 300, char 0x272 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 12
MDRP[m&gt;RBl], 16
MIAP[R], 49, 7
MDRP[m&gt;RBl], 82
SHP[1], 36
SRP0[], 36
MDRP[m&gt;RBl], 28
MIAP[R], 70, 11
MDRP[m&gt;RBl], 62
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="301">
      <instructions>
        <talk>/* VTTTalk glyph 301, char 0x273 */
/* GUI generated Fri Feb 21 06:43:46 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,39)
YShift(0,43)
YDist(0,49)
YAnchor(24,7)
YDist(24,12)
YShift(24,69)
YDist(69,61)
YAnchor(76,10)
YShift(76,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 301, char 0x273 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 39
SHP[1], 43
MDRP[m&lt;RGr], 49
MIAP[R], 24, 7
MDRP[m&gt;RBl], 12
SHP[1], 69
SRP0[], 69
MDRP[m&gt;RBl], 61
MIAP[R], 76, 10
SHP[1], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="302">
      <instructions>
        <talk>/* VTTTalk glyph 302, char 0x274 */
/* GUI generated Fri Feb 21 06:48:20 2020 */

/* Y direction */
YAnchor(20,6)
YShift(20,5)
YShift(20,12)
YShift(20,16)
YLink(20,19,66)
YShift(19,4)
YAnchor(23,10)
YShift(23,15)
YLink(23,24,66)
YShift(23,0)
YShift(0,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 302, char 0x274 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 20, 6
SHP[1], 5
SHP[1], 12
SHP[1], 16
MIRP[m&gt;RBl], 19, 66
SHP[2], 4
MIAP[R], 23, 10
SHP[1], 15
MIRP[m&gt;RBl], 24, 66
SHP[1], 0
SRP1[], 0
SHP[1], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="303">
      <instructions>
        <talk>/* VTTTalk glyph 303, char 0x275 */
/* GUI generated Fri Feb 21 06:52:18 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,25,69)
YIPAnchor(8,34,0)
YDist(34,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 303, char 0x275 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 25, 69
SRP2[], 0
IP[], 34
MDAP[R], 34
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="304">
      <instructions>
        <talk>/* VTTTalk glyph 304, char 0x276 */
/* GUI generated Wed Feb 26 07:19:09 2020 */

/* Y direction */
YAnchor(0,10)
YLink(0,20,66)
YLink(0,27,69)
YAnchor(9,6)
YLink(9,17,66)
YLink(9,32,69)
YIPAnchor(0,41,9)
YShift(41,45)
YDist(41,42)
YShift(42,46)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 304, char 0x276 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 20, 66
MIRP[m&gt;RBl], 27, 69
MIAP[R], 9, 6
MIRP[m&gt;RBl], 17, 66
MIRP[m&gt;RBl], 32, 69
SRP2[], 0
IP[], 41
MDAP[R], 41
SHP[1], 45
MDRP[m&gt;RBl], 42
SHP[2], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="305">
      <instructions>
        <talk>/* VTTTalk glyph 305, char 0x278 */
/* GUI generated Fri Feb 21 06:59:06 2020 */

/* Y direction */
YAnchor(35)
YLink(35,34,66)
YShift(35,43)
YAnchor(38)
YLink(38,39,66)
YShift(38,42)
YInterpolate(38,0,8,35)
YDist(0,16)
YDist(8,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 305, char 0x278 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 35
MIRP[m&gt;RBl], 34, 66
SHP[1], 43
MDAP[R], 38
MIRP[m&gt;RBl], 39, 66
SHP[1], 42
SRP2[], 35
IP[], 0
IP[], 8
SRP0[], 0
MDRP[m&lt;RWh], 16
SRP0[], 8
MDRP[m&lt;RWh], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="306">
      <instructions>
        <talk>/* VTTTalk glyph 306, char 0x279 */
/* GUI generated Fri Feb 21 06:59:55 2020 */

/* Y direction */
YAnchor(19,6)
YShift(19,34)
YAnchor(26,11)
YDist(26,40)
YShift(26,0)
YDist(0,7)
YDist(0,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 306, char 0x279 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 19, 6
SHP[1], 34
MIAP[R], 26, 11
MDRP[m&gt;RBl], 40
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 7
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="307">
      <instructions>
        <talk>/* VTTTalk glyph 307, char 0x27a */
/* GUI generated Fri Feb 21 07:01:04 2020 */

/* Y direction */
YAnchor(20)
YShift(20,36)
YAnchor(28,11)
YDist(28,42)
YShift(28,0)
YDist(0,7)
YDist(0,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 307, char 0x27a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 20
SHP[1], 36
MIAP[R], 28, 11
MDRP[m&gt;RBl], 42
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 7
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="308">
      <instructions>
        <talk>/* VTTTalk glyph 308, char 0x27b */
/* GUI generated Fri Feb 21 07:04:06 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,7)
YDist(0,12)
YAnchor(18,6)
YShift(18,35)
YAnchor(25,14)
YDist(25,42)
YShift(25,46)
YDist(25,52)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 308, char 0x27b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 7
MDRP[m&gt;RBl], 12
MIAP[R], 18, 6
SHP[1], 35
MIAP[R], 25, 14
MDRP[m&gt;RBl], 42
SHP[1], 46
MDRP[m&lt;RGr], 52
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="309">
      <instructions>
        <talk>/* VTTTalk glyph 309, char 0x27d */
/* GUI generated Fri Feb 21 07:06:19 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,57)
YShift(0,61)
YDist(0,67)
YAnchor(33,7)
YDist(33,40)
YDist(33,45)
YShift(33,20)
YDist(20,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 309, char 0x27d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 57
SHP[1], 61
MDRP[m&lt;RGr], 67
MIAP[R], 33, 7
MDRP[m&gt;RBl], 40
MDRP[m&gt;RBl], 45
SHP[1], 20
SRP0[], 20
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="310">
      <instructions>
        <talk>/* VTTTalk glyph 310, char 0x27e */
/* GUI generated Fri Feb 21 07:07:09 2020 */

/* Y direction */
YAnchor(5,7)
YDist(5,12)
YDist(5,18)
YAnchor(25,10)
YShift(25,0)
YLink(25,26,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 310, char 0x27e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 7
MDRP[m&gt;RBl], 12
MDRP[m&gt;RBl], 18
MIAP[R], 25, 10
SHP[1], 0
MIRP[m&gt;RBl], 26, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="311">
      <instructions>
        <talk>/* VTTTalk glyph 311, char 0x27f */
/* GUI generated Fri Feb 21 07:09:53 2020 */

/* Y direction */
YAnchor(23,7)
YDist(23,7)
YShift(23,11)
YDist(23,17)
YAnchor(31,14)
YShift(31,30)
YLink(31,32,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 311, char 0x27f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 23, 7
MDRP[m&gt;RBl], 7
SHP[1], 11
MDRP[m&lt;RGr], 17
MIAP[R], 31, 14
SHP[1], 30
MIRP[m&gt;RBl], 32, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="312">
      <instructions>
        <talk>/* VTTTalk glyph 312, char 0x280 */
/* GUI generated Tue Feb 25 21:18:24 2020 */

/* Y direction */
YAnchor(44,10)
YShift(44,0)
YShift(44,24)
YLink(44,45,66)
YAnchor(50,6)
YShift(50,25)
YInterpolate(44,9,50)
YDist(9,14)
YLink(50,49,66)
YShift(49,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 312, char 0x280 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 44, 10
SHP[1], 0
SHP[1], 24
MIRP[m&gt;RBl], 45, 66
MIAP[R], 50, 6
SHP[1], 25
SRP2[], 44
IP[], 9
SRP0[], 9
MDRP[m&gt;RBl], 14
SRP0[], 50
MIRP[m&gt;RBl], 49, 66
SHP[2], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="313">
      <instructions>
        <talk>/* VTTTalk glyph 313, char 0x281 */
/* GUI generated Tue Feb 25 21:16:31 2020 */

/* Y direction */
YAnchor(46,10)
YShift(46,0)
YLink(46,47,66)
YShift(47,3)
YAnchor(52,6)
YShift(52,2)
YLink(52,53,69)
YInterpolate(52,17,46)
YDist(17,12)
YShift(17,38)
YShift(52,27)
YDist(27,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 313, char 0x281 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 46, 10
SHP[1], 0
MIRP[m&gt;RBl], 47, 66
SHP[2], 3
MIAP[R], 52, 6
SHP[1], 2
MIRP[m&gt;RBl], 53, 69
SRP2[], 46
IP[], 17
SRP0[], 17
MDRP[m&gt;RBl], 12
SHP[1], 38
SRP1[], 52
SHP[1], 27
SRP0[], 27
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="314">
      <instructions>
        <talk>/* VTTTalk glyph 314, char 0x282 */
/* GUI generated Fri Feb 21 07:19:07 2020 */

/* Y direction */
YAnchor(0)
YDist(0,63)
YShift(0,67)
YDist(0,73)
YAnchor(30)
YDist(30,42)
YAnchor(55)
YDist(55,16)
YInterpolate(55,23,48,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 314, char 0x282 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 63
SHP[1], 67
MDRP[m&lt;RGr], 73
MDAP[R], 30
MDRP[m&gt;RBl], 42
MDAP[R], 55
MDRP[m&gt;RBl], 16
SRP2[], 30
IP[], 23
IP[], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="315">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 249, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="316">
      <instructions>
        <talk>/* VTTTalk glyph 316, char 0x284 */
/* GUI generated Fri Feb 21 07:21:54 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YLink(0,12,69)
YAnchor(22,1)
YDist(22,28)
YShift(22,31)
YLink(22,35,69)
YIPAnchor(22,46,0)
YDist(46,47)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 316, char 0x284 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MIRP[m&gt;RBl], 12, 69
MIAP[R], 22, 1
MDRP[m&lt;RGr], 28
SHP[1], 31
MIRP[m&gt;RBl], 35, 69
SRP2[], 0
IP[], 46
MDAP[R], 46
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="317">
      <instructions>
        <talk>/* VTTTalk glyph 317, char 0x285 */
/* GUI generated Fri Feb 21 07:23:11 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,43)
YShift(0,46)
YDist(0,52)
YAnchor(29,7)
YDist(29,14)
YShift(29,17)
YDist(29,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 317, char 0x285 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 43
SHP[1], 46
MDRP[m&lt;RGr], 52
MIAP[R], 29, 7
MDRP[m&gt;RBl], 14
SHP[1], 17
MDRP[m&lt;RGr], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="318">
      <instructions>
        <talk>/* VTTTalk glyph 318, char 0x286 */
/* GUI generated Fri Feb 21 07:24:35 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,17)
YLink(0,31,69)
YAnchor(41,1)
YDist(41,47)
YLink(41,53,69)
YIPAnchor(41,24,0)
YDist(24,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 318, char 0x286 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 17
MIRP[m&gt;RBl], 31, 69
MIAP[R], 41, 1
MDRP[m&gt;RBl], 47
MIRP[m&gt;RBl], 53, 69
SRP2[], 0
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="319">
      <instructions>
        <talk>/* VTTTalk glyph 319, char 0x287 */
/* GUI generated Tue Feb 25 21:19:35 2020 */

/* Y direction */
YAnchor(0)
YAnchor(16,7)
YDist(16,7)
YInterpolate(0,26,16)
YDist(26,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 319, char 0x287 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 16, 7
MDRP[m&gt;RBl], 7
SRP2[], 0
IP[], 26
SRP0[], 26
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="320">
      <instructions>
        <talk>/* VTTTalk glyph 320, char 0x288 */
/* GUI generated Fri Feb 21 07:27:49 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,16)
YShift(0,20)
YDist(0,26)
YAnchor(8)
YInterpolate(0,33,8)
YDist(33,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 320, char 0x288 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 16
SHP[1], 20
MDRP[m&lt;RGr], 26
MDAP[R], 8
SRP2[], 0
IP[], 33
SRP0[], 33
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="321">
      <instructions>
        <talk>/* VTTTalk glyph 321, char 0x289 */
/* GUI generated Fri Feb 21 07:31:36 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YShift(0,45)
YDist(45,59)
YAnchor(53,6)
YShift(53,40)
YShift(53,21)
YDist(21,13)
YIPAnchor(0,67,21)
YDist(67,68)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 321, char 0x289 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
SHP[1], 45
SRP0[], 45
MDRP[m&gt;RBl], 59
MIAP[R], 53, 6
SHP[1], 40
SHP[1], 21
SRP0[], 21
MDRP[m&gt;RBl], 13
SRP2[], 0
IP[], 67
MDAP[R], 67
MDRP[m&gt;RBl], 68
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="322">
      <instructions>
        <talk>/* VTTTalk glyph 322, char 0x28a */
/* GUI generated Fri Feb 21 07:32:39 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,23,69)
YAnchor(10,6)
YShift(10,7)
YShift(10,36)
YShift(10,39)
YLink(10,9,66)
YShift(9,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 322, char 0x28a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 23, 69
MIAP[R], 10, 6
SHP[1], 7
SHP[1], 36
SHP[1], 39
MIRP[m&gt;RBl], 9, 66
SHP[2], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="323">
      <instructions>
        <talk>/* VTTTalk glyph 323, char 0x28b */
/* GUI generated Fri Feb 21 07:33:10 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YAnchor(48,7)
YShift(48,21)
YDist(21,12)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 323, char 0x28b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
MIAP[R], 48, 7
SHP[1], 21
SRP0[], 21
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="324">
      <instructions>
        <talk>/* VTTTalk glyph 324, char 0x28c */
/* GUI generated Fri Feb 21 07:34:27 2020 */

/* Y direction */
YAnchor(1,7)
YShift(1,6)
YAnchor(8,10)
YShift(8,0)
YShift(8,4)
YShift(8,12)
YLink(8,9,66)
YShift(9,13)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 324, char 0x28c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 1, 7
SHP[1], 6
MIAP[R], 8, 10
SHP[1], 0
SHP[1], 4
SHP[1], 12
MIRP[m&gt;RBl], 9, 66
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="325">
      <instructions>
        <talk>/* VTTTalk glyph 325, char 0x28d */
/* GUI generated Fri Feb 21 07:37:46 2020 */

/* Y direction */
YAnchor(29,7)
YShift(29,10)
YDist(29,61)
YShift(61,80)
YAnchor(52,10)
YShift(52,0)
YDist(52,36)
YShift(52,20)
YDist(20,70)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 325, char 0x28d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 7
SHP[1], 10
MDRP[m&gt;RBl], 61
SHP[2], 80
MIAP[R], 52, 10
SHP[1], 0
MDRP[m&gt;RBl], 36
SHP[1], 20
SRP0[], 20
MDRP[m&gt;RBl], 70
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="326">
      <instructions>
        <talk>/* VTTTalk glyph 326, char 0x28e */
/* GUI generated Fri Feb 21 07:38:40 2020 */

/* Y direction */
YAnchor(12)
YDist(12,26)
YShift(12,55)
YAnchor(45,11)
YShift(45,0)
YDist(45,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 326, char 0x28e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RBl], 26
SHP[1], 55
MIAP[R], 45, 11
SHP[1], 0
MDRP[m&gt;RBl], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="327">
      <instructions>
        <talk>/* VTTTalk glyph 327, char 0x28f */
/* GUI generated Fri Feb 21 07:40:41 2020 */

/* Y direction */
YAnchor(13,6)
YShift(13,3)
YShift(13,7)
YShift(13,17)
YLink(13,12,66)
YShift(12,16)
YAnchor(20,10)
YShift(20,0)
YLink(20,21,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 327, char 0x28f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 6
SHP[1], 3
SHP[1], 7
SHP[1], 17
MIRP[m&gt;RBl], 12, 66
SHP[2], 16
MIAP[R], 20, 10
SHP[1], 0
MIRP[m&gt;RBl], 21, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="328">
      <instructions>
        <talk>/* VTTTalk glyph 328, char 0x290 */
/* GUI generated Wed Feb 26 07:22:01 2020 */

/* Y direction */
YAnchor(0)
YDist(0,80)
YShift(0,84)
YDist(0,90)
YAnchor(9,11)
YDist(9,58)
YAnchor(41,7)
YDist(41,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 328, char 0x290 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 80
SHP[1], 84
MDRP[m&lt;RGr], 90
MIAP[R], 9, 11
MDRP[m&gt;RBl], 58
MIAP[R], 41, 7
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="329">
      <instructions>
        <talk>/* VTTTalk glyph 329, char 0x291 */
/* GUI generated Fri Feb 21 07:45:07 2020 */

/* Y direction */
YAnchor(16,11)
YShift(16,0)
YShift(16,26)
YAnchor(26)
YDist(16,68)
YShift(16,23)
YDist(23,61)
YAnchor(49,7)
YShift(49,28)
YDist(49,33)
YShift(49,58)
YAnchor(58)
YInterpolate(16,7,49)
YDist(7,75)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 329, char 0x291 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 16, 11
SHP[1], 0
SHP[1], 26
MDAP[R], 26
SRP0[], 16
MDRP[m&gt;RBl], 68
SHP[1], 23
SRP0[], 23
MDRP[m&gt;RBl], 61
MIAP[R], 49, 7
SHP[1], 28
MDRP[m&gt;RBl], 33
SHP[1], 58
MDAP[R], 58
SRP1[], 16
SRP2[], 49
IP[], 7
SRP0[], 7
MDRP[m&gt;RBl], 75
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="330">
      <instructions>
        <talk>/* VTTTalk glyph 330, char 0x292 */
/* GUI generated Fri Feb 21 07:47:22 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,7)
YDist(0,18)
YAnchor(55,6)
YShift(55,41)
YDist(55,43)
YShift(55,52)
YShift(55,57)
YIPAnchor(55,32,0)
YDist(32,25)
YShift(32,29)
YShift(32,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 330, char 0x292 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 7
MDRP[m&gt;RBl], 18
MIAP[R], 55, 6
SHP[1], 41
MDRP[m&gt;RBl], 43
SHP[1], 52
SHP[1], 57
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 25
SHP[1], 29
SHP[1], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="331">
      <instructions>
        <talk>/* VTTTalk glyph 331, char 0x293 */
/* GUI generated Fri Feb 21 07:49:36 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,13)
YDist(0,24)
YAnchor(61,6)
YShift(61,47)
YDist(61,49)
YInterpolate(0,8,38,61)
YDist(8,17)
YDist(38,31)
YShift(38,35)
YShift(38,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 331, char 0x293 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 13
MDRP[m&gt;RBl], 24
MIAP[R], 61, 6
SHP[1], 47
MDRP[m&gt;RBl], 49
SRP2[], 0
IP[], 8
IP[], 38
SRP0[], 8
MDRP[m&gt;RBl], 17
SRP0[], 38
MDRP[m&gt;RBl], 31
SHP[1], 35
SHP[1], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="332">
      <instructions>
        <talk>/* VTTTalk glyph 332, char 0x294 */
/* GUI generated Fri Feb 21 07:51:31 2020 */

/* Y direction */
YAnchor(29)
YDist(29,11)
YAnchor(41,10)
YShift(41,40)
YLink(41,42,66)
YInterpolate(41,38,21,29)
YDist(38,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 332, char 0x294 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 29
MDRP[m&gt;RBl], 11
MIAP[R], 41, 10
SHP[1], 40
MIRP[m&gt;RBl], 42, 66
SRP2[], 29
IP[], 38
IP[], 21
SRP0[], 38
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="333">
      <instructions>
        <talk>/* VTTTalk glyph 333, char 0x295 */
/* GUI generated Fri Feb 21 07:52:46 2020 */

/* Y direction */
YAnchor(10)
YDist(10,30)
YAnchor(41,10)
YShift(41,40)
YLink(41,42,66)
YInterpolate(41,2,18,10)
YDist(2,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 333, char 0x295 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RBl], 30
MIAP[R], 41, 10
SHP[1], 40
MIRP[m&gt;RBl], 42, 66
SRP2[], 10
IP[], 2
IP[], 18
SRP0[], 2
MDRP[m&gt;RBl], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="334">
      <instructions>
        <talk>/* VTTTalk glyph 334, char 0x296 */
/* GUI generated Fri Feb 21 07:54:33 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,20,69)
YAnchor(42)
YShift(42,31)
YLink(42,41,66)
YInterpolate(42,33,8,0)
YDist(33,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 334, char 0x296 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 20, 69
MDAP[R], 42
SHP[1], 31
MIRP[m&gt;RBl], 41, 66
SRP2[], 0
IP[], 33
IP[], 8
SRP0[], 33
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="335">
      <instructions>
        <talk>/* VTTTalk glyph 335, char 0x297 */
/* GUI generated Fri Feb 21 07:55:15 2020 */

/* Y direction */
YAnchor(0)
YDist(0,30)
YAnchor(10,7)
YDist(10,16)
YShift(10,20)
YDist(10,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 335, char 0x297 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 30
MIAP[R], 10, 7
MDRP[m&gt;RBl], 16
SHP[1], 20
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="336">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OVERLAP[]
OFFSET[R], 849, 152, -396

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="337">
      <instructions>
        <talk>/* VTTTalk glyph 337, char 0x299 */
/* GUI generated Wed Feb 26 07:09:10 2020 */

/* Y direction */
YAnchor(0,10)
YLink(0,1,66)
YShift(0,47)
YAnchor(26,6)
YLink(26,25,66)
YShift(26,48)
YInterpolate(0,13,26)
YDist(13,14)
YShift(13,36)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 337, char 0x299 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 1, 66
SHP[1], 47
MIAP[R], 26, 6
MIRP[m&gt;RBl], 25, 66
SHP[1], 48
SRP2[], 0
IP[], 13
SRP0[], 13
MDRP[m&gt;RBl], 14
SHP[1], 36
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="338">
      <instructions>
        <talk>/* VTTTalk glyph 338, char 0x29b */
/* GUI generated Fri Feb 21 08:13:57 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,49,69)
YShift(0,63)
YAnchor(8,7)
YLink(8,41,69)
YIPAnchor(8,67,0)
YLink(67,68,66)
YAnchor(15)
YDist(15,21)
YShift(15,27)
YDist(15,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 338, char 0x29b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 49, 69
SHP[1], 63
MIAP[R], 8, 7
MIRP[m&gt;RBl], 41, 69
SRP2[], 0
IP[], 67
MDAP[R], 67
MIRP[m&gt;RBl], 68, 66
MDAP[R], 15
MDRP[m&lt;RGr], 21
SHP[1], 27
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="339">
      <instructions>
        <talk>/* VTTTalk glyph 339, char 0x29c */
/* GUI generated Fri Feb 21 08:15:46 2020 */

/* Y direction */
YAnchor(13)
YShift(13,5)
YShift(13,9)
YShift(13,17)
YLink(13,12,66)
YShift(12,16)
YAnchor(20)
YShift(20,4)
YShift(20,8)
YShift(20,24)
YIPAnchor(20,0,13)
YDist(0,1)
YLink(20,21,66)
YShift(21,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 339, char 0x29c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 5
SHP[1], 9
SHP[1], 17
MIRP[m&gt;RBl], 12, 66
SHP[2], 16
MDAP[R], 20
SHP[1], 4
SHP[1], 8
SHP[1], 24
SRP2[], 13
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 1
SRP0[], 20
MIRP[m&gt;RBl], 21, 66
SHP[2], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="340">
      <instructions>
        <talk>/* VTTTalk glyph 340, char 0x29d */
/* GUI generated Fri Feb 21 14:22:44 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,15)
YDist(0,28)
YAnchor(46,7)
YDist(46,37)
YInterpolate(0,8,46)
YDist(8,21)
YAnchor(57,89)
YDist(57,63)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 340, char 0x29d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 15
MDRP[m&gt;RBl], 28
MIAP[R], 46, 7
MDRP[m&gt;RBl], 37
SRP2[], 0
IP[], 8
SRP0[], 8
MDRP[m&gt;RBl], 21
MIAP[R], 57, 89
MDRP[m&gt;RBl], 63
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="341">
      <instructions>
        <talk>/* VTTTalk glyph 341, char 0x29f */
/* GUI generated Fri Feb 21 15:15:59 2020 */

/* Y direction */
YAnchor(0,10)
YLink(0,1,66)
YShift(0,13)
YAnchor(10,6)
YLink(10,9,66)
YShift(10,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 341, char 0x29f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 1, 66
SHP[1], 13
MIAP[R], 10, 6
MIRP[m&gt;RBl], 9, 66
SHP[1], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="342">
      <instructions>
        <talk>/* VTTTalk glyph 342, char 0x2a0 */
/* GUI generated Fri Feb 21 15:18:01 2020 */

/* Y direction */
YAnchor(5)
YShift(5,17)
YDist(5,21)
YAnchor(28,11)
YDist(28,49)
YAnchor(38,7)
YDist(38,60)
YAnchor(70)
YShift(70,0)
YDist(70,71)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 342, char 0x2a0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 17
MDRP[m&gt;RBl], 21
MIAP[R], 28, 11
MDRP[m&gt;RBl], 49
MIAP[R], 38, 7
MDRP[m&gt;RBl], 60
MDAP[R], 70
SHP[1], 0
MDRP[m&gt;RBl], 71
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="343">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OVERLAP[]
OFFSET[R], 825, 824, 128

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="344">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 333, 0, 0
OVERLAP[]
OFFSET[R], 825, 844, 128

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="345">
      <instructions>
        <talk>/* VTTTalk glyph 345, char 0x2a3 */
/* GUI generated Fri Feb 21 15:31:48 2020 */

/* Y direction */
YAnchor(10,0)
YAnchor(93,11)
YDist(93,118)
YShift(93,0)
YAnchor(0)
YDist(0,19)
YShift(93,81)
YAnchor(81)
YDist(81,64)
YShift(93,88)
YAnchor(88)
YDist(88,57)
YAnchor(102,7)
YDist(102,109)
YShift(102,45)
YAnchor(45)
YDist(45,29)
YShift(45,51)
YAnchor(51)
YDist(51,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 345, char 0x2a3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 10, 0
MIAP[R], 93, 11
MDRP[m&gt;RBl], 118
SHP[1], 0
MDAP[R], 0
MDRP[m&gt;RBl], 19
SRP1[], 93
SHP[1], 81
MDAP[R], 81
MDRP[m&gt;RBl], 64
SRP1[], 93
SHP[1], 88
MDAP[R], 88
MDRP[m&gt;RBl], 57
MIAP[R], 102, 7
MDRP[m&gt;RBl], 109
SHP[1], 45
MDAP[R], 45
MDRP[m&gt;RBl], 29
SHP[1], 51
MDAP[R], 51
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="346">
      <instructions>
        <talk>/* VTTTalk glyph 346, char 0x2a4 */
/* GUI generated Fri Feb 21 15:37:31 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YShift(0,37)
YDist(37,56)
YAnchor(9,7)
YDist(9,16)
YAnchor(47,0)
YAnchor(75,6)
YDist(75,63)
YAnchor(82,14)
YDist(82,100)
YDist(82,89)
YDist(89,95)
YIPAnchor(82,107,75)
YDist(107,114)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 346, char 0x2a4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
SHP[1], 37
SRP0[], 37
MDRP[m&gt;RBl], 56
MIAP[R], 9, 7
MDRP[m&gt;RBl], 16
MIAP[R], 47, 0
MIAP[R], 75, 6
MDRP[m&gt;RBl], 63
MIAP[R], 82, 14
MDRP[m&gt;RBl], 100
MDRP[M&lt;RGr], 89
MDRP[m&lt;RGr], 95
SRP1[], 82
SRP2[], 75
IP[], 107
MDAP[R], 107
MDRP[m&gt;RBl], 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="347">
      <instructions>
        <talk>/* VTTTalk glyph 347, char 0x2a5 */
/* GUI generated Fri Feb 21 15:42:13 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YShift(0,53)
YShift(53,37)
YDist(53,127)
YDist(0,60)
YShift(60,119)
YDist(60,120)
YShift(0,65)
YDist(65,83)
YAnchor(9,7)
YDist(9,16)
YShift(9,87)
YShift(9,117)
YShift(9,108)
YAnchor(108)
YDist(108,92)
YInterpolate(53,44,108)
YDist(44,134)
YAnchor(75,0)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 347, char 0x2a5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
SHP[1], 53
SRP1[], 53
SHP[1], 37
SRP0[], 53
MDRP[m&gt;RBl], 127
SRP0[], 0
MDRP[M&lt;RGr], 60
SHP[2], 119
MDRP[m&gt;RBl], 120
SRP1[], 0
SHP[1], 65
SRP0[], 65
MDRP[m&gt;RBl], 83
MIAP[R], 9, 7
MDRP[m&gt;RBl], 16
SHP[1], 87
SHP[1], 117
SHP[1], 108
MDAP[R], 108
MDRP[m&gt;RBl], 92
SRP2[], 53
IP[], 44
SRP0[], 44
MDRP[m&gt;RBl], 134
MIAP[R], 75, 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="348">
      <instructions>
        <talk>/* VTTTalk glyph 348, char 0x2a6 */
/* GUI generated Fri Feb 21 15:44:46 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,14)
YAnchor(7)
YInterpolate(0,55,7)
YDist(55,56)
YAnchor(28,7)
YDist(28,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 348, char 0x2a6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 14
MDAP[R], 7
SRP2[], 0
IP[], 55
SRP0[], 55
MDRP[m&gt;RBl], 56
MIAP[R], 28, 7
MDRP[m&gt;RBl], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="349">
      <instructions>
        <talk>/* VTTTalk glyph 349, char 0x2a7 */
/* GUI generated Wed Feb 26 07:24:05 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YAnchor(8)
YInterpolate(0,26,8)
YDist(26,27)
YAnchor(29,14)
YDist(29,35)
YShift(29,38)
YDist(29,42)
YAnchor(53,1)
YDist(53,59)
YDist(53,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 349, char 0x2a7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
MDAP[R], 8
SRP2[], 0
IP[], 26
SRP0[], 26
MDRP[m&gt;RBl], 27
MIAP[R], 29, 14
MDRP[m&lt;RGr], 35
SHP[1], 38
MDRP[m&gt;RBl], 42
MIAP[R], 53, 1
MDRP[m&gt;RBl], 59
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="350">
      <instructions>
        <talk>/* VTTTalk glyph 350, char 0x2a8 */
/* GUI generated Wed Feb 26 07:26:14 2020 */

/* Y direction */
YAnchor(8,7)
YAnchor(30,11)
YDist(30,57)
YShift(30,0)
YDist(0,16)
YInterpolate(0,72,8)
YDist(72,73)
YAnchor(39,7)
YDist(39,45)
YDist(39,49)
YInterpolate(30,22,39)
YDist(22,64)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 350, char 0x2a8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 7
MIAP[R], 30, 11
MDRP[m&gt;RBl], 57
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 16
SRP2[], 8
IP[], 72
SRP0[], 72
MDRP[m&gt;RBl], 73
MIAP[R], 39, 7
MDRP[m&gt;RBl], 45
MDRP[m&gt;RBl], 49
SRP2[], 30
IP[], 22
SRP0[], 22
MDRP[m&gt;RBl], 64
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="351">
      <instructions>
        <talk>/* VTTTalk glyph 351, char 0x2a9 */
/* GUI generated Wed Feb 26 07:27:29 2020 */

/* Y direction */
YAnchor(21,14)
YDist(21,27)
YDist(21,37)
YShift(21,71)
YDist(71,77)
YDist(71,83)
YAnchor(48,1)
YDist(48,60)
YAnchor(101,10)
YShift(101,0)
YAnchor(106,7)
YDist(106,94)
YShift(106,8)
YAnchor(8)
YShift(8,19)
YDist(8,7)
YShift(7,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 351, char 0x2a9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 14
MDRP[m&lt;RGr], 27
MDRP[m&gt;RBl], 37
SHP[1], 71
SRP0[], 71
MDRP[m&gt;RBl], 77
MDRP[m&gt;RBl], 83
MIAP[R], 48, 1
MDRP[m&gt;RBl], 60
MIAP[R], 101, 10
SHP[1], 0
MIAP[R], 106, 7
MDRP[m&gt;RBl], 94
SHP[1], 8
MDAP[R], 8
SHP[1], 19
MDRP[m&gt;RBl], 7
SHP[2], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="352">
      <instructions>
        <talk>/* VTTTalk glyph 352, char 0x2aa */
/* GUI generated Fri Feb 21 17:15:04 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,18)
YAnchor(10,0)
YAnchor(34,7)
YDist(34,47)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 352, char 0x2aa */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 18
MIAP[R], 10, 0
MIAP[R], 34, 7
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="353">
      <instructions>
        <talk>/* VTTTalk glyph 353, char 0x2ab */
/* GUI generated Fri Feb 21 17:29:21 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,18)
YShift(0,81)
YDist(81,64)
YShift(0,88)
YAnchor(88)
YDist(88,57)
YAnchor(10,0)
YAnchor(45,7)
YShift(45,24)
YDist(45,29)
YShift(45,54)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 353, char 0x2ab */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 18
SHP[1], 81
SRP0[], 81
MDRP[m&gt;RBl], 64
SRP1[], 0
SHP[1], 88
MDAP[R], 88
MDRP[m&gt;RBl], 57
MIAP[R], 10, 0
MIAP[R], 45, 7
SHP[1], 24
MDRP[m&gt;RBl], 29
SHP[1], 54
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="354">
      <instructions>
        <talk>/* VTTTalk glyph 354, char 0x2ac */
/* GUI generated Wed Feb 26 07:28:51 2020 */

/* Y direction */
YAnchor(8)
YShift(8,4)
YShift(8,7)
YShift(8,12)
YAnchor(21)
YShift(21,2)
YShift(21,9)
YShift(21,13)
YShift(21,18)
YShift(21,25)
YDist(21,20)
YShift(20,19)
YShift(20,24)
YDist(21,36)
YShift(36,32)
YShift(36,35)
YShift(36,40)
YAnchor(49)
YShift(49,30)
YShift(49,37)
YShift(49,41)
YShift(49,46)
YShift(49,53)
YDist(49,48)
YShift(48,47)
YShift(48,52)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 354, char 0x2ac */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 4
SHP[1], 7
SHP[1], 12
MDAP[R], 21
SHP[1], 2
SHP[1], 9
SHP[1], 13
SHP[1], 18
SHP[1], 25
MDRP[m&gt;RBl], 20
SHP[2], 19
SHP[2], 24
MDRP[m&lt;RWh], 36
SHP[2], 32
SHP[2], 35
SHP[2], 40
MDAP[R], 49
SHP[1], 30
SHP[1], 37
SHP[1], 41
SHP[1], 46
SHP[1], 53
MDRP[m&gt;RBl], 48
SHP[2], 47
SHP[2], 52
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="355">
      <instructions>
        <talk>/* VTTTalk glyph 355, char 0x2ad */
/* GUI generated Fri Feb 21 17:35:04 2020 */

/* Y direction */
YAnchor(8,10)
YShift(8,12)
YDist(8,9)
YDist(9,14)
YDist(9,0)
YShift(0,4)
YDist(0,1)
YDist(1,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 355, char 0x2ad */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 12
MDRP[M&gt;RBl], 9
MDRP[m&gt;RBl], 14
MDRP[M&lt;RWh], 0
SHP[2], 4
MDRP[M&gt;RBl], 1
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="356">
      <instructions>
        <talk>/* VTTTalk glyph 356, char 0x2ae */
/* GUI generated Fri Feb 21 17:37:09 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(8,11)
YDist(8,51)
YAnchor(58,6)
YShift(58,3)
YShift(58,39)
YDist(39,23)
YDist(39,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 356, char 0x2ae */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 8, 11
MDRP[m&gt;RBl], 51
MIAP[R], 58, 6
SHP[1], 3
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 23
MDRP[m&lt;RGr], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="357">
      <instructions>
        <talk>/* VTTTalk glyph 357, char 0x2af */
/* GUI generated Fri Feb 21 17:40:27 2020 */

/* Y direction */
YAnchor(0)
YDist(0,43)
YAnchor(50,6)
YShift(50,63)
YShift(50,31)
YDist(31,15)
YShift(31,19)
YDist(31,25)
YAnchor(55,14)
YDist(55,70)
YShift(55,74)
YDist(55,80)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 357, char 0x2af */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 43
MIAP[R], 50, 6
SHP[1], 63
SHP[1], 31
SRP0[], 31
MDRP[m&gt;RBl], 15
SHP[1], 19
MDRP[m&lt;RGr], 25
MIAP[R], 55, 14
MDRP[m&gt;RBl], 70
SHP[1], 74
MDRP[m&lt;RGr], 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="358">
      <instructions>
        <talk>/* VTTTalk glyph 358, char 0x1d79 */
/* GUI generated Thu Apr 16 18:07:00 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,37,69)
YAnchor(62,6)
YShift(62,19)
YShift(62,56)
YDist(62,68,&gt;=)
YInterpolate(0,12,62)
YLink(12,45,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 358, char 0x1d79 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 37, 69
MIAP[R], 62, 6
SHP[1], 19
SHP[1], 56
MDRP[m&gt;RGr], 68
SRP2[], 0
IP[], 12
SRP0[], 12
MIRP[m&gt;RBl], 45, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="359">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 387, 0, 0
OVERLAP[]
OFFSET[R], 791, 771, 13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="360">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 249, 0, 0
OVERLAP[]
OFFSET[R], 826, 650, -146
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="361">
      <instructions>
        <talk>/* VTTTalk glyph 361, char 0x2c71 */
/* GUI generated Fri Feb 21 17:44:25 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YAnchor(23,6)
YDist(23,9)
YAnchor(41)
YShift(41,53)
YDist(41,57)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 361, char 0x2c71 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
MIAP[R], 23, 6
MDRP[m&gt;RBl], 9
MDAP[R], 41
SHP[1], 53
MDRP[m&gt;RBl], 57
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="362">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 208, 0, 0
OVERLAP[]
OFFSET[R], 825, 934, 731

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="363">
      <instructions>
        <talk>/* VTTTalk glyph 363, char 0xa74b */
/* GUI generated Fri Feb 21 17:46:07 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,25,69)
YIPAnchor(8,34,0)
YDist(34,35)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 363, char 0xa74b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 25, 69
SRP2[], 0
IP[], 34
MDAP[R], 34
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="364">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 236, 0, 0
OVERLAP[]
OFFSET[R], 825, 508, -650
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="365">
      <instructions>
        <talk>/* VTTTalk glyph 365, char 0xa753 */
/* GUI generated Fri Feb 21 17:50:02 2020 */

/* Y direction */
YAnchor(26,7)
YDist(26,16)
YAnchor(36,11)
YDist(36,7)
YAnchor(49,14)
YDist(49,50)
YShift(49,57)
YInterpolate(49,0,36)
YDist(0,42)
YAnchor(55)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 365, char 0xa753 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 26, 7
MDRP[m&lt;RGr], 16
MIAP[R], 36, 11
MDRP[m&gt;RBl], 7
MIAP[R], 49, 14
MDRP[m&gt;RBl], 50
SHP[1], 57
SRP2[], 36
IP[], 0
SRP0[], 0
MDRP[m&gt;RBl], 42
MDAP[R], 55
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="366">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OVERLAP[]
OFFSET[R], 825, 991, -597
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="367">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OVERLAP[]
OFFSET[R], 826, 899, -923
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="368">
      <instructions>
        <talk>/* VTTTalk glyph 368, char 0xa75d */
/* GUI generated Fri Feb 21 17:51:35 2020 */

/* Y direction */
YAnchor(0,10)
YShift(0,29)
YDist(0,26)
YShift(26,31)
YAnchor(17,7)
YDist(17,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 368, char 0xa75d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 29
MDRP[m&gt;RBl], 26
SHP[2], 31
MIAP[R], 17, 7
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="369">
      <instructions>
        <talk>/* VTTTalk glyph 369, char 0xa76f */
/* GUI generated Fri Feb 21 17:52:30 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(35,7)
YLink(35,9,69)
YIPAnchor(35,26,0)
YDist(26,17)
YDist(26,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 369, char 0xa76f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MIAP[R], 35, 7
MIRP[m&gt;RBl], 9, 69
SRP2[], 0
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 17
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="370">
      <instructions>
        <talk>/* VTTTalk glyph 370, char 0xa77a */
/* GUI generated Fri Feb 21 17:55:16 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,17,69)
YAnchor(33)
YAnchor(40,6)
YDist(40,25)
YInterpolate(25,9,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 370, char 0xa77a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 17, 69
MDAP[R], 33
MIAP[R], 40, 6
MDRP[m&gt;RBl], 25
IP[], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="371">
      <instructions>
        <talk>/* VTTTalk glyph 371, char 0xa77c */
/* GUI generated Fri Feb 21 17:56:19 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(17,7)
YShift(17,31)
YDist(31,38)
YDist(31,44)
YIPAnchor(17,52,0)
YDist(52,49)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 371, char 0xa77c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 17, 7
SHP[1], 31
SRP0[], 31
MDRP[m&gt;RBl], 38
MDRP[m&gt;RBl], 44
SRP1[], 17
SRP2[], 0
IP[], 52
MDAP[R], 52
MDRP[m&gt;RBl], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="372">
      <instructions>
        <talk>/* VTTTalk glyph 372, char 0xa783 */
/* GUI generated Fri Feb 21 17:58:17 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(26,11)
YDist(26,64)
YAnchor(51,7)
YDist(51,39)
YShift(51,17)
YDist(17,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 372, char 0xa783 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 26, 11
MDRP[m&gt;RBl], 64
MIAP[R], 51, 7
MDRP[m&gt;RBl], 39
SHP[1], 17
SRP0[], 17
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="373">
      <instructions>
        <talk>/* VTTTalk glyph 373, char 0xa785 */
/* GUI generated Fri Feb 21 18:06:37 2020 */

/* Y direction */
YAnchor(6)
YDist(6,19)
YShift(6,43)
YDist(43,34)
YAnchor(26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 373, char 0xa785 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 19
SHP[1], 43
SRP0[], 43
MDRP[m&gt;RBl], 34
MDAP[R], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="374">
      <instructions>
        <talk>/* VTTTalk glyph 374, char 0xa787 */
/* GUI generated Fri Feb 21 20:48:48 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,17)
YAnchor(32,6)
YShift(32,8)
YDist(32,24)
YShift(32,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 374, char 0xa787 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 17
MIAP[R], 32, 6
SHP[1], 8
MDRP[m&gt;RBl], 24
SHP[1], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="375">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 818, 1004, -13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="376">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 799, 985, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="377">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 255, 0, 0
OVERLAP[]
OFFSET[R], 800, 1085, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="378">
      <instructions>
        <talk>/* VTTTalk glyph 378, char 0x76 (v) */
/* GUI generated Fri Feb 21 20:49:58 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YAnchor(24,6)
YDist(24,7)
YShift(24,46)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 378, char 0x76 (v) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
MIAP[R], 24, 6
MDRP[m&gt;RBl], 7
SHP[1], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="379">
      <instructions>
        <talk>/* VTTTalk glyph 379, char 0x77 (w) */
/* GUI generated Fri Feb 21 20:51:16 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,73)
YDist(0,34)
YShift(34,51)
YAnchor(25,6)
YDist(25,8)
YShift(25,63)
YShift(25,82)
YAnchor(82)
YDist(82,43)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 379, char 0x77 (w) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 73
MDRP[m&gt;RBl], 34
SHP[2], 51
MIAP[R], 25, 6
MDRP[m&gt;RBl], 8
SHP[1], 63
SHP[1], 82
MDAP[R], 82
MDRP[m&gt;RBl], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="380">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 379, 0, 0
OVERLAP[]
OFFSET[R], 793, 1210, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="381">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 379, 0, 0
OVERLAP[]
OFFSET[R], 796, 1397, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="382">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 379, 0, 0
OVERLAP[]
OFFSET[R], 790, 1288, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="383">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 379, 0, 0
OVERLAP[]
OFFSET[R], 792, 1184, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="384">
      <instructions>
        <talk>/* VTTTalk glyph 384, char 0xa761 */
/* GUI generated Fri Feb 21 20:52:47 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,13)
YAnchor(40,11)
YShift(40,22)
YDist(40,74)
YShift(74,91)
YAnchor(65,6)
YDist(65,48)
YShift(65,103)
YShift(65,31)
YAnchor(31)
YDist(31,83)

/* X direction */

Smooth()



</talk>
        <assembly>/* TT glyph 384, char 0xa761 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 13
MIAP[R], 40, 11
SHP[1], 22
MDRP[m&gt;RBl], 74
SHP[2], 91
MIAP[R], 65, 6
MDRP[m&gt;RBl], 48
SHP[1], 103
SHP[1], 31
MDAP[R], 31
MDRP[m&gt;RBl], 83
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="385">
      <instructions>
        <talk>/* VTTTalk glyph 385, char 0x1bf */
/* GUI generated Fri Feb 21 20:54:23 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(26,11)
YDist(26,27)
YAnchor(45)
YDist(45,36)
YShift(45,17)
YDist(17,8)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 385, char 0x1bf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 26, 11
MDRP[m&gt;RBl], 27
MDAP[R], 45
MDRP[m&gt;RBl], 36
SHP[1], 17
SRP0[], 17
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="386">
      <instructions>
        <talk>/* VTTTalk Unicode 0x78 (x) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* CVT 48 6 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(48,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(48,16) /*stroke, CVT of another stroke*/
YDist(16,27) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(48,39) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,10) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YShift(0,33) /*stroke, CVT of another stroke*/
YDist(33,55) /*perpendicular to the stroke*/

Smooth()

/* Thin diagonal */
XDelta(13,-1/8@12..53)
XDelta(14,-1/8@12..53)
XDelta(15,-1/16@12..53)
XDelta(30,1/8@12..53)
XDelta(31,1/8@12..53)
XDelta(32,1/16@12..53)

/* Upper right */
XDelta(17,1/4@12..25)
XDelta(18,1/4@12..25)
XDelta(19,1/4@12..25)
XDelta(20,1/4@12..25)
XDelta(21,1/4@12..25)
XDelta(22,1/4@12..25)

/* Lower right */
XDelta(60,1/4@12..25)
XDelta(61,1/4@12..25)
XDelta(62,1/4@12..25)
XDelta(63,1/4@12..25)

/* Upper left */
XDelta(47,-1/4@12..25)
XDelta(46,-1/4@12..25)
XDelta(45,-1/4@12..25)
XDelta(44,-1/4@12..25)

/* Lower left */
XDelta(6,-1/4@12..25)
XDelta(5,-1/4@12..25)
XDelta(4,-1/4@12..25)
XDelta(3,-1/4@12..25)
XDelta(2,-1/4@12..25)</talk>
        <assembly>/* TT glyph 386, char 0x78 (x) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 48, 7
SHP[1], 16
SRP0[], 16
MDRP[m&gt;RBl], 27
SRP0[], 48
MDRP[m&gt;RBl], 39
SRP0[], 0
MDRP[m&gt;RBl], 10
SHP[1], 33
SRP0[], 33
MDRP[m&gt;RBl], 55
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 13, -8, 12, 53, 72
CALL[], 14, -8, 12, 53, 72
CALL[], 15, -4, 12, 53, 72
CALL[], 30, 8, 12, 53, 72
CALL[], 31, 8, 12, 53, 72
CALL[], 32, 4, 12, 53, 72
CALL[], 17, 16, 12, 25, 72
CALL[], 18, 16, 12, 25, 72
CALL[], 19, 16, 12, 25, 72
CALL[], 20, 16, 12, 25, 72
CALL[], 21, 16, 12, 25, 72
CALL[], 22, 16, 12, 25, 72
CALL[], 60, 16, 12, 25, 72
CALL[], 61, 16, 12, 25, 72
CALL[], 62, 16, 12, 25, 72
CALL[], 63, 16, 12, 25, 72
CALL[], 47, -16, 12, 25, 72
CALL[], 46, -16, 12, 25, 72
CALL[], 45, -16, 12, 25, 72
CALL[], 44, -16, 12, 25, 72
CALL[], 6, -16, 12, 25, 72
CALL[], 5, -16, 12, 25, 72
CALL[], 4, -16, 12, 25, 72
CALL[], 3, -16, 12, 25, 72
CALL[], 2, -16, 12, 25, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="387">
      <instructions>
        <talk>/* VTTTalk Unicode 0x79 (y) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 15 */
/* CVT 31 6 */
/* Min and Max */
YAnchor(0,14)	/* min, CVT */
YAnchor(31,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(31,23) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(31,51)

Smooth()

/* Upper left */
XDelta(27,-1/4@12..23)
XDelta(28,-1/4@12..23)
XDelta(29,-1/4@12..23)
XDelta(30,-1/8@12..23)

/* Long stroke */
XDelta(55,3/8@12..28)
XDelta(56,3/8@12..28)
XDelta(57,1/2@12..28)
XDelta(58,5/8@12..28)
XDelta(59,5/8@12..28)
XDelta(60,3/4@12..28)
XDelta(61,3/8@12..28)
XDelta(62,3/8@12..28)
XDelta(63,1/8@12..28)
</talk>
        <assembly>/* TT glyph 387, char 0x79 (y) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 31, 7
MDRP[m&gt;RBl], 23
SRP0[], 0
MDRP[m&gt;RBl], 13
SRP1[], 31
SHP[1], 51
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 27, -16, 12, 23, 72
CALL[], 28, -16, 12, 23, 72
CALL[], 29, -16, 12, 23, 72
CALL[], 30, -8, 12, 23, 72
CALL[], 55, 24, 12, 28, 72
CALL[], 56, 24, 12, 28, 72
CALL[], 57, 32, 12, 28, 72
CALL[], 58, 40, 12, 28, 72
CALL[], 59, 40, 12, 28, 72
CALL[], 60, 48, 12, 28, 72
CALL[], 61, 24, 12, 28, 72
CALL[], 62, 24, 12, 28, 72
CALL[], 63, 8, 12, 28, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="388">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 387, 0, 0
OVERLAP[]
OFFSET[R], 793, 664, 13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="389">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 387, 0, 0
OVERLAP[]
OFFSET[R], 796, 851, 13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="390">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 387, 0, 0
OVERLAP[]
OFFSET[R], 790, 742, 13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="391">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 387, 0, 0
OVERLAP[]
OFFSET[R], 792, 638, 13
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="392">
      <instructions>
        <talk>/* VTTTalk glyph 392, char 0x7a (z) */
/* GUI generated Fri Feb 21 20:57:06 2020 */

/* Y direction */
YAnchor(24,11)
YDist(24,7)
YShift(24,34)
YShift(24,31)
YAnchor(31)
YShift(31,0)
YDist(31,1)
YAnchor(57,7)
YShift(57,36)
YDist(57,41)
YShift(57,63)
YAnchor(63)
YShift(57,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 392, char 0x7a (z) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 24, 11
MDRP[m&gt;RBl], 7
SHP[1], 34
SHP[1], 31
MDAP[R], 31
SHP[1], 0
MDRP[m&gt;RBl], 1
MIAP[R], 57, 7
SHP[1], 36
MDRP[m&gt;RBl], 41
SHP[1], 63
MDAP[R], 63
SRP1[], 57
SHP[1], 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="393">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 392, 0, 0
OVERLAP[]
OFFSET[R], 793, 782, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="394">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 392, 0, 0
OVERLAP[]
OFFSET[R], 797, 857, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="395">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 392, 0, 0
OVERLAP[]
OFFSET[R], 791, 889, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="396">
      <instructions>
        <talk>/* VTTTalk glyph 396, char 0xffff */
/* GUI generated Fri Feb 21 21:15:35 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YAnchor(9,7)
YDist(9,16)
YAnchor(37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 396, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
MIAP[R], 9, 7
MDRP[m&gt;RBl], 16
MDAP[R], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="397">
      <instructions>
        <talk>/* VTTTalk glyph 397, char 0xffff */
/* GUI generated Fri Feb 21 21:16:37 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YLink(0,13,69)
YAnchor(24,1)
YLink(24,36,69)
YIPAnchor(24,46,0)
YDist(46,45)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 397, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MIRP[m&gt;RBl], 13, 69
MIAP[R], 24, 1
MIRP[m&gt;RBl], 36, 69
SRP2[], 0
IP[], 46
MDAP[R], 46
MDRP[m&gt;RBl], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="398">
      <instructions>
        <talk>/* VTTTalk glyph 398, char 0xffff */
/* GUI generated Fri Feb 21 21:18:31 2020 */

/* Y direction */
YAnchor(10,11)
YDist(10,35)
YAnchor(19,7)
YDist(19,26)
YAnchor(46)
YInterpolate(19,0,46)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 398, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 10, 11
MDRP[m&gt;RBl], 35
MIAP[R], 19, 7
MDRP[m&gt;RBl], 26
MDAP[R], 46
SRP2[], 19
IP[], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="399">
      <instructions>
        <talk>/* VTTTalk glyph 399, char 0xffff */
/* GUI generated Fri Feb 21 21:20:19 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,9,69)
YAnchor(26,7)
YDist(26,18)
YShift(26,37)
YAnchor(40,14)
YShift(40,39)
YLink(40,41,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 399, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 9, 69
MIAP[R], 26, 7
MDRP[m&gt;RBl], 18
SHP[1], 37
MIAP[R], 40, 14
SHP[1], 39
MIRP[m&gt;RBl], 41, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="400">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="401">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 249, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="402">
      <instructions>
        <talk>/* VTTTalk glyph 402, char 0xffff */
/* GUI generated Fri Feb 21 21:21:49 2020 */

/* Y direction */
YAnchor(29,7)
YDist(29,13)
YAnchor(49,11)
YDist(49,64)
YShift(49,0)
YDist(0,41)
YInterpolate(49,57,20,29)
YShift(57,56)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 402, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 7
MDRP[m&gt;RBl], 13
MIAP[R], 49, 11
MDRP[m&gt;RBl], 64
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 41
SRP1[], 49
SRP2[], 29
IP[], 57
IP[], 20
SRP1[], 57
SHP[1], 56
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="403">
      <instructions>
        <talk>/* VTTTalk glyph 403, char 0xffff */
/* GUI generated Fri Feb 21 21:23:33 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,25,69)
YAnchor(9,7)
YLink(9,16,69)
YAnchor(37)
YShift(37,48)
YShift(37,53)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 403, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 25, 69
MIAP[R], 9, 7
MIRP[m&gt;RBl], 16, 69
MDAP[R], 37
SHP[1], 48
SHP[1], 53
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="404">
      <instructions>
        <talk>/* VTTTalk glyph 404, char 0xffff */
/* GUI generated Fri Feb 21 21:24:44 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(6,0)
YAnchor(11,11)
YDist(11,12)
YDelta(12,1/4@12..35,1/2@36..47)
YAnchor(30,7)
YDist(30,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 404, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 6, 0
MIAP[R], 11, 11
MDRP[m&gt;RBl], 12
CALL[], 12, 16, 12, 35, 72
CALL[], 12, 32, 36, 47, 72
MIAP[R], 30, 7
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="405">
      <instructions>
        <talk>/* VTTTalk glyph 405, char 0xffff */
/* GUI generated Fri Feb 21 21:30:45 2020 */

/* Y direction */
YAnchor(7,11)
YDist(7,72)
YShift(7,0)
YDist(0,65)
YAnchor(43,7)
YDist(43,22)
YInterpolate(7,82,59,15,90,43)
YShift(43,51)
YDist(51,97)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 405, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 11
MDRP[m&gt;RBl], 72
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 65
MIAP[R], 43, 7
MDRP[m&gt;RBl], 22
SRP2[], 7
SLOOP[], 4
IP[], 82, 59, 15, 90
SHP[1], 51
SRP0[], 51
MDRP[m&gt;RBl], 97
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="406">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
SOFFSET[R], 405, 0, 0, 1.0029, 0.0000, 0.0000, 1.0029
OVERLAP[]
SOFFSET[R], 793, 1008, 0, 1.0029, 0.0000, 0.0000, 1.0029

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="407">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 405, 0, 0
OVERLAP[]
OFFSET[R], 801, 1133, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="408">
      <instructions>
        <talk>/* VTTTalk glyph 408, char 0xffff */
/* GUI generated Fri Feb 21 21:32:44 2020 */

/* Y direction */
YAnchor(18,7)
YDist(18,9)
YAnchor(30,0)
YAnchor(33,10)
YIPAnchor(33,44,30)
YShift(44,0)
YShift(44,13)
YAnchor(34)
YDist(34,55)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 408, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 7
MDRP[m&gt;RBl], 9
MIAP[R], 30, 0
MIAP[R], 33, 10
SRP2[], 30
IP[], 44
MDAP[R], 44
SHP[1], 0
SHP[1], 13
MDAP[R], 34
MDRP[m&gt;RBl], 55
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="409">
      <instructions>
        <talk>/* VTTTalk glyph 409, char 0xffff */
/* GUI generated Sun Feb 23 13:49:04 2020 */

/* Y direction */
YAnchor(0)
YDist(0,81)
YAnchor(20,11)
YShift(20,9)
YAnchor(9)
YShift(9,71)
YDist(9,72)
YAnchor(64,7)
YShift(64,70)
YShift(64,48)
YAnchor(48)
YDist(48,34)
YShift(64,54)
YAnchor(54)
YDist(54,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 409, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 81
MIAP[R], 20, 11
SHP[1], 9
MDAP[R], 9
SHP[1], 71
MDRP[m&lt;RGr], 72
MIAP[R], 64, 7
SHP[1], 70
SHP[1], 48
MDAP[R], 48
MDRP[m&gt;RBl], 34
SRP1[], 64
SHP[1], 54
MDAP[R], 54
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="410">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 409, 0, 0
OVERLAP[]
OFFSET[R], 793, 764, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="411">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 409, 0, 0
OVERLAP[]
OFFSET[R], 797, 839, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="412">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 409, 0, 0
OVERLAP[]
OFFSET[R], 791, 871, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="413">
      <instructions>
        <talk>/* VTTTalk glyph 413, char 0xffff */
/* GUI generated Fri Feb 21 21:36:33 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(6,0)
YShift(6,46)
YAnchor(11,11)
YDist(11,12)
YDelta(12,1/4@12..35,1/2@36..47)
YAnchor(30,7)
YDist(30,21)
YShift(30,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 413, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 6, 0
SHP[1], 46
MIAP[R], 11, 11
MDRP[m&gt;RBl], 12
CALL[], 12, 16, 12, 35, 72
CALL[], 12, 32, 36, 47, 72
MIAP[R], 30, 7
MDRP[m&gt;RBl], 21
SHP[1], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="414">
      <instructions>
        <talk>/* VTTTalk glyph 414, char 0xffff */
/* GUI generated Fri Feb 21 21:40:13 2020 */

/* Y direction */
YAnchor(0,10)
YLink(0,42,66)
YDist(0,50)
YAnchor(8,6)
YLink(8,39,66)
YDist(8,57)
YIPAnchor(0,66,26,8)
YShift(66,70)
YDist(66,67)
YShift(67,71)
YDist(26,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 414, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 42, 66
MDRP[m&gt;RBl], 50
MIAP[R], 8, 6
MIRP[m&gt;RBl], 39, 66
MDRP[m&gt;RBl], 57
SRP2[], 0
IP[], 66
IP[], 26
MDAP[R], 66
MDAP[R], 26
SRP1[], 66
SHP[1], 70
SRP0[], 66
MDRP[m&gt;RBl], 67
SHP[2], 71
SRP0[], 26
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="415">
      <instructions>
        <talk>/* VTTTalk glyph 415, char 0xffff */
/* GUI generated Fri Feb 21 21:42:05 2020 */

/* Y direction */
YAnchor(13,6)
YShift(13,3)
YShift(13,7)
YShift(13,17)
YLink(13,12,66)
YShift(12,16)
YAnchor(20,10)
YShift(20,0)
YLink(20,21,66)
YIPAnchor(20,24,13)
YDist(24,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 415, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 6
SHP[1], 3
SHP[1], 7
SHP[1], 17
MIRP[m&gt;RBl], 12, 66
SHP[2], 16
MIAP[R], 20, 10
SHP[1], 0
MIRP[m&gt;RBl], 21, 66
SRP2[], 13
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="416">
      <instructions>
        <talk>/* VTTTalk glyph 416, char 0xffff */
/* GUI generated Fri Feb 21 21:44:21 2020 */

/* Y direction */
YAnchor(79,11)
YDist(79,106)
YShift(79,0)
YDist(0,14)
YShift(79,25)
YLink(25,40,69)
YAnchor(88,7)
YShift(88,7)
YShift(88,19)
YDist(88,97)
YShift(88,54)
YLink(54,66,69)

/* X direction */

Smooth()
XDelta(15,-1/4@12..44)
XDelta(16,-1/4@12..44)
XDelta(17,-1/4@12..44)
XDelta(18,-1/4@12..44)
XDelta(19,-1/4@12..44)
XDelta(20,1/4@12..44)
XDelta(21,1/4@12..44)
XDelta(22,1/4@12..44)
XDelta(23,1/4@12..44)
XDelta(24,1/4@12..44)</talk>
        <assembly>/* TT glyph 416, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 79, 11
MDRP[m&gt;RBl], 106
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 14
SRP1[], 79
SHP[1], 25
SRP0[], 25
MIRP[m&gt;RBl], 40, 69
MIAP[R], 88, 7
SHP[1], 7
SHP[1], 19
MDRP[m&gt;RBl], 97
SHP[1], 54
SRP0[], 54
MIRP[m&gt;RBl], 66, 69
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 15, -16, 12, 44, 72
CALL[], 16, -16, 12, 44, 72
CALL[], 17, -16, 12, 44, 72
CALL[], 18, -16, 12, 44, 72
CALL[], 19, -16, 12, 44, 72
CALL[], 20, 16, 12, 44, 72
CALL[], 21, 16, 12, 44, 72
CALL[], 22, 16, 12, 44, 72
CALL[], 23, 16, 12, 44, 72
CALL[], 24, 16, 12, 44, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="417">
      <instructions>
        <talk>/* VTTTalk glyph 417, char 0xffff */
/* GUI generated Fri Feb 21 22:03:47 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,90)
YShift(0,49)
YDist(49,40)
YAnchor(22)
YDist(22,28)
YShift(22,16)
YAnchor(16)
YDist(16,63)
YInterpolate(0,99,22)
YDist(99,98)
YAnchor(71,7)
YShift(71,9)
YShift(71,81)
YDist(71,82)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 417, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 90
SHP[1], 49
SRP0[], 49
MDRP[m&gt;RBl], 40
MDAP[R], 22
MDRP[m&gt;RBl], 28
SHP[1], 16
MDAP[R], 16
MDRP[m&gt;RBl], 63
SRP1[], 0
SRP2[], 22
IP[], 99
SRP0[], 99
MDRP[m&gt;RBl], 98
MIAP[R], 71, 7
SHP[1], 9
SHP[1], 81
MDRP[m&gt;RBl], 82
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="418">
      <instructions>
        <talk>/* VTTTalk glyph 418, char 0xffff */
/* GUI generated Fri Feb 21 22:10:29 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,42)
YAnchor(16,7)
YDist(16,26)
YShift(16,59)
YShift(16,60)
YIPAnchor(0,50,35,16)
YDist(50,67)
YShift(35,7)
YDist(35,34)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 418, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 42
MIAP[R], 16, 7
MDRP[m&gt;RBl], 26
SHP[1], 59
SHP[1], 60
SRP2[], 0
IP[], 50
IP[], 35
MDAP[R], 50
MDAP[R], 35
SRP0[], 50
MDRP[m&gt;RBl], 67
SRP1[], 35
SHP[1], 7
SRP0[], 35
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="419">
      <instructions>
        <talk>/* VTTTalk glyph 419, char 0xffff */
/* GUI generated Fri Feb 21 22:12:15 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,7)
YAnchor(53,7)
YLink(53,16,69)
YIPAnchor(0,38,53)
YInterpolate(38,49,53)
YDist(38,31)
YDist(49,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 419, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 7
MIAP[R], 53, 7
MIRP[m&gt;RBl], 16, 69
SRP2[], 0
IP[], 38
MDAP[R], 38
SRP2[], 53
IP[], 49
MDRP[m&gt;RBl], 31
SRP0[], 49
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="420">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 397, 0, 0
OVERLAP[]
OFFSET[R], 174, 561, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="421">
      <instructions>
        <talk>/* VTTTalk glyph 421, char 0xffff */
/* GUI generated Fri Feb 21 22:17:16 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YLink(0,13,69)
YShift(0,46)
YAnchor(46)
YDist(46,52)
YDist(46,58)
YAnchor(24,1)
YDist(24,30)
YLink(24,36,69)
YInterpolate(24,69,0)
YDist(69,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 421, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MIRP[m&gt;RBl], 13, 69
SHP[1], 46
MDAP[R], 46
MDRP[m&gt;RBl], 52
MDRP[m&gt;RBl], 58
MIAP[R], 24, 1
MDRP[m&gt;RBl], 30
MIRP[m&gt;RBl], 36, 69
SRP2[], 0
IP[], 69
SRP0[], 69
MDRP[m&gt;RBl], 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="422">
      <instructions>
        <talk>/* VTTTalk glyph 422, char 0xffff */
/* GUI generated Fri Feb 21 22:22:02 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YDist(0,13)
YAnchor(24,1)
YDist(24,31)
YLink(24,37,69)
YAnchor(46,11)
YLink(46,62,69)
YAnchor(54,7)
YLink(54,71,69)
YShift(54,82)
YAnchor(82)
YAnchor(84,89)
YShift(84,96)
YDist(84,90)
YShift(90,102)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 422, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MDRP[m&gt;RBl], 13
MIAP[R], 24, 1
MDRP[m&gt;RBl], 31
MIRP[m&gt;RBl], 37, 69
MIAP[R], 46, 11
MIRP[m&gt;RBl], 62, 69
MIAP[R], 54, 7
MIRP[m&gt;RBl], 71, 69
SHP[1], 82
MDAP[R], 82
MIAP[R], 84, 89
SHP[1], 96
MDRP[m&gt;RBl], 90
SHP[2], 102
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="423">
      <instructions>
        <talk>/* VTTTalk glyph 423, char 0xffff */
/* GUI generated Fri Feb 21 22:28:11 2020 */

/* Y direction */
YAnchor(6,11)
YLink(6,15,69)
YAnchor(30,7)
YDist(30,23)
YAnchor(63,1)
YShift(63,3)
YLink(63,72,69)
YAnchor(87,14)
YShift(87,0)
YLink(87,88,66)
YShift(87,39)
YDist(39,45)
YLink(39,52,69)
YIPAnchor(39,86,63)
YDist(86,85)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 423, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 6, 11
MIRP[m&gt;RBl], 15, 69
MIAP[R], 30, 7
MDRP[m&gt;RBl], 23
MIAP[R], 63, 1
SHP[1], 3
MIRP[m&gt;RBl], 72, 69
MIAP[R], 87, 14
SHP[1], 0
MIRP[m&gt;RBl], 88, 66
SHP[1], 39
SRP0[], 39
MDRP[m&lt;RGr], 45
MIRP[m&gt;RBl], 52, 69
SRP2[], 63
IP[], 86
MDAP[R], 86
MDRP[m&gt;RBl], 85
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="424">
      <instructions>
        <talk>/* VTTTalk glyph 424, char 0xffff */
/* GUI generated Fri Feb 21 23:24:43 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,28)
YShift(0,68)
YDist(68,82)
YAnchor(44,89)
YShift(44,56)
YDist(44,50)
YShift(50,62)
YAnchor(76,6)
YShift(76,35)
YShift(76,42)
YAnchor(42)
YShift(42,15)
YDist(42,43)
YShift(43,14)
YAnchor(90,14)
YDist(90,96)
YDist(90,103)
YAnchor(114,1)
YLink(114,127,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 424, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 28
SHP[1], 68
SRP0[], 68
MDRP[m&gt;RBl], 82
MIAP[R], 44, 89
SHP[1], 56
MDRP[m&gt;RBl], 50
SHP[2], 62
MIAP[R], 76, 6
SHP[1], 35
SHP[1], 42
MDAP[R], 42
SHP[1], 15
MDRP[m&gt;RBl], 43
SHP[2], 14
MIAP[R], 90, 14
MDRP[m&lt;RGr], 96
MDRP[m&gt;RBl], 103
MIAP[R], 114, 1
MIRP[m&gt;RBl], 127, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="425">
      <instructions>
        <talk>/* VTTTalk glyph 425, char 0xffff */
/* GUI generated Fri Feb 21 21:54:25 2020 */

/* Y direction */
YAnchor(44,89)
YDist(44,50)
YAnchor(56,11)
YLink(56,71,69)
YShift(56,0)
YAnchor(0)
YDist(0,33)
YAnchor(85,7)
YShift(85,38)
YLink(85,97,69)
YShift(85,21)
YLink(21,12,69)

/* X direction */

Smooth()
XDelta(34,-3/8@12..44)
XDelta(35,-3/8@12..44)
XDelta(36,-3/8@12..44)
XDelta(37,-3/8@12..44)
XDelta(38,-3/8@12..44)
XDelta(39,1/8@12..44)
XDelta(40,1/8@12..44)
XDelta(41,1/8@12..44)
XDelta(43,1/8@12..44)
</talk>
        <assembly>/* TT glyph 425, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 44, 89
MDRP[m&gt;RBl], 50
MIAP[R], 56, 11
MIRP[m&gt;RBl], 71, 69
SHP[1], 0
MDAP[R], 0
MDRP[m&gt;RBl], 33
MIAP[R], 85, 7
SHP[1], 38
MIRP[m&gt;RBl], 97, 69
SHP[1], 21
SRP0[], 21
MIRP[m&gt;RBl], 12, 69
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 34, -24, 12, 44, 72
CALL[], 35, -24, 12, 44, 72
CALL[], 36, -24, 12, 44, 72
CALL[], 37, -24, 12, 44, 72
CALL[], 38, -24, 12, 44, 72
CALL[], 39, 8, 12, 44, 72
CALL[], 40, 8, 12, 44, 72
CALL[], 41, 8, 12, 44, 72
CALL[], 43, 8, 12, 44, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="426">
      <instructions>
        <talk>/* VTTTalk glyph 426, char 0xffff */
/* GUI generated Fri Feb 21 23:28:48 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,33)
YAnchor(21,7)
YDist(21,12)
YIPAnchor(0,53,64,21)
YDist(53,76)
YDist(64,65)
YAnchor(41,89)
YDist(41,47)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 426, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 33
MIAP[R], 21, 7
MDRP[m&gt;RBl], 12
SRP2[], 0
IP[], 53
IP[], 64
MDAP[R], 53
MDAP[R], 64
SRP0[], 53
MDRP[m&gt;RBl], 76
SRP0[], 64
MDRP[m&gt;RBl], 65
MIAP[R], 41, 89
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="427">
      <instructions>
        <talk>/* VTTTalk glyph 427, char 0xffff */
/* GUI generated Fri Feb 21 23:30:21 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,25,69)
YIPAnchor(8,45,34,0)
YDist(45,46)
YDist(34,57)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 427, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 25, 69
SRP2[], 0
IP[], 45
IP[], 34
MDAP[R], 45
MDAP[R], 34
SRP0[], 45
MDRP[m&gt;RBl], 46
SRP0[], 34
MDRP[m&gt;RBl], 57
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="428">
      <instructions>
        <talk>/* VTTTalk glyph 428, char 0xffff */
/* GUI generated Fri Feb 21 23:31:25 2020 */

/* Y direction */
YAnchor(0,11)
YRound(0,38)
YLink(0,38)
YAnchor(57,7)
YDist(57,47)
YIPAnchor(57,23,0)
YDist(23,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 428, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 38
MIAP[R], 57, 7
MDRP[m&gt;RBl], 47
SRP2[], 0
IP[], 23
MDAP[R], 23
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="429">
      <instructions>
        <talk>/* VTTTalk glyph 429, char 0xffff */
/* GUI generated Fri Feb 21 23:33:39 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,24)
YAnchor(15,7)
YDist(15,33)

YAnchor(41,14)
YDist(41,47)
YShift(41,50)
YLink(41,54,69)
YAnchor(65,1)
YShift(65,9)
YLink(65,74,69)

/* X direction */

Smooth()
XDelta(12,-1/4@12..30)
XDelta(13,-1/4@12..30)
XDelta(14,-1/4@12..30)
</talk>
        <assembly>/* TT glyph 429, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 24
MIAP[R], 15, 7
MDRP[m&gt;RBl], 33
MIAP[R], 41, 14
MDRP[m&lt;RGr], 47
SHP[1], 50
MIRP[m&gt;RBl], 54, 69
MIAP[R], 65, 1
SHP[1], 9
MIRP[m&gt;RBl], 74, 69
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 12, -16, 12, 30, 72
CALL[], 13, -16, 12, 30, 72
CALL[], 14, -16, 12, 30, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="430">
      <instructions>
        <talk>/* VTTTalk glyph 430, char 0xffff */
/* GUI generated Fri Feb 21 23:42:43 2020 */

/* Y direction */
YAnchor(5,10)
YShift(5,6)
YDist(6,13)
YDist(6,19)
YAnchor(37,7)
YDist(37,28)
YAnchor(47,14)
YDist(47,53)
YShift(47,56)
YDist(47,60)
YAnchor(71,1)
YShift(71,3)
YLink(71,80,69)

/* X direction */

Smooth()
XDelta(33,-1/4@12..30)
XDelta(34,-1/4@12..30)
XDelta(35,-1/4@12..30)
XDelta(36,-1/4@12..30)</talk>
        <assembly>/* TT glyph 430, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 10
SHP[1], 6
SRP0[], 6
MDRP[m&gt;RBl], 13
MDRP[m&gt;RBl], 19
MIAP[R], 37, 7
MDRP[m&gt;RBl], 28
MIAP[R], 47, 14
MDRP[m&lt;RGr], 53
SHP[1], 56
MDRP[m&gt;RBl], 60
MIAP[R], 71, 1
SHP[1], 3
MIRP[m&gt;RBl], 80, 69
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 33, -16, 12, 30, 72
CALL[], 34, -16, 12, 30, 72
CALL[], 35, -16, 12, 30, 72
CALL[], 36, -16, 12, 30, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="431">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 249, 0, 0
OVERLAP[]
OFFSET[R], 197, 477, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="432">
      <instructions>
        <talk>/* VTTTalk glyph 432, char 0xffff */
/* GUI generated Fri Feb 21 23:47:34 2020 */

/* Y direction */
YAnchor(43,7)
YDist(43,33)
YAnchor(55,10)
YShift(55,0)
YAnchor(0)
YDist(0,16)
YInterpolate(55,7,43)
YShift(7,26)
YShift(7,39)
YAnchor(56,14)
YDist(56,62)
YShift(56,65)
YDist(56,69)
YAnchor(80,1)
YShift(80,53)
YLink(80,89,69)

/* X direction */

Smooth()
XDelta(39,-1/2@34..47)
XDelta(40,-1/2@34..47)
XDelta(41,-3/8@34..47)
XDelta(42,-1/4@34..47)

</talk>
        <assembly>/* TT glyph 432, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 43, 7
MDRP[m&gt;RBl], 33
MIAP[R], 55, 10
SHP[1], 0
MDAP[R], 0
MDRP[m&gt;RBl], 16
SRP1[], 55
SRP2[], 43
IP[], 7
SRP1[], 7
SHP[1], 26
SHP[1], 39
MIAP[R], 56, 14
MDRP[m&lt;RGr], 62
SHP[1], 65
MDRP[m&gt;RBl], 69
MIAP[R], 80, 1
SHP[1], 53
MIRP[m&gt;RBl], 89, 69
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 39, -32, 34, 47, 72
CALL[], 40, -32, 34, 47, 72
CALL[], 41, -24, 34, 47, 72
CALL[], 42, -16, 34, 47, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="433">
      <instructions>
        <talk>/* VTTTalk glyph 433, char 0xffff */
/* GUI generated Fri Feb 21 23:59:21 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,16)
YAnchor(24,14)
YDist(24,30)
YShift(24,33)
YDist(24,37)
YAnchor(48,1)
YShift(48,9)
YDist(48,57)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 433, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 16
MIAP[R], 24, 14
MDRP[m&lt;RGr], 30
SHP[1], 33
MDRP[m&gt;RBl], 37
MIAP[R], 48, 1
SHP[1], 9
MDRP[m&gt;RBl], 57
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="434">
      <instructions>
        <talk>/* VTTTalk glyph 434, char 0xffff */
/* GUI generated Sat Feb 22 00:01:22 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YLink(0,13,69)
YShift(0,42)
YAnchor(42)
YDist(42,49)
YAnchor(60,1)
YLink(60,72,69)
YShift(60,24)
YAnchor(24)
YLink(24,31,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 434, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MIRP[m&gt;RBl], 13, 69
SHP[1], 42
MDAP[R], 42
MDRP[m&gt;RBl], 49
MIAP[R], 60, 1
MIRP[m&gt;RBl], 72, 69
SHP[1], 24
MDAP[R], 24
MIRP[m&gt;RBl], 31, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="435">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 434, 0, 0
OVERLAP[]
OFFSET[R], 197, 925, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="436">
      <instructions>
        <talk>/* VTTTalk glyph 436, char 0xffff */
/* GUI generated Sat Feb 22 00:17:11 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YLink(0,13,69)
YShift(0,42)
YAnchor(42)
YLink(42,49,69)
YAnchor(60,1)
YLink(60,67,69)
YShift(60,88)
YShift(60,24)
YAnchor(24)
YLink(24,31,69)
YAnchor(78,11)
YDist(78,95)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 436, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MIRP[m&gt;RBl], 13, 69
SHP[1], 42
MDAP[R], 42
MIRP[m&gt;RBl], 49, 69
MIAP[R], 60, 1
MIRP[m&gt;RBl], 67, 69
SHP[1], 88
SHP[1], 24
MDAP[R], 24
MIRP[m&gt;RBl], 31, 69
MIAP[R], 78, 11
MDRP[m&gt;RBl], 95
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="437">
      <instructions>
        <talk>/* VTTTalk glyph 437, char 0xffff */
/* GUI generated Fri Feb 21 21:58:05 2020 */

/* Y direction */
YAnchor(53,6)
YShift(53,40)
YShift(53,21)
YAnchor(21)
YDist(21,13)
YShift(53,101)
YAnchor(101)
YShift(101,65)
YLink(101,113,69)
YAnchor(72,11)
YDist(72,87)
YShift(72,0)
YDist(0,33)
YShift(72,45)
YAnchor(45)
YDist(45,59)

/* X direction */

Smooth()
XDelta(60,-3/8@12..44)
XDelta(61,-3/8@12..44)
XDelta(62,-3/8@12..44)
XDelta(63,-3/8@12..44)
XDelta(64,-3/8@12..44)
XDelta(65,-3/8@12..44)
XDelta(66,1/8@12..44)
XDelta(67,1/8@12..44)
XDelta(68,1/8@12..44)
XDelta(69,1/8@12..44)
XDelta(70,1/8@12..44)
XDelta(71,1/8@12..44)
</talk>
        <assembly>/* TT glyph 437, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 53, 6
SHP[1], 40
SHP[1], 21
MDAP[R], 21
MDRP[m&gt;RBl], 13
SRP1[], 53
SHP[1], 101
MDAP[R], 101
SHP[1], 65
MIRP[m&gt;RBl], 113, 69
MIAP[R], 72, 11
MDRP[m&gt;RBl], 87
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 33
SRP1[], 72
SHP[1], 45
MDAP[R], 45
MDRP[m&gt;RBl], 59
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 60, -24, 12, 44, 72
CALL[], 61, -24, 12, 44, 72
CALL[], 62, -24, 12, 44, 72
CALL[], 63, -24, 12, 44, 72
CALL[], 64, -24, 12, 44, 72
CALL[], 65, -24, 12, 44, 72
CALL[], 66, 8, 12, 44, 72
CALL[], 67, 8, 12, 44, 72
CALL[], 68, 8, 12, 44, 72
CALL[], 69, 8, 12, 44, 72
CALL[], 70, 8, 12, 44, 72
CALL[], 71, 8, 12, 44, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="438">
      <instructions>
        <talk>/* VTTTalk glyph 438, char 0xffff */
/* GUI generated Sat Feb 22 00:19:57 2020 */

/* Y direction */
YAnchor(30,11)
YDist(30,64)
YShift(30,76)
YAnchor(76)
YDist(76,90)
YAnchor(84,6)
YShift(84,71)
YIPAnchor(84,11,0,30)
YDist(11,12)
YDist(0,23)
YShift(84,51)
YAnchor(51)
YDist(51,43)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 438, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 30, 11
MDRP[m&gt;RBl], 64
SHP[1], 76
MDAP[R], 76
MDRP[m&gt;RBl], 90
MIAP[R], 84, 6
SHP[1], 71
SRP2[], 30
IP[], 11
IP[], 0
MDAP[R], 11
MDAP[R], 0
SRP0[], 11
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 23
SRP1[], 84
SHP[1], 51
MDAP[R], 51
MDRP[m&gt;RBl], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="439">
      <instructions>
        <talk>/* VTTTalk glyph 439, char 0xffff */
/* GUI generated Sat Feb 22 00:23:36 2020 */

/* Y direction */
YAnchor(4,14)
YDist(4,10)
YShift(4,13)
YLink(4,17,69)
YShift(4,46)
YAnchor(46)
YLink(46,53,69)
YAnchor(64,1)
YLink(64,76,69)
YIPAnchor(64,1,4)
YDist(1,0)
YShift(64,28)
YAnchor(28)
YLink(28,35,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 439, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 14
MDRP[m&lt;RGr], 10
SHP[1], 13
MIRP[m&gt;RBl], 17, 69
SHP[1], 46
MDAP[R], 46
MIRP[m&gt;RBl], 53, 69
MIAP[R], 64, 1
MIRP[m&gt;RBl], 76, 69
SRP2[], 4
IP[], 1
MDAP[R], 1
MDRP[m&gt;RBl], 0
SRP1[], 64
SHP[1], 28
MDAP[R], 28
MIRP[m&gt;RBl], 35, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="440">
      <instructions>
        <talk>/* VTTTalk glyph 440, char 0xfb01 */
/* GUI generated Sat Feb 22 00:25:45 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YDist(0,13)
YAnchor(24,0)
YDist(24,30)
YLink(24,36,69)
YAnchor(46,11)
YDist(46,71)
YAnchor(58,6)
YDist(58,57)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 440, char 0xfb01 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MDRP[m&gt;RBl], 13
MIAP[R], 24, 0
MDRP[m&gt;RBl], 30
MIRP[m&gt;RBl], 36, 69
MIAP[R], 46, 11
MDRP[m&gt;RBl], 71
MIAP[R], 58, 6
MDRP[m&gt;RBl], 57
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="441">
      <instructions>
        <talk>/* VTTTalk glyph 441, char 0xfb02 */
/* GUI generated Sat Feb 22 00:27:22 2020 */

/* Y direction */
YAnchor(4,11)
YDist(4,20)
YAnchor(28,15)
YDist(28,34)
YShift(28,37)
YLink(28,41,69)
YAnchor(52,0)
YShift(52,13)
YLink(52,61,69)
YIPAnchor(52,1,28)
YDist(1,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 441, char 0xfb02 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 11
MDRP[m&gt;RBl], 20
MIAP[R], 28, 15
MDRP[m&lt;RGr], 34
SHP[1], 37
MIRP[m&gt;RBl], 41, 69
MIAP[R], 52, 0
SHP[1], 13
MIRP[m&gt;RBl], 61, 69
SRP2[], 28
IP[], 1
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="442">
      <instructions>
        <talk>/* VTTTalk glyph 442, char 0xfb03 */
/* GUI generated Sat Feb 22 00:30:11 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YLink(0,13,69)
YAnchor(43)
YShift(43,9)
YLink(43,50,69)
YAnchor(61,0)
YLink(61,73,69)
YShift(61,24)
YAnchor(24)
YLink(24,32,69)
YAnchor(83,11)
YDist(83,108)
YAnchor(95,6)
YDist(95,94)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 442, char 0xfb03 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
MIRP[m&gt;RBl], 13, 69
MDAP[R], 43
SHP[1], 9
MIRP[m&gt;RBl], 50, 69
MIAP[R], 61, 0
MIRP[m&gt;RBl], 73, 69
SHP[1], 24
MDAP[R], 24
MIRP[m&gt;RBl], 32, 69
MIAP[R], 83, 11
MDRP[m&gt;RBl], 108
MIAP[R], 95, 6
MDRP[m&gt;RBl], 94
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="443">
      <instructions>
        <talk>/* VTTTalk glyph 443, char 0xfb04 */
/* GUI generated Sat Feb 22 00:32:30 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YLink(0,13,69)
YShift(0,43)
YAnchor(43)
YLink(43,52,69)
YAnchor(64,0)
YLink(64,72,69)
YShift(64,93)
YShift(64,24)
YAnchor(24)
YLink(24,32,69)
YIPAnchor(64,109,0)
YDist(109,108)
YAnchor(83,11)
YDist(83,100)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 443, char 0xfb04 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
MIRP[m&gt;RBl], 13, 69
SHP[1], 43
MDAP[R], 43
MIRP[m&gt;RBl], 52, 69
MIAP[R], 64, 0
MIRP[m&gt;RBl], 72, 69
SHP[1], 93
SHP[1], 24
MDAP[R], 24
MIRP[m&gt;RBl], 32, 69
SRP1[], 64
SRP2[], 0
IP[], 109
MDAP[R], 109
MDRP[m&gt;RBl], 108
MIAP[R], 83, 11
MDRP[m&gt;RBl], 100
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="444">
      <instructions>
        <talk>/* VTTTalk glyph 444, char 0xffff */
/* GUI generated Sat Feb 22 00:35:21 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YShift(0,9)
YNoRound(13)
YLink(0,13,69)
YAnchor(24)
YLink(24,59,69)
YAnchor(45,11)
YDist(45,36)
YInterpolate(24,72,45)
YDist(72,71)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 444, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 6
SHP[1], 9
MIRP[m&lt;rBl], 13, 69
MDAP[R], 24
MIRP[m&gt;RBl], 59, 69
MIAP[R], 45, 11
MDRP[m&gt;RBl], 36
SRP2[], 24
IP[], 72
SRP0[], 72
MDRP[m&gt;RBl], 71
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="445">
      <instructions>
        <talk>/* VTTTalk glyph 445, char 0xfb06 */
/* GUI generated Sat Feb 22 06:08:26 2020 */

/* Y direction */
YAnchor(45)
YAnchor(70,11)
YDist(70,85)
YShift(70,0)
YDist(0,61)
YInterpolate(0,126,45)
YDist(126,125)
YAnchor(99,7)
YIPAnchor(99,35,45)
YDist(35,20)
YLink(99,111,69,&gt;=)
YInterpolate(111,27,99)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 445, char 0xfb06 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 45
MIAP[R], 70, 11
MDRP[m&gt;RBl], 85
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 61
SRP2[], 45
IP[], 126
SRP0[], 126
MDRP[m&gt;RBl], 125
MIAP[R], 99, 7
SRP2[], 45
IP[], 35
MDAP[R], 35
MDRP[m&gt;RBl], 20
SRP0[], 99
MIRP[m&gt;RGr], 111, 69
IP[], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="446">
      <instructions>
        <talk>/* VTTTalk glyph 446, char 0xffff */
/* GUI generated Sat Feb 22 06:10:46 2020 */

/* Y direction */
YAnchor(0)
YLink(0,23,69)
YAnchor(10,6)
YShift(10,36)
YLink(10,9,66)
YShift(9,37)
YIPAnchor(10,49,0)
YDist(49,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 446, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 23, 69
MIAP[R], 10, 6
SHP[1], 36
MIRP[m&gt;RBl], 9, 66
SHP[2], 37
SRP2[], 0
IP[], 49
MDAP[R], 49
MDRP[m&gt;RBl], 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="447">
      <instructions>
        <talk>/* VTTTalk glyph 447, char 0xffff */
/* GUI generated Sat Feb 22 06:14:00 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,35)
YShift(0,43)
YDist(43,84)
YAnchor(72,7)
YDist(72,56)
YIPAnchor(72,21,0)
YInterpolate(72,29,21)
YShift(29,6)
YDist(21,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 447, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 35
SHP[1], 43
SRP0[], 43
MDRP[m&gt;RBl], 84
MIAP[R], 72, 7
MDRP[m&gt;RBl], 56
SRP2[], 0
IP[], 21
MDAP[R], 21
SRP2[], 72
IP[], 29
SRP1[], 29
SHP[1], 6
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="448">
      <instructions>
        <talk>/* VTTTalk glyph 448, char 0xffff */
/* GUI generated Sat Feb 22 06:18:23 2020 */

/* Y direction */
YAnchor(0,69)
YDist(0,6)
YShift(0,9)
YDist(0,13)
YAnchor(24)
YLink(24,36,69)
YShift(24,96)
YInterpolate(0,101,24)
YDist(101,102)
YAnchor(45,11)
YLink(45,70,69)
YAnchor(54,7)
YLink(54,61,69)
YShift(54,91)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 448, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 69
MDRP[m&lt;RGr], 6
SHP[1], 9
MDRP[m&gt;RBl], 13
MDAP[R], 24
MIRP[m&gt;RBl], 36, 69
SHP[1], 96
SRP2[], 0
IP[], 101
SRP0[], 101
MDRP[m&gt;RBl], 102
MIAP[R], 45, 11
MIRP[m&gt;RBl], 70, 69
MIAP[R], 54, 7
MIRP[m&gt;RBl], 61, 69
SHP[1], 91
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="449">
      <instructions>
        <talk>/* VTTTalk glyph 449, char 0xffff */
/* GUI generated Sat Feb 22 06:20:28 2020 */

/* Y direction */
YAnchor(13,11)
YDist(13,14)
YAnchor(32)
YDist(32,23)
YAnchor(43)
YShift(43,4)
YDist(43,49)
YShift(43,52)
YLink(43,56,69)
YAnchor(67)
YShift(67,9)
YLink(67,76,69)
YIPAnchor(67,1,43)
YDist(1,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 449, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 11
MDRP[m&gt;RBl], 14
MDAP[R], 32
MDRP[m&gt;RBl], 23
MDAP[R], 43
SHP[1], 4
MDRP[m&lt;RGr], 49
SHP[1], 52
MIRP[m&gt;RBl], 56, 69
MDAP[R], 67
SHP[1], 9
MIRP[m&gt;RBl], 76, 69
SRP2[], 43
IP[], 1
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="450">
      <instructions>
        <talk>/* VTTTalk glyph 450, char 0xffff */
/* GUI generated Sat Feb 22 06:25:23 2020 */

/* Y direction */
YAnchor(25,75)
YShift(25,10)
YShift(25,17)
YShift(25,21)
YLink(25,24,81)
YAnchor(28)
YShift(28,4)
YAnchor(4)
YShift(28,16)
YLink(28,29,81)
YIPAnchor(25,0,28)
YLink(0,1,79)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 450, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 25, 75
SHP[1], 10
SHP[1], 17
SHP[1], 21
MIRP[m&gt;RBl], 24, 81
MDAP[R], 28
SHP[1], 4
MDAP[R], 4
SRP1[], 28
SHP[1], 16
SRP0[], 28
MIRP[m&gt;RBl], 29, 81
SRP2[], 25
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 79
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="451">
      <instructions>
        <talk>/* VTTTalk glyph 451, char 0xffff */
/* GUI generated Sat Feb 22 06:29:13 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,13)
YAnchor(36,76)
YDist(36,24)
YInterpolate(0,20,41,36)
YAnchor(48,77)
YShift(48,30)
YLink(48,49,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 451, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 13
MIAP[R], 36, 76
MDRP[m&gt;RBl], 24
SRP2[], 0
IP[], 20
IP[], 41
MIAP[R], 48, 77
SHP[1], 30
MIRP[m&gt;RBl], 49, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="452">
      <instructions>
        <talk>/* VTTTalk glyph 452, char 0xffff */
/* GUI generated Sat Feb 22 06:31:54 2020 */

/* Y direction */
YAnchor(10,75)
YShift(10,1)
YAnchor(19,77)
YShift(19,3)
YShift(19,4)
YShift(19,20)
YLink(19,18,81)
YShift(18,21)
YInterpolate(19,24,10)
YShift(24,27)
YDist(24,25)
YShift(25,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 452, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 10, 75
SHP[1], 1
MIAP[R], 19, 77
SHP[1], 3
SHP[1], 4
SHP[1], 20
MIRP[m&gt;RBl], 18, 81
SHP[2], 21
SRP2[], 10
IP[], 24
SRP1[], 24
SHP[1], 27
SRP0[], 24
MDRP[m&gt;RBl], 25
SHP[2], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="453">
      <instructions>
        <talk>/* VTTTalk glyph 453, char 0xffff */
/* GUI generated Sat Feb 22 06:35:28 2020 */

/* Y direction */
YAnchor(11,77)
YShift(11,3)
YShift(11,7)
YShift(11,16)
YShift(11,31)
YShift(11,32)
YShift(11,40)
YLink(11,10,81)
YShift(10,6)
YShift(10,17)
YAnchor(26,75)
YShift(26,1)
YShift(26,34)
YShift(26,46)
YInterpolate(11,13,26)
YShift(13,12)
YShift(13,36)
YShift(13,37)
YDist(13,14)
YShift(14,15)
YShift(14,38)
YShift(14,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 453, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 11, 77
SHP[1], 3
SHP[1], 7
SHP[1], 16
SHP[1], 31
SHP[1], 32
SHP[1], 40
MIRP[m&gt;RBl], 10, 81
SHP[2], 6
SHP[2], 17
MIAP[R], 26, 75
SHP[1], 1
SHP[1], 34
SHP[1], 46
SRP2[], 11
IP[], 13
SRP1[], 13
SHP[1], 12
SHP[1], 36
SHP[1], 37
SRP0[], 13
MDRP[m&gt;RBl], 14
SHP[2], 15
SHP[2], 38
SHP[2], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="454">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 793, 1243, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="455">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 798, 1406, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="456">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 796, 1430, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="457">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 790, 1321, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="458">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 792, 1217, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="459">
      <instructions>
        <talk>/* VTTTalk glyph 459, char 0xffff */
/* GUI generated Sat Feb 22 06:39:24 2020 */

/* Y direction */
YAnchor(12,76)
YLink(12,47,80)
YAnchor(21,78)
YLink(21,37,80)
YShift(21,0)
YAnchor(0)
YDist(0,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 459, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 12, 76
MIRP[m&gt;RBl], 47, 80
MIAP[R], 21, 78
MIRP[m&gt;RBl], 37, 80
SHP[1], 0
MDAP[R], 0
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="460">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 801, 1371, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="461">
      <instructions>
        <talk>/* VTTTalk glyph 461, char 0xffff */
/* GUI generated Sat Feb 22 06:43:39 2020 */

/* Y direction */
YAnchor(8,77)
YShift(8,3)
YShift(8,7)
YShift(8,21)
YLink(8,9,81)
YShift(9,6)
YAnchor(16,77)
YLink(16,48,80)
YAnchor(38,75)
YShift(38,1)
YShift(38,31)
YLink(38,59,80)
YInterpolate(8,12,38)
YShift(12,15)
YDist(12,13)
YShift(13,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 461, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 77
SHP[1], 3
SHP[1], 7
SHP[1], 21
MIRP[m&gt;RBl], 9, 81
SHP[2], 6
MIAP[R], 16, 77
MIRP[m&gt;RBl], 48, 80
MIAP[R], 38, 75
SHP[1], 1
SHP[1], 31
MIRP[m&gt;RBl], 59, 80
SRP2[], 8
IP[], 12
SRP1[], 12
SHP[1], 15
SRP0[], 12
MDRP[m&gt;RBl], 13
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="462">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 818, 1013, -6

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="463">
      <instructions>
        <talk>/* VTTTalk glyph 463, char 0xffff */
/* GUI generated Sat Feb 22 06:47:10 2020 */

/* Y direction */
YAnchor(6,75)
YDist(6,20)
YDist(20,14)
YDist(14,0)
YInterpolate(0,27,14)
YShift(27,31)
YAnchor(37,77)
YShift(37,29)
YShift(37,30)
YShift(37,38)
YLink(37,36,81)
YShift(36,39)
YInterpolate(37,42,6)
YShift(42,45)
YDist(42,43)
YShift(43,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 463, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 6, 75
MDRP[M&gt;RBl], 20
MDRP[M&lt;RWh], 14
MDRP[m&lt;RGr], 0
IP[], 27
SRP1[], 27
SHP[1], 31
MIAP[R], 37, 77
SHP[1], 29
SHP[1], 30
SHP[1], 38
MIRP[m&gt;RBl], 36, 81
SHP[2], 39
SRP2[], 6
IP[], 42
SRP1[], 42
SHP[1], 45
SRP0[], 42
MDRP[m&gt;RBl], 43
SHP[2], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="464">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 793, 1563, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="465">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 452, 0, 0
OVERLAP[]
OFFSET[R], 800, 1453, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="466">
      <instructions>
        <talk>/* VTTTalk glyph 466, char 0xffff */
/* GUI generated Sat Feb 22 06:50:31 2020 */

/* Y direction */
YAnchor(4,77)
YLink(4,22,80)
YAnchor(39,77)
YShift(39,3)
YLink(39,38,81)
YAnchor(46,75)
YShift(46,2)
YShift(46,15)
YShift(46,27)
YShift(46,49)
YInterpolate(46,40,39)
YShift(40,43)
YDist(40,41)
YShift(41,42)
YLink(46,47,81)
YShift(47,48)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 466, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 77
MIRP[m&gt;RBl], 22, 80
MIAP[R], 39, 77
SHP[1], 3
MIRP[m&gt;RBl], 38, 81
MIAP[R], 46, 75
SHP[1], 2
SHP[1], 15
SHP[1], 27
SHP[1], 49
SRP2[], 39
IP[], 40
SRP1[], 40
SHP[1], 43
SRP0[], 40
MDRP[m&gt;RBl], 41
SHP[2], 42
SRP0[], 46
MIRP[m&gt;RBl], 47, 81
SHP[2], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="467">
      <instructions>
        <talk>/* VTTTalk glyph 467, char 0xffff */
/* GUI generated Sat Feb 22 06:52:59 2020 */

/* Y direction */
YAnchor(25,75)
YShift(25,6)
YShift(25,13)
YShift(25,21)
YLink(25,24,81)
YAnchor(31,77)
YShift(31,0)
YShift(31,12)
YShift(31,23)
YLink(31,30,81)
YInterpolate(25,17,31)
YShift(17,16)
YDist(17,18)
YShift(18,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 467, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 25, 75
SHP[1], 6
SHP[1], 13
SHP[1], 21
MIRP[m&gt;RBl], 24, 81
MIAP[R], 31, 77
SHP[1], 0
SHP[1], 12
SHP[1], 23
MIRP[m&gt;RBl], 30, 81
SRP2[], 25
IP[], 17
SRP1[], 17
SHP[1], 16
SRP0[], 17
MDRP[m&gt;RBl], 18
SHP[2], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="468">
      <instructions>
        <talk>/* VTTTalk glyph 468, char 0xffff */
/* GUI generated Sat Feb 22 06:56:42 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,9)
YDist(0,10)
YAnchor(25,77)
YLink(25,24,81)
YShift(25,26)
YShift(25,46)
YAnchor(40,75)
YShift(40,14)
YShift(40,33)
YLink(40,39,81)
YShift(40,44)
YInterpolate(25,47,40)
YShift(47,50)
YDist(47,48)
YShift(48,49)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 468, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 9
MDRP[m&gt;RBl], 10
MIAP[R], 25, 77
MIRP[m&gt;RBl], 24, 81
SHP[1], 26
SHP[1], 46
MIAP[R], 40, 75
SHP[1], 14
SHP[1], 33
MIRP[m&gt;RBl], 39, 81
SHP[1], 44
SRP2[], 25
IP[], 47
SRP1[], 47
SHP[1], 50
SRP0[], 47
MDRP[m&gt;RBl], 48
SHP[2], 49
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="469">
      <instructions>
        <talk>/* VTTTalk glyph 469, char 0xffff */
/* GUI generated Sat Feb 22 06:59:07 2020 */

/* Y direction */
YAnchor(5,75)
YShift(5,21)
YLink(5,4,81)
YShift(4,13)
YAnchor(24,77)
YShift(24,0)
YShift(24,19)
YShift(24,23)
YLink(24,25,81)
YShift(25,18)
YIPAnchor(5,33,24)
YShift(33,37)
YLink(33,34,79)
YShift(34,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 469, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 75
SHP[1], 21
MIRP[m&gt;RBl], 4, 81
SHP[2], 13
MIAP[R], 24, 77
SHP[1], 0
SHP[1], 19
SHP[1], 23
MIRP[m&gt;RBl], 25, 81
SHP[2], 18
SRP2[], 5
IP[], 33
MDAP[R], 33
SHP[1], 37
MIRP[m&gt;RBl], 34, 79
SHP[2], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="470">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 469, 0, 0
OVERLAP[]
OFFSET[R], 793, 1451, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="471">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 469, 0, 0
OVERLAP[]
OFFSET[R], 801, 1579, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="472">
      <instructions>
        <talk>/* VTTTalk glyph 472, char 0xffff */
/* GUI generated Sat Feb 22 07:02:11 2020 */

/* Y direction */
YAnchor(0,77)
YLink(0,1,81)
YShift(0,41)
YAnchor(23,75)
YLink(23,22,81)
YShift(23,42)
YInterpolate(0,12,23)
YLink(12,13,79)
YShift(12,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 472, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIRP[m&gt;RBl], 1, 81
SHP[1], 41
MIAP[R], 23, 75
MIRP[m&gt;RBl], 22, 81
SHP[1], 42
SRP2[], 0
IP[], 12
SRP0[], 12
MIRP[m&gt;RBl], 13, 79
SHP[1], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="473">
      <instructions>
        <talk>/* VTTTalk glyph 473, char 0xffff */
/* GUI generated Sat Feb 22 07:03:35 2020 */

/* Y direction */
YAnchor(0,77)
YLink(0,33,80)
YShift(0,39)
YAnchor(10,75)
YShift(10,16)
YLink(10,24,80)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 473, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIRP[m&gt;RBl], 33, 80
SHP[1], 39
MIAP[R], 10, 75
SHP[1], 16
MIRP[m&gt;RBl], 24, 80
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="474">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 473, 0, 0
OVERLAP[]
OFFSET[R], 793, 918, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="475">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 473, 0, 0
OVERLAP[]
OFFSET[R], 797, 993, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="476">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 473, 0, 0
OVERLAP[]
OFFSET[R], 817, 1043, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="477">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 473, 0, 0
OVERLAP[]
OFFSET[R], 791, 1025, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="478">
      <instructions>
        <talk>/* VTTTalk glyph 478, char 0xffff */
/* GUI generated Sat Feb 22 07:06:04 2020 */

/* Y direction */
YAnchor(0,77)
YLink(0,1,81)
YShift(0,38)
YAnchor(24,75)
YDist(24,17,&gt;=)
YShift(24,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 478, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIRP[m&gt;RBl], 1, 81
SHP[1], 38
MIAP[R], 24, 75
MDRP[m&gt;RGr], 17
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="479">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 478, 0, 0
OVERLAP[]
OFFSET[R], 883, 844, 120

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="480">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 478, 0, 0
OVERLAP[]
OFFSET[R], 797, 1068, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="481">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 479, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="482">
      <instructions>
        <talk>/* VTTTalk glyph 482, char 0xffff */
/* GUI generated Sat Feb 22 07:09:17 2020 */

/* Y direction */
YAnchor(4,77)
YShift(4,0)
YLink(4,5,81)
YAnchor(27,75)
YShift(27,1)
YLink(27,26,81)
YIPAnchor(4,13,27)
YShift(13,17)
YLink(13,14,79)
YShift(14,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 482, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 77
SHP[1], 0
MIRP[m&gt;RBl], 5, 81
MIAP[R], 27, 75
SHP[1], 1
MIRP[m&gt;RBl], 26, 81
SRP2[], 4
IP[], 13
MDAP[R], 13
SHP[1], 17
MIRP[m&gt;RBl], 14, 79
SHP[2], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="483">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 793, 921, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="484">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 798, 1084, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="485">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 797, 996, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="486">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 796, 1108, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="487">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 790, 999, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="488">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 791, 1028, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="489">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 792, 895, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="490">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OVERLAP[]
OFFSET[R], 801, 1049, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="491">
      <instructions>
        <talk>/* VTTTalk glyph 491, char 0xffff */
/* GUI generated Sat Feb 22 07:11:45 2020 */

/* Y direction */
YAnchor(10,75)
YShift(10,1)
YLink(10,9,81)
YAnchor(13,77)
YShift(13,0)
YLink(13,14,81)
YIPAnchor(13,17,10)
YShift(17,21)
YLink(17,18,79)
YShift(18,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 491, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 10, 75
SHP[1], 1
MIRP[m&gt;RBl], 9, 81
MIAP[R], 13, 77
SHP[1], 0
MIRP[m&gt;RBl], 14, 81
SRP2[], 10
IP[], 17
MDAP[R], 17
SHP[1], 21
MIRP[m&gt;RBl], 18, 79
SHP[2], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="492">
      <instructions>
        <talk>/* VTTTalk glyph 492, char 0xffff */
/* GUI generated Sat Feb 22 07:14:45 2020 */

/* Y direction */
YAnchor(0,77)
YLink(0,27,80)
YShift(0,37)
YDist(37,36)
YAnchor(9,75)
YShift(9,14)
YLink(9,20,80)
YIPAnchor(9,41,0)
YShift(41,31)
YLink(41,40,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 492, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIRP[m&gt;RBl], 27, 80
SHP[1], 37
SRP0[], 37
MDRP[m&gt;RBl], 36
MIAP[R], 9, 75
SHP[1], 14
MIRP[m&gt;RBl], 20, 80
SRP2[], 0
IP[], 41
MDAP[R], 41
SHP[1], 31
MIRP[m&gt;RBl], 40, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="493">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 492, 0, 0
OVERLAP[]
OFFSET[R], 816, 1124, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="494">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 492, 0, 0
OVERLAP[]
OFFSET[R], 791, 1023, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="495">
      <instructions>
        <talk>/* VTTTalk glyph 495, char 0xffff */
/* GUI generated Sat Feb 22 07:17:47 2020 */

/* Y direction */
YAnchor(0,77)
YDist(0,1)
YAnchor(27,75)
YInterpolate(0,8,27)
YShift(8,35)
YDist(27,20)
YShift(20,23)
YShift(20,49)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 495, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MDRP[m&gt;RBl], 1
MIAP[R], 27, 75
SRP2[], 0
IP[], 8
SRP1[], 8
SHP[1], 35
MDRP[m&gt;RBl], 20
SHP[2], 23
SHP[2], 49
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="496">
      <instructions>
        <talk>/* VTTTalk glyph 496, char 0xffff */
/* GUI generated Sat Feb 22 07:20:02 2020 */

/* Y direction */
YAnchor(14,75)
YShift(14,6)
YShift(14,9)
YShift(14,17)
YLink(14,15,81)
YShift(15,16)
YAnchor(23,77)
YShift(23,7)
YShift(23,8)
YShift(23,24)
YIPAnchor(23,0,14)
YLink(0,1,79)
YLink(23,22,81)
YShift(22,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 496, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 75
SHP[1], 6
SHP[1], 9
SHP[1], 17
MIRP[m&gt;RBl], 15, 81
SHP[2], 16
MIAP[R], 23, 77
SHP[1], 7
SHP[1], 8
SHP[1], 24
SRP2[], 14
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 79
SRP0[], 23
MIRP[m&gt;RBl], 22, 81
SHP[2], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="497">
      <instructions>
        <talk>/* VTTTalk glyph 497, char 0xffff */
/* GUI generated Sat Feb 22 07:22:23 2020 */

/* Y direction */
YAnchor(18,75)
YShift(18,10)
YShift(18,13)
YShift(18,21)
YLink(18,19,81)
YShift(19,20)
YAnchor(27,77)
YShift(27,11)
YShift(27,12)
YShift(27,28)
YIPAnchor(27,4,0,18)
YLink(4,5,79)
YLink(0,1,79)
YLink(27,26,81)
YShift(26,29)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 497, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 75
SHP[1], 10
SHP[1], 13
SHP[1], 21
MIRP[m&gt;RBl], 19, 81
SHP[2], 20
MIAP[R], 27, 77
SHP[1], 11
SHP[1], 12
SHP[1], 28
SRP2[], 18
IP[], 4
IP[], 0
MDAP[R], 4
MDAP[R], 0
SRP0[], 4
MIRP[m&gt;RBl], 5, 79
SRP0[], 0
MIRP[m&gt;RBl], 1, 79
SRP0[], 27
MIRP[m&gt;RBl], 26, 81
SHP[2], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="498">
      <instructions>
        <talk>/* VTTTalk glyph 498, char 0xffff */
/* GUI generated Sat Feb 22 07:25:24 2020 */

/* Y direction */
YAnchor(0,77)
YLink(0,15,80)
YAnchor(38,77)
YLink(38,37,81)
YShift(38,54)
YAnchor(45,75)
YShift(45,7)
YShift(45,48)
YShift(45,53)
YIPAnchor(38,39,26,45)
YLink(39,40,79)
YLink(45,46,81)
YShift(46,47)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 498, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIRP[m&gt;RBl], 15, 80
MIAP[R], 38, 77
MIRP[m&gt;RBl], 37, 81
SHP[1], 54
MIAP[R], 45, 75
SHP[1], 7
SHP[1], 48
SHP[1], 53
SRP2[], 38
IP[], 39
IP[], 26
MDAP[R], 39
MDAP[R], 26
SRP0[], 39
MIRP[m&gt;RBl], 40, 79
SRP0[], 45
MIRP[m&gt;RBl], 46, 81
SHP[2], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="499">
      <instructions>
        <talk>/* VTTTalk glyph 499, char 0xffff */
/* GUI generated Sat Feb 22 07:27:27 2020 */

/* Y direction */
YAnchor(5,75)
YShift(5,1)
YLink(5,4,81)
YAnchor(8,77)
YShift(8,0)
YLink(8,9,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 499, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 75
SHP[1], 1
MIRP[m&gt;RBl], 4, 81
MIAP[R], 8, 77
SHP[1], 0
MIRP[m&gt;RBl], 9, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="500">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 793, 753, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="501">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 798, 916, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="502">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 796, 940, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="503">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 790, 831, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="504">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 792, 727, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="505">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 508, 654, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="506">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 801, 881, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="507">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 499, 0, 0
OVERLAP[]
OFFSET[R], 818, 604, -6
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="508">
      <instructions>
        <talk>/* VTTTalk glyph 508, char 0xffff */
/* GUI generated Sat Feb 22 07:29:22 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,9)
YDist(0,10)
YAnchor(28,75)
YShift(28,18)
YLink(28,27,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 508, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 9
MDRP[m&gt;RBl], 10
MIAP[R], 28, 75
SHP[1], 18
MIRP[m&gt;RBl], 27, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="509">
      <instructions>
        <talk>/* VTTTalk glyph 509, char 0xffff */
/* GUI generated Sat Feb 22 07:32:03 2020 */

/* Y direction */
YAnchor(19,77)
YShift(19,0)
YShift(19,4)
YShift(19,23)
YLink(19,20,81)
YShift(20,24)
YAnchor(28,75)
YShift(28,1)
YShift(28,14)
YShift(28,32)
YIPAnchor(28,8,19)
YDist(8,9)
YLink(28,27,81)
YShift(27,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 509, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 19, 77
SHP[1], 0
SHP[1], 4
SHP[1], 23
MIRP[m&gt;RBl], 20, 81
SHP[2], 24
MIAP[R], 28, 75
SHP[1], 1
SHP[1], 14
SHP[1], 32
SRP2[], 19
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
SRP0[], 28
MIRP[m&gt;RBl], 27, 81
SHP[2], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="510">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 816, 995, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="511">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 883, 893, 417

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="512">
      <instructions>
        <talk>/* VTTTalk glyph 512, char 0xffff */
/* GUI generated Sat Feb 22 07:33:44 2020 */

/* Y direction */
YAnchor(4,77)
YShift(4,0)
YLink(4,5,81)
YAnchor(14,75)
YShift(14,1)
YLink(14,13,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 512, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 77
SHP[1], 0
MIRP[m&gt;RBl], 5, 81
MIAP[R], 14, 75
SHP[1], 1
MIRP[m&gt;RBl], 13, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="513">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 512, 0, 0
OVERLAP[]
OFFSET[R], 793, 744, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="514">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 512, 0, 0
OVERLAP[]
OFFSET[R], 883, 758, 113

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="515">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 512, 0, 0
OVERLAP[]
OFFSET[R], 795, 1038, -238

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="516">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 512, 0, 0
OVERLAP[]
OFFSET[R], 816, 889, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="517">
      <instructions>
        <talk>/* VTTTalk glyph 517, char 0xffff */
/* GUI generated Sat Feb 22 07:35:33 2020 */

/* Y direction */
YAnchor(26,77)
YShift(26,22)
YLink(26,27,81)
YAnchor(36,75)
YShift(36,23)
YLink(36,35,81)
YIPAnchor(36,0,26)
YShift(0,4)
YDist(0,15)
YShift(15,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 517, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 26, 77
SHP[1], 22
MIRP[m&gt;RBl], 27, 81
MIAP[R], 36, 75
SHP[1], 23
MIRP[m&gt;RBl], 35, 81
SRP2[], 26
IP[], 0
MDAP[R], 0
SHP[1], 4
MDRP[m&gt;RBl], 15
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="518">
      <instructions>
        <talk>/* VTTTalk glyph 518, char 0xffff */
/* GUI generated Sat Feb 22 07:38:25 2020 */

/* Y direction */
YAnchor(0,77)
YAnchor(8,75)
YShift(8,36)
YAnchor(36)
YDist(36,27)
YAnchor(15,77)
YDist(15,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 518, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIAP[R], 8, 75
SHP[1], 36
MDAP[R], 36
MDRP[m&gt;RBl], 27
MIAP[R], 15, 77
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="519">
      <instructions>
        <talk>/* VTTTalk glyph 519, char 0xffff */
/* GUI generated Sat Feb 22 07:40:51 2020 */

/* Y direction */
YAnchor(8,77)
YShift(8,0)
YShift(8,4)
YLink(8,9,81)
YAnchor(18,75)
YShift(18,2)
YShift(18,5)
YLink(18,17,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 519, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 77
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 9, 81
MIAP[R], 18, 75
SHP[1], 2
SHP[1], 5
MIRP[m&gt;RBl], 17, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="520">
      <instructions>
        <talk>/* VTTTalk glyph 520, char 0xffff */
/* GUI generated Sat Feb 22 07:43:32 2020 */

/* Y direction */
YAnchor(4,75)
YShift(4,1)
YShift(4,15)
YShift(4,18)
YShift(4,21)
YShift(4,26)
YLink(4,3,81)
YShift(3,16)
YAnchor(31,77)
YShift(31,23)
YShift(31,24)
YShift(31,32)
YShift(31,0)
YShift(0,10)
YLink(31,30,81)
YShift(30,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 520, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 75
SHP[1], 1
SHP[1], 15
SHP[1], 18
SHP[1], 21
SHP[1], 26
MIRP[m&gt;RBl], 3, 81
SHP[2], 16
MIAP[R], 31, 77
SHP[1], 23
SHP[1], 24
SHP[1], 32
SHP[1], 0
SRP1[], 0
SHP[1], 10
MIRP[m&gt;RBl], 30, 81
SHP[2], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="521">
      <instructions>
        <talk>/* VTTTalk glyph 521, char 0xffff */
/* GUI generated Sat Feb 22 07:45:45 2020 */

/* Y direction */
YAnchor(9,75)
YShift(9,25)
YShift(9,29)
YShift(9,33)
YLink(9,8,81)
YShift(8,32)
YAnchor(23,77)
YShift(23,19)
YShift(23,27)
YShift(23,31)
YLink(23,22,81)
YShift(22,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 521, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 9, 75
SHP[1], 25
SHP[1], 29
SHP[1], 33
MIRP[m&gt;RBl], 8, 81
SHP[2], 32
MIAP[R], 23, 77
SHP[1], 19
SHP[1], 27
SHP[1], 31
MIRP[m&gt;RBl], 22, 81
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="522">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 521, 0, 0
OVERLAP[]
OFFSET[R], 793, 1060, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="523">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 521, 0, 0
OVERLAP[]
OFFSET[R], 797, 1135, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="524">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 521, 0, 0
OVERLAP[]
OFFSET[R], 816, 1113, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="525">
      <instructions>
        <talk>/* VTTTalk glyph 525, char 0xffff */
/* GUI generated Sat Feb 22 07:48:17 2020 */

/* Y direction */
YAnchor(0,77)
YDist(0,6)
YDist(0,10)
YAnchor(27,75)
YShift(27,16)
YShift(27,36)
YShift(27,47)
YLink(27,26,81)
YShift(26,35)
YAnchor(45,77)
YShift(45,30)
YLink(45,44,81)
YShift(45,49)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 525, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 10
MIAP[R], 27, 75
SHP[1], 16
SHP[1], 36
SHP[1], 47
MIRP[m&gt;RBl], 26, 81
SHP[2], 35
MIAP[R], 45, 77
SHP[1], 30
MIRP[m&gt;RBl], 44, 81
SHP[1], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="526">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 521, 0, 0
OVERLAP[]
OFFSET[R], 800, 1270, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="527">
      <instructions>
        <talk>/* VTTTalk glyph 527, char 0xffff */
/* GUI generated Sat Feb 22 07:49:54 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YAnchor(9,76)
YLink(9,28,80)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 527, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
MIAP[R], 9, 76
MIRP[m&gt;RBl], 28, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="528">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 793, 803, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="529">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 798, 966, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="530">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 796, 990, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="531">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 790, 881, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="532">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 792, 777, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="533">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 794, 1081, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="534">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 801, 931, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="535">
      <instructions>
        <talk>/* VTTTalk glyph 535, char 0xffff */
/* GUI generated Sat Feb 22 07:51:36 2020 */

/* Y direction */
YAnchor(0,78)
YShift(0,24)
YLink(0,30,80)
YShift(30,53)
YAnchor(9,76)
YShift(9,15)
YLink(9,43,80)
YShift(43,63)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 535, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 78
SHP[2], 24
MIRP[m&gt;RBl], 30, 80
SHP[2], 53
MIAP[R], 9, 76
SHP[1], 15
MIRP[m&gt;RBl], 43, 80
SHP[2], 63
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="536">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 818, 813, -13

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="537">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 884, 949, 101

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="538">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 537, 0, 0
OVERLAP[]
OFFSET[R], 793, 803, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="539">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OVERLAP[]
OFFSET[R], 800, 1013, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="540">
      <instructions>
        <talk>/* VTTTalk glyph 540, char 0xffff */
/* GUI generated Sat Feb 22 07:56:47 2020 */

/* Y direction */
YAnchor(24,77)
YShift(24,15)
YLink(24,16,81)
YShift(24,0)
YAnchor(0)
YLink(0,27,80)
YAnchor(60,75)
YShift(60,13)
YLink(60,59,81)
YShift(60,9)
YAnchor(9)
YLink(9,36,80)
YIPAnchor(24,46,60)
YShift(46,50)
YLink(46,47,79)
YShift(47,51)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 540, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 24, 77
SHP[1], 15
MIRP[m&gt;RBl], 16, 81
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 27, 80
MIAP[R], 60, 75
SHP[1], 13
MIRP[m&gt;RBl], 59, 81
SHP[1], 9
MDAP[R], 9
MIRP[m&gt;RBl], 36, 80
SRP1[], 24
SRP2[], 60
IP[], 46
MDAP[R], 46
SHP[1], 50
MIRP[m&gt;RBl], 47, 79
SHP[2], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="541">
      <instructions>
        <talk>/* VTTTalk glyph 541, char 0xffff */
/* GUI generated Sat Feb 22 08:00:14 2020 */

/* Y direction */
YAnchor(21,75)
YShift(21,1)
YLink(21,20,81)
YAnchor(30,77)
YShift(30,0)
YLink(30,31,81)
YIPAnchor(30,4,21)
YDist(4,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 541, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 75
SHP[1], 1
MIRP[m&gt;RBl], 20, 81
MIAP[R], 30, 77
SHP[1], 0
MIRP[m&gt;RBl], 31, 81
SRP2[], 21
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="542">
      <instructions>
        <talk>/* VTTTalk glyph 542, char 0xffff */
/* GUI generated Sat Feb 22 08:01:44 2020 */

/* Y direction */
YAnchor(25,75)
YLink(25,24,81)
YShift(25,33)
YAnchor(28,77)
YLink(28,29,81)
YShift(28,32)
YIPAnchor(25,17,0,28)
YLink(17,16,79)
YDist(0,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 542, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 25, 75
MIRP[m&gt;RBl], 24, 81
SHP[1], 33
MIAP[R], 28, 77
MIRP[m&gt;RBl], 29, 81
SHP[1], 32
SRP2[], 25
IP[], 17
IP[], 0
MDAP[R], 17
MDAP[R], 0
SRP0[], 17
MIRP[m&gt;RBl], 16, 79
SRP0[], 0
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="543">
      <instructions>
        <talk>/* VTTTalk glyph 543, char 0xffff */
/* GUI generated Sat Feb 22 08:03:13 2020 */

/* Y direction */
YAnchor(0)
YDist(0,22)
YDist(0,29)
YShift(29,18)
YAnchor(9,76)
YLink(9,39,80)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 543, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 22
MDRP[m&gt;RBl], 29
SHP[2], 18
MIAP[R], 9, 76
MIRP[m&gt;RBl], 39, 80
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="544">
      <instructions>
        <talk>/* VTTTalk glyph 544, char 0xffff */
/* GUI generated Sat Feb 22 08:06:41 2020 */

/* Y direction */
YAnchor(22,75)
YLink(22,21,81)
YShift(22,47)
YAnchor(42,77)
YLink(42,43,81)
YShift(42,46)
YShift(42,0)
YDist(0,40)
YInterpolate(42,7,22)
YDist(7,12)
YShift(7,32)
YShift(7,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 544, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 22, 75
MIRP[m&gt;RBl], 21, 81
SHP[1], 47
MIAP[R], 42, 77
MIRP[m&gt;RBl], 43, 81
SHP[1], 46
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 40
SRP1[], 42
SRP2[], 22
IP[], 7
SRP0[], 7
MDRP[m&gt;RBl], 12
SHP[1], 32
SHP[1], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="545">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 544, 0, 0
OVERLAP[]
OFFSET[R], 793, 903, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="546">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 544, 0, 0
OVERLAP[]
OFFSET[R], 797, 978, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="547">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 544, 0, 0
OVERLAP[]
OFFSET[R], 816, 1033, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="548">
      <instructions>
        <talk>/* VTTTalk glyph 548, char 0xffff */
/* GUI generated Sat Feb 22 08:08:48 2020 */

/* Y direction */
YAnchor(0,78)
YShift(0,6)
YLink(0,16,80)
YAnchor(28,76)
YShift(28,33)
YLink(28,42,80)
YInterpolate(0,22,48,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 548, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 78
SHP[2], 6
MIRP[m&gt;RBl], 16, 80
MIAP[R], 28, 76
SHP[1], 33
MIRP[m&gt;RBl], 42, 80
SRP2[], 0
IP[], 22
IP[], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="549">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 548, 0, 0
OVERLAP[]
OFFSET[R], 793, 767, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="550">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 548, 0, 0
OVERLAP[]
OFFSET[R], 797, 842, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="551">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 548, 0, 0
OVERLAP[]
OFFSET[R], 817, 801, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="552">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 548, 0, 0
OVERLAP[]
OFFSET[R], 548, 808, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="553">
      <instructions>
        <talk>/* VTTTalk glyph 553, char 0xffff */
/* GUI generated Sat Feb 22 08:10:16 2020 */

/* Y direction */
YAnchor(5,75)
YShift(5,2)
YShift(5,9)
YLink(5,17,79)
YShift(5,23)
YAnchor(29,77)
YShift(29,25)
YLink(29,28,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 553, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 75
SHP[1], 2
SHP[1], 9
MIRP[m&gt;RBl], 17, 79
SHP[1], 23
MIAP[R], 29, 77
SHP[1], 25
MIRP[m&gt;RBl], 28, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="554">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 553, 0, 0
OVERLAP[]
OFFSET[R], 883, 1049, 111
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="555">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 553, 0, 0
OVERLAP[]
OFFSET[R], 797, 1077, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="556">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 553, 0, 0
OVERLAP[]
OFFSET[R], 817, 950, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="557">
      <instructions>
        <talk>/* VTTTalk glyph 557, char 0xffff */
/* GUI generated Sat Feb 22 08:11:49 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YAnchor(34,75)
YShift(34,11)
YShift(34,24)
YShift(34,37)
YLink(34,35,81)
YShift(35,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 557, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
MIAP[R], 34, 75
SHP[1], 11
SHP[1], 24
SHP[1], 37
MIRP[m&gt;RBl], 35, 81
SHP[2], 36
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="558">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 793, 1020, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="559">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 798, 1183, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="560">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 796, 1207, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="561">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 790, 1098, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="562">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 792, 994, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="563">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 794, 1298, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="564">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 801, 1148, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="565">
      <instructions>
        <talk>/* VTTTalk glyph 565, char 0xffff */
/* GUI generated Sat Feb 22 08:13:59 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YShift(0,30)
YShift(0,48)
YAnchor(35,75)
YShift(35,11)
YShift(35,24)
YShift(35,38)
YLink(35,36,81)
YShift(36,37)
YAnchor(41)
YDist(41,54)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 565, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
SHP[1], 30
SHP[1], 48
MIAP[R], 35, 75
SHP[1], 11
SHP[1], 24
SHP[1], 38
MIRP[m&gt;RBl], 36, 81
SHP[2], 37
MDAP[R], 41
MDRP[m&gt;RBl], 54
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="566">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 799, 1130, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="567">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 557, 0, 0
OVERLAP[]
OFFSET[R], 800, 1230, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="568">
      <instructions>
        <talk>/* VTTTalk glyph 568, char 0xffff */
/* GUI generated Sat Feb 22 08:15:25 2020 */

/* Y direction */
YAnchor(8,78)
YShift(8,3)
YAnchor(11,75)
YShift(11,2)
YShift(11,5)
YShift(11,14)
YLink(11,12,81)
YShift(12,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 568, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 78
SHP[1], 3
MIAP[R], 11, 75
SHP[1], 2
SHP[1], 5
SHP[1], 14
MIRP[m&gt;RBl], 12, 81
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="569">
      <instructions>
        <talk>/* VTTTalk glyph 569, char 0xffff */
/* GUI generated Sat Feb 22 08:18:01 2020 */

/* Y direction */
YAnchor(15,78)
YShift(15,0)
YShift(15,3)
YShift(15,11)
YAnchor(21,75)
YShift(21,1)
YShift(21,5)
YShift(21,10)
YShift(21,13)
YShift(21,18)
YShift(21,25)
YLink(21,20,81)
YShift(20,19)
YShift(20,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 569, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 15, 78
SHP[1], 0
SHP[1], 3
SHP[1], 11
MIAP[R], 21, 75
SHP[1], 1
SHP[1], 5
SHP[1], 10
SHP[1], 13
SHP[1], 18
SHP[1], 25
MIRP[m&gt;RBl], 20, 81
SHP[2], 19
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="570">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 569, 0, 0
OVERLAP[]
OFFSET[R], 793, 1186, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="571">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 569, 0, 0
OVERLAP[]
OFFSET[R], 796, 1373, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="572">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 569, 0, 0
OVERLAP[]
OFFSET[R], 790, 1264, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="573">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 569, 0, 0
OVERLAP[]
OFFSET[R], 792, 1160, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="574">
      <instructions>
        <talk>/* VTTTalk glyph 574, char 0xffff */
/* GUI generated Sat Feb 22 08:19:28 2020 */

/* Y direction */
YAnchor(16,75)
YShift(16,1)
YLink(16,15,81)
YAnchor(25,77)
YShift(25,0)
YLink(25,26,81)
YInterpolate(25,4,16)
YDist(4,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 574, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 16, 75
SHP[1], 1
MIRP[m&gt;RBl], 15, 81
MIAP[R], 25, 77
SHP[1], 0
MIRP[m&gt;RBl], 26, 81
SRP2[], 16
IP[], 4
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="575">
      <instructions>
        <talk>/* VTTTalk glyph 575, char 0xffff */
/* GUI generated Sat Feb 22 08:21:36 2020 */

/* Y direction */
YAnchor(10,75)
YShift(10,6)
YShift(10,13)
YShift(10,25)
YLink(10,11,81)
YShift(11,12)
YAnchor(20,77)
YShift(20,1)
YShift(20,4)
YShift(20,19)
YInterpolate(20,27,0,3,24,10)
YLink(20,21,81)
YShift(21,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 575, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 10, 75
SHP[1], 6
SHP[1], 13
SHP[1], 25
MIRP[m&gt;RBl], 11, 81
SHP[2], 12
MIAP[R], 20, 77
SHP[1], 1
SHP[1], 4
SHP[1], 19
SRP2[], 10
SLOOP[], 4
IP[], 27, 0, 3, 24
MIRP[m&gt;RBl], 21, 81
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="576">
      <instructions>
        <talk>/* VTTTalk glyph 576, char 0xffff */
/* GUI generated Sat Feb 22 08:24:07 2020 */

/* Y direction */
YAnchor(14,75)
YShift(14,4)
YShift(14,7)
YShift(14,17)
YLink(14,15,81)
YShift(15,16)
YAnchor(23,77)
YShift(23,11)
YLink(23,22,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 576, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 75
SHP[1], 4
SHP[1], 7
SHP[1], 17
MIRP[m&gt;RBl], 15, 81
SHP[2], 16
MIAP[R], 23, 77
SHP[1], 11
MIRP[m&gt;RBl], 22, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="577">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OVERLAP[]
OFFSET[R], 793, 983, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="578">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OVERLAP[]
OFFSET[R], 796, 1170, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="579">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OVERLAP[]
OFFSET[R], 790, 1061, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="580">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OVERLAP[]
OFFSET[R], 791, 1090, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="581">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OVERLAP[]
OFFSET[R], 792, 957, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="582">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OVERLAP[]
OFFSET[R], 801, 1111, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="583">
      <instructions>
        <talk>/* VTTTalk glyph 583, char 0xffff */
/* GUI generated Sat Feb 22 08:25:57 2020 */

/* Y direction */
YAnchor(5,77)
YShift(5,0)
YShift(5,25)
YLink(5,26,81)
YAnchor(22,75)
YShift(22,7)
YLink(22,9,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 583, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 77
SHP[1], 0
SHP[1], 25
MIRP[m&gt;RBl], 26, 81
MIAP[R], 22, 75
SHP[1], 7
MIRP[m&gt;RBl], 9, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="584">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 583, 0, 0
OVERLAP[]
OFFSET[R], 793, 956, 116

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="585">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 583, 0, 0
OVERLAP[]
OFFSET[R], 797, 1031, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="586">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 583, 0, 0
OVERLAP[]
OFFSET[R], 791, 1063, 116
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="587">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 583, 0, 0
OVERLAP[]
OFFSET[R], 883, 998, 130

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="588">
      <instructions>
        <talk>/* VTTTalk glyph 588, char 0xffff */
/* GUI generated Sat Feb 22 08:29:07 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,10)
YAnchor(35,78)
YShift(35,23)
YShift(35,31)
YAnchor(41,75)
YShift(41,14)
YShift(41,24)
YShift(41,30)
YShift(41,33)
YShift(41,38)
YShift(41,45)
YLink(41,40,81)
YShift(40,39)
YShift(40,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 588, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 10
MIAP[R], 35, 78
SHP[1], 23
SHP[1], 31
MIAP[R], 41, 75
SHP[1], 14
SHP[1], 24
SHP[1], 30
SHP[1], 33
SHP[1], 38
SHP[1], 45
MIRP[m&gt;RBl], 40, 81
SHP[2], 39
SHP[2], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="589">
      <instructions>
        <talk>/* VTTTalk glyph 589, char 0xaa */
/* GUI generated Sat Feb 22 08:30:12 2020 */

/* Y direction */
YAnchor(0)
YDist(0,28)
YShift(0,20)
YDist(20,15)
YAnchor(8)
YShift(8,11)
YShift(8,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 589, char 0xaa */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 28
SHP[1], 20
SRP0[], 20
MDRP[m&gt;RBl], 15
MDAP[R], 8
SHP[1], 11
SHP[1], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="590">
      <instructions>
        <talk>/* VTTTalk Unicode 0xba */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 16 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(7,21) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 590, char 0xba */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="591">
      <instructions>
        <talk>/* VTTTalk glyph 591, char 0x2b0 */
/* GUI generated Sat Feb 22 11:35:49 2020 */

/* Y direction */
YAnchor(4)
YAnchor(7)
YShift(7,8)
YAnchor(8)
YDist(8,20)
YIPAnchor(8,36,4)
YDist(36,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 591, char 0x2b0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 7
SHP[1], 8
MDAP[R], 8
MDRP[m&gt;RBl], 20
SRP2[], 4
IP[], 36
MDAP[R], 36
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="592">
      <instructions>
        <talk>/* VTTTalk glyph 592, char 0x2b1 */
/* GUI generated Sat Feb 22 11:39:36 2020 */

/* Y direction */
YAnchor(4)
YDist(4,10)
YDist(4,19)
YAnchor(24)
YDist(24,25)
YDist(25,36)
YInterpolate(24,52,4)
YDist(52,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 592, char 0x2b1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[m&lt;RGr], 10
MDRP[m&gt;RBl], 19
MDAP[R], 24
MDRP[M&lt;RGr], 25
MDRP[m&gt;RBl], 36
SRP1[], 24
SRP2[], 4
IP[], 52
SRP0[], 52
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="593">
      <instructions>
        <talk>/* VTTTalk glyph 593, char 0x2b2 */
/* GUI generated Sat Feb 22 11:44:32 2020 */

/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(29)
YDist(29,21)
YDist(29,42)
YDist(42,48)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 593, char 0x2b2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MDAP[R], 29
MDRP[m&gt;RBl], 21
MDRP[M&lt;RWh], 42
MDRP[m&gt;RBl], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="594">
      <instructions>
        <talk>/* VTTTalk glyph 594, char 0x2b7 */
/* GUI generated Sat Feb 22 11:45:27 2020 */

/* Y direction */
YAnchor(0)
YShift(0,66)
YDist(0,31)
YShift(31,46)
YAnchor(24)
YDist(24,7)
YShift(24,57)
YAnchor(57)
YShift(24,73)
YAnchor(73)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 594, char 0x2b7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 66
MDRP[m&gt;RBl], 31
SHP[2], 46
MDAP[R], 24
MDRP[m&gt;RBl], 7
SHP[1], 57
MDAP[R], 57
SRP1[], 24
SHP[1], 73
MDAP[R], 73
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="595">
      <instructions>
        <talk>/* VTTTalk glyph 595, char 0x2e1 */
/* GUI generated Sat Feb 22 11:45:49 2020 */

/* Y direction */
YAnchor(0)
YDist(0,17)
YAnchor(9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 595, char 0x2e1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 17
MDAP[R], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="596">
      <instructions>
        <talk>/* VTTTalk glyph 596, char 0x207f */
/* GUI generated Sat Feb 22 11:46:52 2020 */

/* Y direction */
YAnchor(22)
YDist(22,11)
YShift(22,56)
YAnchor(56)
YDist(56,48)
YAnchor(42)
YShift(42,17)
YShift(42,0)
YAnchor(0)
YDist(0,34)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 596, char 0x207f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RBl], 11
SHP[1], 56
MDAP[R], 56
MDRP[m&gt;RBl], 48
MDAP[R], 42
SHP[1], 17
SHP[1], 0
MDAP[R], 0
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="597">
      <instructions>
        <talk>/* VTTTalk glyph 597, char 0x3b2 */
/* GUI generated Sat Feb 22 11:50:39 2020 */

/* Y direction */
YAnchor(4)
YLink(4,48,69)
YAnchor(20,11)
YLink(20,27,69)
YInterpolate(20,35,4)
YDist(35,40)
YAnchor(54)
YShift(54,53)
YLink(54,55,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 597, char 0x3b2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
MIRP[m&gt;RBl], 48, 69
MIAP[R], 20, 11
MIRP[m&gt;RBl], 27, 69
SRP2[], 4
IP[], 35
SRP0[], 35
MDRP[m&gt;RBl], 40
MDAP[R], 54
SHP[1], 53
MIRP[m&gt;RBl], 55, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="598">
      <instructions>
        <talk>/* VTTTalk glyph 598, char 0x3b8 */
/* GUI generated Sat Feb 22 11:51:08 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,24,69)
YAnchor(10)
YLink(10,34,69)
YIPAnchor(10,20,0)
YDist(20,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 598, char 0x3b8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 24, 69
MDAP[R], 10
MIRP[m&gt;RBl], 34, 69
SRP2[], 0
IP[], 20
MDAP[R], 20
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="599">
      <instructions>
        <talk>/* VTTTalk glyph 599, char 0x3c7 */
/* GUI generated Sat Feb 22 11:52:43 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,66)
YShift(0,3)
YShift(0,13)
YAnchor(11,6)
YShift(11,8)
YShift(11,5)
YLink(5,6,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 599, char 0x3c7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 66
SHP[1], 3
SHP[1], 13
MIAP[R], 11, 6
SHP[1], 8
SHP[1], 5
SRP0[], 5
MIRP[m&gt;RBl], 6, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="600">
      <instructions>
        <talk>/* VTTTalk glyph 600, char 0x37c */
/* GUI generated Sat Feb 22 11:53:41 2020 */

/* Y direction */
YAnchor(0)
YDist(0,30)
YAnchor(9)
YDist(9,21)
YIPAnchor(9,40,0)
YInterpolate(9,47,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 600, char 0x37c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 30
MDAP[R], 9
MDRP[m&gt;RBl], 21
SRP2[], 0
IP[], 40
MDAP[R], 40
SRP2[], 9
IP[], 47
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="601">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa770 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(29)	/* max */

/* YDir: Stroke #0 */
YDist(29,8) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 601, char 0xa770 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 29
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="602">
      <instructions>
        <talk>/* VTTTalk Unicode 0x30 (0) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* CVT 9 5 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(9,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(9,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,18) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 602, char 0x30 (0) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 9, 5
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="603">
      <instructions>
        <talk>/* VTTTalk glyph 603, char 0x31 (1) */
/* GUI generated Sat Feb 22 11:56:20 2020 */

/* Y direction */
YAnchor(5,5)
YShift(5,1)
YAnchor(11,12)
YShift(11,10)
YLink(11,12,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 603, char 0x31 (1) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 5
SHP[1], 1
MIAP[R], 11, 12
SHP[1], 10
MIRP[m&gt;RBl], 12, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="604">
      <instructions>
        <talk>/* VTTTalk Unicode 0x32 (2) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 12 */
/* CVT 20 5 */
/* Min and Max */
YAnchor(0,12)	/* min, CVT */
YAnchor(20,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(20,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,30) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 604, char 0x32 (2) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 20, 5
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="605">
      <instructions>
        <talk>/* VTTTalk glyph 605, char 0x33 (3) */
/* GUI generated Sat Feb 22 11:57:17 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,12)
YAnchor(39,5)
YDist(39,32)
YInterpolate(0,20,39)
YShift(20,47)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 605, char 0x33 (3) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 12
MIAP[R], 39, 5
MDRP[m&gt;RBl], 32
SRP2[], 0
IP[], 20
SRP1[], 20
SHP[1], 47
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="606">
      <instructions>
        <talk>/* VTTTalk glyph 606, char 0x34 (4) */
/* GUI generated Sat Feb 22 11:58:15 2020 */

/* Y direction */
YAnchor(7)
YAnchor(20,12)
YShift(20,19)
YStem(20,21,66)
YLink(20,21)
YIPAnchor(7,18,20)
YInterpolate(7,14,18)
YShift(18,2)
YDist(18,15)
YShift(15,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 606, char 0x34 (4) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 7
MIAP[R], 20, 12
SHP[1], 19
MIRP[m&gt;RBl], 21, 66
SRP2[], 7
IP[], 18
MDAP[R], 18
IP[], 14
SHP[1], 2
MDRP[m&gt;RBl], 15
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="607">
      <instructions>
        <talk>/* VTTTalk Unicode 0x35 (5) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* CVT 25 4 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(25,4)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(25,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(25,34,0)
YAnchor(34)
YDist(34,20) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 607, char 0x35 (5) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 25, 4
MDRP[m&gt;RBl], 28
SRP2[], 0
IP[], 34
MDAP[R], 34
MDRP[m&gt;RBl], 20
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="608">
      <instructions>
        <talk>/* VTTTalk Unicode 0x36 (6) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(10)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(10,27,0)
YAnchor(27)
YDist(27,35) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,19) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 608, char 0x36 (6) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 10
IP[], 27
MDAP[R], 27
MDRP[m&gt;RBl], 35
SRP0[], 0
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="609">
      <instructions>
        <talk>/* VTTTalk glyph 609, char 0x37 (7) */
/* GUI generated Sat Feb 22 11:59:24 2020 */

/* Y direction */
YAnchor(0,12)
YAnchor(11,4)
YDist(11,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 609, char 0x37 (7) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 11, 4
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="610">
      <instructions>
        <talk>/* VTTTalk glyph 610, char 0x38 (8) */
/* GUI generated Sat Feb 22 12:00:02 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,31)
YAnchor(16,5)
YDist(16,52)
YInterpolate(0,38,8,23,45,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 610, char 0x38 (8) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 31
MIAP[R], 16, 5
MDRP[m&gt;RBl], 52
SRP2[], 0
SLOOP[], 4
IP[], 38, 8, 23, 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="611">
      <instructions>
        <talk>/* VTTTalk Unicode 0x39 (9) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 35 5 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(35,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(35,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(35,26,0)
YAnchor(26)
YDist(26,18) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 611, char 0x39 (9) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 35, 5
MDRP[m&gt;RBl], 9
SRP2[], 0
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="612">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4,13)	/* min */
YAnchor(14,5)	/* max */

/* YDir: Stroke #0 */
YDist(14,33) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,23) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(14,2) /* max */
YShift(4,0) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 612, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 13
MIAP[R], 14, 5
MDRP[m&gt;RBl], 33
SRP0[], 4
MDRP[m&gt;RBl], 23
SRP1[], 14
SHP[1], 2
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="613">
      <instructions>
        <talk>/* VTTTalk Unicode 0x30 (0) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* CVT 9 5 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(9,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(9,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,18) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 613, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 9, 5
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="614">
      <instructions>
        <talk>/* VTTTalk glyph 603, char 0x31 (1) */
/* GUI generated Sat Feb 22 11:56:20 2020 */

/* Y direction */
YAnchor(5,5)
YShift(5,1)
YAnchor(11,12)
YShift(11,10)
YLink(11,12,66)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 614, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 5
SHP[1], 1
MIAP[R], 11, 12
SHP[1], 10
MIRP[m&gt;RBl], 12, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="615">
      <instructions>
        <talk>/* VTTTalk Unicode 0x32 (2) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 12 */
/* CVT 20 5 */
/* Min and Max */
YAnchor(0,12)	/* min, CVT */
YAnchor(20,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(20,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,30) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 615, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 20, 5
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="616">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 605, -43, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="617">
      <instructions>
        <talk>/* VTTTalk glyph 606, char 0x34 (4) */
/* GUI generated Sat Feb 22 11:58:15 2020 */

/* Y direction */
YAnchor(7)
YAnchor(20,12)
YShift(20,19)
YStem(20,21,66)
YLink(20,21)
YIPAnchor(7,18,20)
YInterpolate(7,14,18)
YShift(18,2)
YDist(18,15)
YShift(15,11)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 617, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 7
MIAP[R], 20, 12
SHP[1], 19
MIRP[m&gt;RBl], 21, 66
SRP2[], 7
IP[], 18
MDAP[R], 18
IP[], 14
SHP[1], 2
MDRP[m&gt;RBl], 15
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="618">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 607, -33, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="619">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,13)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YInterpolate(10,27,0)
YAnchor(27)
YDist(27,35) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,19) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 619, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 10
IP[], 27
MDAP[R], 27
MDRP[m&gt;RBl], 35
SRP0[], 0
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="620">
      <instructions>
        <talk>/* VTTTalk glyph 620, char 0xffff */
/* GUI generated Sun Feb 23 14:23:20 2020 */

/* Y direction */
YAnchor(0,12)
YAnchor(11,4)
YShift(11,1)
YDist(11,3)
YShift(11,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 620, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 11, 4
SHP[1], 1
MDRP[m&gt;RBl], 3
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="621">
      <instructions>
        <talk>/* VTTTalk glyph 610, char 0x38 (8) */
/* GUI generated Sat Feb 22 12:00:02 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,31)
YAnchor(16,5)
YDist(16,52)
YInterpolate(0,38,8,23,45,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 621, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 31
MIAP[R], 16, 5
MDRP[m&gt;RBl], 52
SRP2[], 0
SLOOP[], 4
IP[], 38, 8, 23, 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="622">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(35,5)	/* max */

/* YDir: Stroke #0 */
YDist(35,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(35,26,0)
YAnchor(26)
YDist(26,18) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 622, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 35, 5
MDRP[m&gt;RBl], 9
SRP2[], 0
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="623">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4,13)	/* min */
YAnchor(13,5)	/* max */

/* YDir: Stroke #0 */
YDist(13,33) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,22) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(13,2) /* max */
YShift(4,0) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 623, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 13
MIAP[R], 13, 5
MDRP[m&gt;RBl], 33
SRP0[], 4
MDRP[m&gt;RBl], 22
SRP1[], 13
SHP[1], 2
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="624">
      <instructions>
        <talk>/* VTTTalk glyph 624, char 0xffff */
/* GUI generated Sat Feb 22 12:10:42 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,20,69)
YAnchor(10,7)
YLink(10,28,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 624, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 20, 69
MIAP[R], 10, 7
MIRP[m&gt;RBl], 28, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="625">
      <instructions>
        <talk>/* VTTTalk glyph 625, char 0xffff */
/* GUI generated Sat Feb 22 12:11:07 2020 */

/* Y direction */
YAnchor(4,10)
YShift(4,0)
YLink(4,5,66)
YAnchor(9,6)
YShift(9,1)
YLink(9,8,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 625, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 10
SHP[1], 0
MIRP[m&gt;RBl], 5, 66
MIAP[R], 9, 6
SHP[1], 1
MIRP[m&gt;RBl], 8, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="626">
      <instructions>
        <talk>/* VTTTalk glyph 626, char 0xffff */
/* GUI generated Sat Feb 22 12:12:17 2020 */

/* Y direction */
YAnchor(0,10)
YShift(0,26)
YDist(0,27)
YAnchor(19,7)
YDist(19,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 626, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 26
MDRP[m&gt;RBl], 27
MIAP[R], 19, 7
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="627">
      <instructions>
        <talk>/* VTTTalk glyph 627, char 0xffff */
/* GUI generated Sat Feb 22 12:14:13 2020 */

/* Y direction */
YAnchor(29,7)
YDist(29,22)
YAnchor(47)
YShift(47,0)
YDist(47,4)
YIPAnchor(47,13,29)
YNoRound(14)
YDist(13,14,&gt;=)
YShift(13,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 627, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 7
MDRP[m&gt;RBl], 22
MDAP[R], 47
SHP[1], 0
MDRP[m&gt;RBl], 4
SRP2[], 29
IP[], 13
MDAP[R], 13
MDRP[m&gt;rBl], 14
SHP[1], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="628">
      <instructions>
        <talk>/* VTTTalk glyph 628, char 0xffff */
/* GUI generated Sat Feb 22 12:19:55 2020 */

/* Y direction */
YAnchor(4,5)
YAnchor(9,10)
YShift(9,2)
YShift(9,10)
YAnchor(10)
YShift(9,16)
YDist(9,6)
YShift(6,12)
YShift(6,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 628, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 5
MIAP[R], 9, 10
SHP[1], 2
SHP[1], 10
MDAP[R], 10
SRP1[], 9
SHP[1], 16
SRP0[], 9
MDRP[m&gt;RBl], 6
SHP[2], 12
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="629">
      <instructions>
        <talk>/* VTTTalk glyph 629, char 0xffff */
/* GUI generated Sat Feb 22 12:22:17 2020 */

/* Y direction */
YAnchor(0)
YAnchor(12)
YShift(12,15)
YInterpolate(0,9,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 629, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
SHP[1], 15
IP[], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="630">
      <instructions>
        <talk>/* VTTTalk glyph 630, char 0xffff */
/* GUI generated Sat Feb 22 12:38:19 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,21,69)
YAnchor(10)
YDist(10,11)
YIPAnchor(10,38,0)
YLink(38,30,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 630, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 21, 69
MDAP[R], 10
MDRP[m&gt;RBl], 11
SRP2[], 0
IP[], 38
MDAP[R], 38
MIRP[m&gt;RBl], 30, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="631">
      <instructions>
        <talk>/* VTTTalk glyph 631, char 0xffff */
/* GUI generated Sat Feb 22 12:39:19 2020 */

/* Y direction */
YAnchor(6,6)
YDist(6,3,&gt;=)
YShift(6,8)
YShift(6,10)

/* X direction */

Smooth()
XDelta(0,1/2@12..49)
XDelta(7,1/2@12..49)
</talk>
        <assembly>/* TT glyph 631, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 6, 6
MDRP[m&gt;RBl], 3
SHP[1], 8
SHP[1], 10
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 0, 32, 12, 49, 72
CALL[], 7, 32, 12, 49, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="632">
      <instructions>
        <talk>/* VTTTalk glyph 632, char 0xffff */
/* GUI generated Sat Feb 22 12:26:38 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,30)
YAnchor(15)
YDist(15,51)
YInterpolate(0,37,7,22,44,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 632, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 30
MDAP[R], 15
MDRP[m&gt;RBl], 51
SRP2[], 0
SLOOP[], 4
IP[], 37, 7, 22, 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="633">
      <instructions>
        <talk>/* VTTTalk glyph 633, char 0xffff */
/* GUI generated Tue Feb 25 17:27:39 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(28)
YLink(28,20,69)
YAnchor(37,7)
YLink(37,11,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 633, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 28
MIRP[m&gt;RBl], 20, 69
MIAP[R], 37, 7
MIRP[m&gt;RBl], 11, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="634">
      <instructions>
        <talk>/* VTTTalk glyph 634, char 0xffff */
/* GUI generated Sat Feb 22 12:43:13 2020 */

/* Y direction */
YAnchor(4,11)
YShift(4,0)
YLink(4,24,69)
YAnchor(14,7)
YShift(14,2)
YLink(14,32,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 634, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 0
MIRP[m&gt;RBl], 24, 69
MIAP[R], 14, 7
SHP[1], 2
MIRP[m&gt;RBl], 32, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="635">
      <instructions>
        <talk>/* VTTTalk glyph 635, char 0xffff */
/* GUI generated Sat Feb 22 12:42:42 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,20,69)
YAnchor(10,7)
YLink(10,28,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 635, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 20, 69
MIAP[R], 10, 7
MIRP[m&gt;RBl], 28, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="636">
      <instructions>
        <talk>/* VTTTalk glyph 636, char 0xffff */
/* GUI generated Sat Feb 22 12:44:07 2020 */

/* Y direction */
YAnchor(4,10)
YShift(4,0)
YLink(4,5,66)
YAnchor(9,6)
YShift(9,1)
YLink(9,8,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 636, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 10
SHP[1], 0
MIRP[m&gt;RBl], 5, 66
MIAP[R], 9, 6
SHP[1], 1
MIRP[m&gt;RBl], 8, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="637">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,10)	/* min */
YAnchor(19,7)	/* max */

/* YDir: Stroke #0 */
YDist(19,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 637, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 19, 7
MDRP[m&gt;RBl], 10
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="638">
      <instructions>
        <talk>/* VTTTalk glyph 638, char 0xffff */
/* GUI generated Thu Feb 27 20:31:44 2020 */

/* Y direction */
YAnchor(29,7)
YDist(29,22)
YAnchor(47)
YDist(47,4)
YInterpolate(47,13,29)
YShift(13,14)
YShift(13,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 638, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 7
MDRP[m&gt;RBl], 22
MDAP[R], 47
MDRP[m&gt;RBl], 4
SRP2[], 29
IP[], 13
SRP1[], 13
SHP[1], 14
SHP[1], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="639">
      <instructions>
        <talk>/* VTTTalk glyph 639, char 0xffff */
/* GUI generated Sat Feb 22 12:47:36 2020 */

/* Y direction */
YAnchor(4,7)
YAnchor(9,10)
YShift(9,1)
YDist(9,10,&gt;=)
YShift(9,16)
YDist(9,6,&gt;=)
YShift(6,13)
YShift(6,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 639, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 7
MIAP[R], 9, 10
SHP[1], 1
MDRP[m&gt;RBl], 10
SHP[1], 16
MDRP[m&gt;RBl], 6
SHP[2], 13
SHP[2], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="640">
      <instructions>
        <talk>/* VTTTalk glyph 640, char 0xffff */
/* GUI generated Sat Feb 22 12:48:38 2020 */

/* Y direction */
YAnchor(0)
YAnchor(12)
YShift(12,15)
YInterpolate(0,9,26,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 640, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
SHP[1], 15
IP[], 9
IP[], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="641">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YInterpolate(10,38,0)
YAnchor(38)
YDist(38,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,21) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 641, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 10
IP[], 38
MDAP[R], 38
MDRP[m&gt;RBl], 30
SRP0[], 0
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="642">
      <instructions>
        <talk>/* VTTTalk glyph 631, char 0xffff */
/* GUI generated Sat Feb 22 12:39:19 2020 */

/* Y direction */
YAnchor(6,6)
YDist(6,3,&gt;=)
YShift(6,8)
YShift(6,10)

/* X direction */

Smooth()
XDelta(0,1/2@12..49)
XDelta(7,1/2@12..49)


</talk>
        <assembly>/* TT glyph 642, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 6, 6
MDRP[m&gt;RBl], 3
SHP[1], 8
SHP[1], 10
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 0, 32, 12, 49, 72
CALL[], 7, 32, 12, 49, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="643">
      <instructions>
        <talk>/* VTTTalk glyph 643, char 0xffff */
/* GUI generated Sat Feb 22 12:51:21 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,31,69)
YAnchor(16)
YLink(16,52,69)
YInterpolate(0,38,8,23,45,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 643, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 31, 69
MDAP[R], 16
MIRP[m&gt;RBl], 52, 69
SRP2[], 0
SLOOP[], 4
IP[], 38, 8, 23, 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="644">
      <instructions>
        <talk>/* VTTTalk glyph 644, char 0xffff */
/* GUI generated Tue Feb 25 17:26:15 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(28)
YLink(28,20,69)
YAnchor(37,7)
YLink(37,11,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 644, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 28
MIRP[m&gt;RBl], 20, 69
MIAP[R], 37, 7
MIRP[m&gt;RBl], 11, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="645">
      <instructions>
        <talk>/* VTTTalk glyph 645, char 0xffff */
/* GUI generated Sat Feb 22 12:53:13 2020 */

/* Y direction */
YAnchor(4,7)
YShift(4,0)
YLink(4,24,69)
YAnchor(14,11)
YShift(14,2)
YLink(14,32,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 645, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 7
SHP[1], 0
MIRP[m&gt;RBl], 24, 69
MIAP[R], 14, 11
SHP[1], 2
MIRP[m&gt;RBl], 32, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="646">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb9 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(11)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(11,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(11,10)

Smooth()

</talk>
        <assembly>/* TT glyph 646, char 0xb9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 11
MDAP[R], 5
SRP0[], 11
MDRP[m&gt;RBl], 12
SHP[1], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="647">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb2 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20)	/* max */

/* YDir: Stroke #0 */
YDist(20,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,28) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 647, char 0xb2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 20
MDRP[m&gt;RBl], 13
SRP0[], 0
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="648">
      <instructions>
        <talk>/* VTTTalk glyph 648, char 0xb3 */
/* GUI generated Sat Feb 22 13:24:49 2020 */

/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(37)
YDist(37,30)
YInterpolate(0,19,37)
YDist(19,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 648, char 0xb3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MDAP[R], 37
MDRP[m&gt;RBl], 30
SRP2[], 0
IP[], 19
SRP0[], 19
MDRP[m&gt;RBl], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="649">
      <instructions>
        <talk>/* VTTTalk glyph 649, char 0x2074 */
/* GUI generated Sat Feb 22 13:25:23 2020 */

/* Y direction */
YAnchor(7)
YShift(7,9)
YAnchor(20)
YShift(20,19)
YDist(20,21)
YIPAnchor(7,18,20)
YInterpolate(7,14,18)
YShift(18,2)
YDist(18,15)
YShift(15,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 649, char 0x2074 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 9
MDAP[R], 20
SHP[1], 19
MDRP[m&gt;RBl], 21
SRP2[], 7
IP[], 18
MDAP[R], 18
IP[], 14
SHP[1], 2
MDRP[m&gt;RBl], 15
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="650">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2044 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 650, char 0x2044 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="651">
      <instructions>
        <talk>/* VTTTalk Unicode 0xbd */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* CVTs - beginning */
YAnchor(4,18)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(2,22,0)
YAnchor(22)
YDist(22,16) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(2,49,0)
YAnchor(49)
YDist(49,50) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(4,30) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(2,43) /* max */
YShift(49,38) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 651, char 0xbd */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
MIAP[R], 4, 18
SRP1[], 2
IP[], 22
MDAP[R], 22
MDRP[m&gt;RBl], 16
SRP1[], 2
SRP2[], 0
IP[], 49
MDAP[R], 49
MDRP[m&gt;RBl], 50
SRP0[], 4
MDRP[m&gt;RBl], 30
SRP1[], 2
SHP[1], 43
SRP1[], 49
SHP[1], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="652">
      <instructions>
        <talk>/* VTTTalk glyph 652, char 0xbc */
/* GUI generated Sat Feb 22 13:27:20 2020 */

/* Y direction */
YAnchor(21,18)
YDist(21,22)
YAnchor(25)
YAnchor(27)
YShift(27,34)
YIPAnchor(27,40,19,25)
YInterpolate(27,8,40)
YShift(40,29)
YDist(40,41)
YShift(19,2)
YDist(19,16)
YShift(16,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 652, char 0xbc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 18
MDRP[m&gt;RBl], 22
MDAP[R], 25
MDAP[R], 27
SHP[1], 34
SRP2[], 25
IP[], 40
IP[], 19
MDAP[R], 40
MDAP[R], 19
SRP1[], 27
SRP2[], 40
IP[], 8
SHP[2], 29
SRP0[], 40
MDRP[m&gt;RBl], 41
SRP1[], 19
SHP[1], 2
SRP0[], 19
MDRP[m&gt;RBl], 16
SHP[2], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="653">
      <instructions>
        <talk>/* VTTTalk glyph 653, char 0xbe */
/* GUI generated Sat Feb 22 13:28:38 2020 */

/* Y direction */
YAnchor(21,18)
YDist(21,22)
YAnchor(25)
YAnchor(27)
YIPAnchor(27,66,29,19,25)
YInterpolate(66,48,8,29)
YDist(66,59)
YDist(48,52)
YDist(29,41)
YShift(19,2)
YDist(19,16)
YShift(16,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 653, char 0xbe */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 18
MDRP[m&gt;RBl], 22
MDAP[R], 25
MDAP[R], 27
SRP2[], 25
SLOOP[], 3
IP[], 66, 29, 19
MDAP[R], 66
MDAP[R], 29
MDAP[R], 19
SRP1[], 66
SRP2[], 29
IP[], 48
IP[], 8
SRP0[], 66
MDRP[m&gt;RBl], 59
SRP0[], 48
MDRP[m&gt;RBl], 52
SRP0[], 29
MDRP[m&gt;RBl], 41
SRP1[], 19
SHP[1], 2
SRP0[], 19
MDRP[m&gt;RBl], 16
SHP[2], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="654">
      <instructions>
        <talk>/* VTTTalk glyph 654, char 0x2e (.) */
/* GUI generated Sat Feb 22 13:34:58 2020 */

/* Y direction */
YAnchor(0,19)
YDist(0,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 654, char 0x2e (.) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="655">
      <instructions>
        <talk>/* VTTTalk glyph 655, char 0x2c (,) */
/* GUI generated Sat Feb 22 13:35:44 2020 */

/* Y direction */
YAnchor(6,18)
YDist(6,0)
YDist(6,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 655, char 0x2c (,) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 6, 18
MDRP[m&gt;RBl], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="656">
      <instructions>
        <talk>/* VTTTalk glyph 656, char 0x3a (:) */
/* GUI generated Sat Feb 22 13:36:52 2020 */

/* Y direction */
YAnchor(0,19)
YDist(0,6)
YDist(6,12)
YDist(12,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 656, char 0x3a (:) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[M&gt;RBl], 6
MDRP[M&lt;RWh], 12
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="657">
      <instructions>
        <talk>/* VTTTalk glyph 657, char 0x3b (;) */
/* GUI generated Sat Feb 22 13:40:03 2020 */

/* Y direction */
YAnchor(18,18)
YDist(18,12)
YDist(18,24)
YDist(24,0)
YDist(0,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 657, char 0x3b (;) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 18
MDRP[m&gt;RBl], 12
MDRP[M&gt;RBl], 24
MDRP[M&lt;RWh], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="658">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 654, 0, 0
OVERLAP[]
OFFSET[R], 654, 694, 0
OVERLAP[]
OFFSET[R], 654, 1386, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="659">
      <instructions>
        <talk>/* VTTTalk glyph 659, char 0x21 (!) */
/* GUI generated Sat Feb 22 13:40:27 2020 */

/* Y direction */
YAnchor(12,19)
YDist(12,18)
YDist(18,0)
YDist(0,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 659, char 0x21 (!) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 12, 19
MDRP[M&gt;RBl], 18
MDRP[M&lt;RWh], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="660">
      <instructions>
        <talk>/* VTTTalk glyph 660, char 0xa1 */
/* GUI generated Sat Feb 22 13:40:41 2020 */

/* Y direction */
YAnchor(17)
YDist(17,11)
YDist(11,7)
YDist(7,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 660, char 0xa1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 17
MDRP[M&gt;RBl], 11
MDRP[M&lt;RWh], 7
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="661">
      <instructions>
        <talk>/* VTTTalk glyph 661, char 0x3f (?) */
/* GUI generated Sat Feb 22 13:40:58 2020 */

/* Y direction */
YAnchor(22)
YAnchor(39,19)
YDist(39,46)
YDist(46,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 661, char 0x3f (?) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 22
MIAP[R], 39, 19
MDRP[M&gt;RBl], 46
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="662">
      <instructions>
        <talk>/* VTTTalk glyph 662, char 0xbf */
/* GUI generated Sat Feb 22 13:41:05 2020 */

/* Y direction */
YAnchor(0)
YAnchor(45)
YDist(45,39)
YDist(39,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 662, char 0xbf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 45
MDRP[M&gt;RBl], 39
MDRP[m&lt;RWh], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="663">
      <instructions>
        <talk>/* VTTTalk glyph 663, char 0xb7 */
/* GUI generated Sat Feb 22 13:41:53 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 663, char 0xb7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="664">
      <instructions>
        <talk>/* VTTTalk glyph 664, char 0x2022 */
/* GUI generated Sat Feb 22 13:42:06 2020 */

/* Y direction */
YAnchor(0)
YDist(0,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 664, char 0x2022 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="665">
      <instructions>
        <talk>/* VTTTalk glyph 665, char 0x2a (*) */
/* GUI generated Sat Feb 22 13:43:47 2020 */

/* Y direction */
YAnchor(0)
YDist(0,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 665, char 0x2a (*) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="666">
      <instructions>
        <talk>/* VTTTalk Unicode 0x23 (#) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18 */
/* Min and Max */
YAnchor(4,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(5,1,4)
YAnchor(1)
YDist(1,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(5,8,4)
YAnchor(8)
YDist(8,9) /*perpendicular to the stroke*/

/* Contour #3 */
YShift(5,13) /* max */
YShift(4,12) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 666, char 0x23 (#) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 18
MDAP[R], 5
SRP2[], 4
IP[], 1
MDAP[R], 1
MDRP[m&gt;RBl], 0
SRP1[], 5
SRP2[], 4
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
SRP1[], 5
SHP[1], 13
SRP1[], 4
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="667">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2f (/) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 667, char 0x2f (/) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="668">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5c (\) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(3)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 668, char 0x5c (\) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="669">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2016 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,5) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 669, char 0x2016 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 5
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="670">
      <instructions>
        <talk>/* VTTTalk glyph 670, char 0x204a */
/* GUI generated Sat Feb 22 13:45:45 2020 */

/* Y direction */
YAnchor(0)
YDist(0,7)
YAnchor(27)
YShift(27,21)
YDist(27,13)
YShift(13,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 670, char 0x204a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 7
MDAP[R], 27
SHP[1], 21
MDRP[m&gt;RBl], 13
SHP[2], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="671">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(11,6)	/* max */

/* YDir: Stroke #0 */
YDist(11,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,22) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 671, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 11, 6
MDRP[m&gt;RBl], 10
SRP0[], 0
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="672">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(11,6)	/* max */

/* YDir: Stroke #0 */
YDist(11,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(11,29,0)
YAnchor(29)
YDist(29,30) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,22) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 672, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 11, 6
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 29
MDAP[R], 29
MDRP[m&gt;RBl], 30
SRP0[], 0
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="673">
      <instructions>
        <talk>/* VTTTalk Unicode 0x28 (() */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 673, char 0x28 (() */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="674">
      <instructions>
        <talk>/* VTTTalk Unicode 0x29 ()) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(11)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 674, char 0x29 ()) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="675">
      <instructions>
        <talk>/* VTTTalk glyph 675, char 0x7b ({) */
/* GUI generated Sat Feb 22 13:48:55 2020 */

/* Y direction */
YAnchor(0)
YDist(0,49,&gt;=)
YAnchor(24)
YDist(24,25,&gt;=)
YInterpolate(0,14,24)
YDist(14,15,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 675, char 0x7b ({) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 49
MDAP[R], 24
MDRP[m&gt;RBl], 25
SRP2[], 0
IP[], 14
SRP0[], 14
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="676">
      <instructions>
        <talk>/* VTTTalk glyph 676, char 0x7d (}) */
/* GUI generated Sat Feb 22 13:49:49 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)
YAnchor(28)
YDist(28,27,&gt;=)
YInterpolate(0,43,28)
YDist(43,42,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 676, char 0x7d (}) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 28
MDRP[m&gt;RBl], 27
SRP2[], 0
IP[], 43
SRP0[], 43
MDRP[m&gt;RBl], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="677">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5b ([) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,5) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 677, char 0x5b ([) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="678">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5d (]) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(5,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,1) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 678, char 0x5d (]) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="679">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2329 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 679, char 0x2329 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="680">
      <instructions>
        <talk>/* VTTTalk Unicode 0x232a */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(4)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 680, char 0x232a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="681">
      <instructions>
        <talk>/* VTTTalk glyph 681, char 0x2d (-) */
/* GUI generated Thu Feb 20 21:30:27 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 681, char 0x2d (-) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="682">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 681, -8, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="683">
      <instructions>
        <talk>/* VTTTalk glyph 683, char 0x2013 */
/* GUI generated Thu Feb 20 21:30:46 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 683, char 0x2013 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="684">
      <instructions>
        <talk>/* VTTTalk glyph 684, char 0x2014 */
/* GUI generated Thu Feb 20 21:30:54 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 684, char 0x2014 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="685">
      <instructions>
        <talk>/* VTTTalk glyph 685, char 0x2012 */
/* GUI generated Thu Feb 20 21:30:59 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 685, char 0x2012 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="686">
      <instructions>
        <talk>/* VTTTalk glyph 686, char 0x5f (_) */
/* GUI generated Thu Feb 20 21:31:09 2020 */

/* Y direction */
YAnchor(1)
YLink(1,2,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 686, char 0x5f (_) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 2, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="687">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 686, -10, 0
OVERLAP[]
OFFSET[R], 686, -10, -216

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="688">
      <instructions>
        <talk>/* VTTTalk glyph 688, char 0x2010 */
/* GUI generated Thu Feb 20 21:31:23 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 688, char 0x2010 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="689">
      <instructions>
        <talk>/* VTTTalk glyph 689, char 0x2011 */
/* GUI generated Thu Feb 20 21:31:32 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 689, char 0x2011 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="690">
      <instructions>
        <talk>/* VTTTalk glyph 690, char 0x2015 */
/* GUI generated Thu Feb 20 21:31:39 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 690, char 0x2015 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="691">
      <instructions>
        <talk>/* VTTTalk glyph 691, char 0xffff */
/* GUI generated Thu Feb 20 21:31:44 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 691, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="692">
      <instructions>
        <talk>/* VTTTalk glyph 692, char 0x201a */
/* GUI generated Thu Feb 20 21:32:17 2020 */

/* Y direction */
YAnchor(6)
YDist(6,0)
YDist(6,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 692, char 0x201a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="693">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 692, 0, 0
OVERLAP[]
OFFSET[R], 692, 412, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="694">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 696, 0, 0
OVERLAP[]
OFFSET[R], 696, 402, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="695">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 697, 0, 0
OVERLAP[]
OFFSET[R], 697, 386, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="696">
      <instructions>
        <talk>/* VTTTalk glyph 696, char 0x2018 */
/* GUI generated Sat Feb 22 13:52:59 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8)
YIPAnchor(0,14,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 696, char 0x2018 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 14
MDAP[R], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="697">
      <instructions>
        <talk>/* VTTTalk glyph 697, char 0x2019 */
/* GUI generated Sat Feb 22 13:55:46 2020 */

/* Y direction */
YAnchor(0)
YAnchor(12)
YIPAnchor(0,6,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 697, char 0x2019 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
IP[], 6
MDAP[R], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="698">
      <instructions>
        <talk>/* VTTTalk glyph 698, char 0x201b */
/* GUI generated Sat Feb 22 13:56:10 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8)
YInterpolate(0,15,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 698, char 0x201b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="699">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 698, 0, 0
OVERLAP[]
OFFSET[R], 698, 383, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="700">
      <instructions>
        <talk>/* VTTTalk Unicode 0xab */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* Contour #1 */
YShift(3,11) /* max */
YShift(0,8) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 700, char 0xab */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
SHP[1], 11
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="701">
      <instructions>
        <talk>/* VTTTalk Unicode 0xbb */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Contour #1 */
YShift(5,13) /* max */
YShift(0,8) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 701, char 0xbb */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 13
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="702">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2039 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 702, char 0x2039 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="703">
      <instructions>
        <talk>/* VTTTalk Unicode 0x203a */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 703, char 0x203a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="704">
      <instructions>
        <talk>/* VTTTalk Unicode 0x22 (") */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* Contour #1 */
YShift(10,30) /* max */
YShift(0,20) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 704, char 0x22 (") */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
SHP[1], 30
SHP[2], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="705">
      <instructions>
        <talk>/* VTTTalk Unicode 0x27 (') */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 705, char 0x27 (') */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="706">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 706, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="707">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(11)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 707, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="708">
      <instructions>
        <talk>/* VTTTalk glyph 708, char 0xffff */
/* GUI generated Sat Feb 22 13:59:21 2020 */

/* Y direction */
YAnchor(12)
YDist(12,18,&gt;=)
YDist(18,0,&gt;=)
YDist(0,4,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 708, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 12
MDRP[M&gt;RBl], 18
MDRP[M&gt;RWh], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="709">
      <instructions>
        <talk>/* VTTTalk glyph 709, char 0xffff */
/* GUI generated Sat Feb 22 13:59:42 2020 */

/* Y direction */
YAnchor(18)
YDist(18,12,&gt;=)
YDist(12,8,&gt;=)
YDist(8,0,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 709, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 18
MDRP[M&gt;RBl], 12
MDRP[M&gt;RWh], 8
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="710">
      <instructions>
        <talk>/* VTTTalk glyph 710, char 0xffff */
/* GUI generated Sat Feb 22 14:00:32 2020 */

/* Y direction */
YAnchor(20)
YAnchor(35)
YDist(35,42)
YDist(42,0,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 710, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 20
MDAP[R], 35
MDRP[M&gt;RBl], 42
MDRP[m&gt;RWh], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="711">
      <instructions>
        <talk>/* VTTTalk glyph 711, char 0xffff */
/* GUI generated Sat Feb 22 14:00:56 2020 */

/* Y direction */
YAnchor(0)
YAnchor(41)
YDist(41,35)
YDist(35,15,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 711, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 41
MDRP[M&gt;RBl], 35
MDRP[m&gt;RWh], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="712">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,1,4)
YAnchor(1)
YDist(1,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(5,8,4)
YAnchor(8)
YDist(8,9) /*perpendicular to the stroke*/

/* Contour #3 */
YShift(5,13) /* max */
YShift(4,12) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 712, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 5
SRP2[], 4
IP[], 1
MDAP[R], 1
MDRP[m&gt;RBl], 0
SRP1[], 5
SRP2[], 4
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
SRP1[], 5
SHP[1], 13
SRP1[], 4
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="713">
      <instructions>
        <talk>/* VTTTalk Unicode 0x27e8 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 713, char 0x27e8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="714">
      <instructions>
        <talk>/* VTTTalk Unicode 0x27e9 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(4)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 714, char 0x27e9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="715">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e4a */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,10) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 715, char 0x2e4a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 10
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="716">
      <instructions>
        <talk>/* VTTTalk glyph 716, char 0x2e4c */
/* GUI generated Sat Feb 22 14:01:42 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6,&gt;=)
YNoRound(12)
YDist(6,12,&gt;=)
YAnchor(21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 716, char 0x2e4c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 6
MDRP[m&gt;rWh], 12
MDAP[R], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="717">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e4d */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,4) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(1,8) /* max */
YShift(0,6) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 717, char 0x2e4d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 4
SHP[1], 8
SRP1[], 0
SHP[1], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="718">
      <instructions>
        <talk>/* VTTTalk glyph 718, char 0x2e4e */
/* GUI generated Sat Feb 22 14:05:42 2020 */

/* Y direction */
YAnchor(23)
YDist(23,29,&gt;=)
YDist(29,0,&gt;=)
YDist(0,8,&gt;=)
YShift(8,13)
YShift(8,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 718, char 0x2e4e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 23
MDRP[M&gt;RBl], 29
MDRP[M&gt;RWh], 0
MDRP[m&gt;RBl], 8
SHP[2], 13
SHP[2], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="719">
      <instructions>
        <talk>/* VTTTalk glyph 719, char 0xffff */
/* GUI generated Sat Feb 22 14:11:53 2020 */

/* Y direction */
YAnchor(43,19)
YDist(43,49,&gt;=)
YDist(49,0,&gt;=)
YDist(0,8,&gt;=)
YShift(8,18)
YDist(8,30,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 719, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 43, 19
MDRP[M&gt;RBl], 49
MDRP[M&gt;RWh], 0
MDRP[M&gt;RGr], 8
SHP[2], 18
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="720">
      <instructions>
        <talk>/* VTTTalk Unicode 0x20 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 720, char 0x20 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="721">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa0 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 721, char 0xa0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="722">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2000 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 722, char 0x2000 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="723">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2001 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 723, char 0x2001 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="724">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2002 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 724, char 0x2002 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="725">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2003 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 725, char 0x2003 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="726">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2004 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 726, char 0x2004 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="727">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2005 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 727, char 0x2005 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="728">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2006 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 728, char 0x2006 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="729">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2007 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 729, char 0x2007 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="730">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2008 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 730, char 0x2008 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="731">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2009 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 731, char 0x2009 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="732">
      <instructions>
        <talk>/* VTTTalk Unicode 0x200a */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 732, char 0x200a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="733">
      <instructions>
        <talk>/* VTTTalk Unicode 0x200b */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 733, char 0x200b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="734">
      <instructions>
        <talk>/* VTTTalk Unicode 0x202f */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 734, char 0x202f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="735">
      <instructions>
        <talk>/* VTTTalk Unicode 0x200c */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 735, char 0x200c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="736">
      <instructions>
        <talk>/* VTTTalk Unicode 0xd */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

</talk>
        <assembly>/* TT glyph 736, char 0xd */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="737">
      <instructions>
        <talk>/* VTTTalk Unicode 0x20ac */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(10)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(10,25) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,45,0)
YAnchor(45)
YDist(45,44) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(10,48,0)
YAnchor(48)
YDist(48,49) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(0,34) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 737, char 0x20ac */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 10
MDRP[m&gt;RBl], 25
SRP2[], 0
IP[], 45
MDAP[R], 45
MDRP[m&gt;RBl], 44
SRP1[], 10
SRP2[], 0
IP[], 48
MDAP[R], 48
MDRP[m&gt;RBl], 49
SRP0[], 0
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="738">
      <instructions>
        <talk>/* VTTTalk glyph 738, char 0xa2 */
/* GUI generated Sat Feb 22 14:14:32 2020 */

/* Y direction */
YAnchor(4,13)
YShift(4,0)
YDist(4,32,&gt;=)
YAnchor(13,7)
YShift(13,2)
YDist(13,24,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 738, char 0xa2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 13
SHP[1], 0
MDRP[m&gt;RWh], 32
MIAP[R], 13, 7
SHP[1], 2
MDRP[m&gt;RWh], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="739">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa4 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(17)	/* max */

/* YDir: Stroke #0 */
YDist(17,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,33) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(17,21)

/* Extreme Max */
YShift(17,13)

/* Extreme Min */
YShift(0,29)

/* Extreme Min */
YShift(0,4)

Smooth()
</talk>
        <assembly>/* TT glyph 739, char 0xa4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 17
MDRP[m&gt;RBl], 41
SRP0[], 0
MDRP[m&gt;RBl], 33
SRP1[], 17
SHP[1], 21
SHP[1], 13
SRP1[], 0
SHP[1], 29
SHP[1], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="740">
      <instructions>
        <talk>/* VTTTalk glyph 740, char 0x24 ($) */
/* GUI generated Sat Feb 22 14:18:43 2020 */

/* Y direction */
YAnchor(0)
YShift(0,6)
YDist(0,17,&gt;=)
YShift(0,61)
YAnchor(30)
YShift(30,35)
YDist(30,44,&gt;=)
YShift(30,59)
YInterpolate(30,51,23,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 740, char 0x24 ($) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDRP[m&gt;RGr], 17
SHP[1], 61
MDAP[R], 30
SHP[1], 35
MDRP[m&gt;RGr], 44
SHP[1], 59
SRP2[], 0
IP[], 51
IP[], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="741">
      <instructions>
        <talk>/* VTTTalk glyph 741, char 0xa3 */
/* GUI generated Sat Feb 22 14:21:32 2020 */

/* Y direction */
YAnchor(14,13)
YShift(14,0)
YShift(14,8)
YDist(8,60,&gt;=)
YAnchor(35,4)
YDist(35,48)
YIPAnchor(35,57,14)
YShift(57,26)
YDist(57,54)
YShift(54,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 741, char 0xa3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 13
SHP[1], 0
SHP[1], 8
SRP0[], 8
MDRP[m&gt;RBl], 60
MIAP[R], 35, 4
MDRP[m&gt;RBl], 48
SRP2[], 14
IP[], 57
MDAP[R], 57
SHP[1], 26
MDRP[m&gt;RBl], 54
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="742">
      <instructions>
        <talk>/* VTTTalk glyph 742, char 0xa5 */
/* GUI generated Thu Apr 16 18:46:54 2020 */

/* Y direction */
YAnchor(26,2)
YShift(26,16)
YShift(26,19)
YShift(26,29)
YLink(26,27,67)
YShift(27,28)
YAnchor(35,12)
YShift(35,23)
YLink(35,34,67)
YIPAnchor(35,0,4,26)
YDist(0,1)
YShift(4,8)
YDist(4,5)
YShift(5,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 742, char 0xa5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 26, 2
SHP[1], 16
SHP[1], 19
SHP[1], 29
MIRP[m&gt;RBl], 27, 67
SHP[2], 28
MIAP[R], 35, 12
SHP[1], 23
MIRP[m&gt;RBl], 34, 67
SRP2[], 26
IP[], 0
IP[], 4
MDAP[R], 0
MDAP[R], 4
SRP0[], 0
MDRP[m&gt;RBl], 1
SRP1[], 4
SHP[1], 8
SRP0[], 4
MDRP[m&gt;RBl], 5
SHP[2], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="743">
      <instructions>
        <talk>/* VTTTalk glyph 743, char 0xffff */
/* GUI generated Sat Feb 22 14:28:27 2020 */

/* Y direction */
YAnchor(0)
YShift(0,6)
YDist(0,17,&gt;=)
YShift(0,61)
YAnchor(30)
YShift(30,35)
YDist(30,44)
YShift(30,59)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 743, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDRP[m&gt;RGr], 17
SHP[1], 61
MDAP[R], 30
SHP[1], 35
MDRP[m&lt;RGr], 44
SHP[1], 59
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="744">
      <instructions>
        <talk>/* VTTTalk glyph 744, char 0xffff */
/* GUI generated Sat Feb 22 14:30:50 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,54)
YAnchor(29,7)
YDist(29,41)
YShift(29,56)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 744, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 54
MIAP[R], 29, 7
MDRP[m&gt;RBl], 41
SHP[1], 56
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="745">
      <instructions>
        <talk>/* VTTTalk glyph 745, char 0xffff */
/* GUI generated Sat Feb 22 14:31:48 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,54)
YAnchor(29,7)
YDist(29,41)
YShift(29,56)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 745, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 54
MIAP[R], 29, 7
MDRP[m&gt;RBl], 41
SHP[1], 56
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="746">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2215 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 746, char 0x2215 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="747">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2b (+) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(5,10,0)
YAnchor(10)
YDist(10,7) /*perpendicular to the stroke*/
YShift(10,2) /*along bottom edge*/
YShift(7,3) /*along top edge*/

Smooth()
</talk>
        <assembly>/* TT glyph 747, char 0x2b (+) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 5
IP[], 10
MDAP[R], 10
MDRP[m&gt;RBl], 7
SHP[1], 2
SHP[2], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="748">
      <instructions>
        <talk>/* VTTTalk glyph 748, char 0x2212 */
/* GUI generated Thu Feb 20 21:32:38 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 748, char 0x2212 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="749">
      <instructions>
        <talk>/* VTTTalk Unicode 0xd7 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(6)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* Extreme Max */
YShift(6,4)

/* Extreme Min */
YShift(0,10)

Smooth()

</talk>
        <assembly>/* TT glyph 749, char 0xd7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 6
SHP[1], 4
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="750">
      <instructions>
        <talk>/* VTTTalk glyph 750, char 0xf7 */
/* GUI generated Thu Feb 20 21:32:54 2020 */

/* Y direction */
YAnchor(4,18)
YAnchor(22)
YIPAnchor(22,0,4)
YLink(0,1,88)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 750, char 0xf7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 18
MDAP[R], 22
SRP2[], 4
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="751">
      <instructions>
        <talk>/* VTTTalk glyph 751, char 0x3d (=) */
/* GUI generated Sat Feb 22 16:09:54 2020 */

/* Y direction */
YAnchor(5)
YLink(5,6,88)
YDist(6,1)
YLink(1,2,88)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 751, char 0x3d (=) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 5
MIRP[M&gt;RBl], 6, 88
MDRP[M&lt;RWh], 1
MIRP[m&gt;RBl], 2, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="752">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3e (&gt;) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 752, char 0x3e (&gt;) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="753">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3c (&lt;) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(3)	/* max */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 753, char 0x3c (&lt;) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="754">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb1 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 13 18 */
/* Min and Max */
YAnchor(13,18)	/* min, CVT */
YAnchor(8)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(8,6,13)
YAnchor(6)
YDist(6,5) /*perpendicular to the stroke*/
YShift(5,1) /*along bottom edge*/
YShift(6,10) /*along top edge*/

/* YDir: Stroke #1 */
YDist(13,14) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 754, char 0xb1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 18
MDAP[R], 8
SRP2[], 13
IP[], 6
MDAP[R], 6
MDRP[m&gt;RBl], 5
SHP[2], 1
SHP[1], 10
SRP0[], 13
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="755">
      <instructions>
        <talk>/* VTTTalk glyph 755, char 0x7e (~) */
/* GUI generated Thu Feb 20 21:34:10 2020 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YNoRound(16)
YDist(0,16)
YShift(16,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 755, char 0x7e (~) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDRP[m&lt;rBl], 16
SHP[2], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="756">
      <instructions>
        <talk>/* VTTTalk Unicode 0xac */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 18 */
/* Min and Max */
YAnchor(5,18)	/* min, CVT */
YAnchor(3)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(3,2) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 756, char 0xac */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 18
MDAP[R], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="757">
      <instructions>
        <talk>/* VTTTalk glyph 757, char 0x5e (^) */
/* GUI generated Thu Feb 20 21:34:32 2020 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(1)
YShift(1,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 757, char 0x5e (^) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 1
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="758">
      <instructions>
        <talk>/* VTTTalk glyph 758, char 0xb5 */
/* GUI generated Thu Feb 20 21:35:42 2020 */

/* Y direction */
YAnchor(0)
YAnchor(19)
YDist(19,13)
YShift(19,40)
YAnchor(54)
YDist(54,48)
YShift(54,68)
YDist(68,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 758, char 0xb5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 19
MDRP[m&gt;RBl], 13
SHP[1], 40
MDAP[R], 54
MDRP[m&gt;RBl], 48
SHP[1], 68
SRP0[], 68
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="759">
      <instructions>
        <talk>/* VTTTalk glyph 759, char 0x25 (%) */
/* GUI generated Sat Feb 22 16:58:58 2020 */

/* Y direction */
YAnchor(28)
YAnchor(30)
YIPAnchor(30,51,11,60,28)
YInterpolate(60,20,28)
YDist(51,69)
YDist(11,31)
YDist(60,78)
YDist(20,42)
YShift(20,26)
YAnchor(26)
YDist(26,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 759, char 0x25 (%) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 28
MDAP[R], 30
SRP2[], 28
SLOOP[], 3
IP[], 51, 11, 60
MDAP[R], 51
MDAP[R], 11
MDAP[R], 60
IP[], 20
SRP0[], 51
MDRP[m&gt;RBl], 69
SRP0[], 11
MDRP[m&gt;RBl], 31
SRP0[], 60
MDRP[m&gt;RBl], 78
SRP0[], 20
MDRP[m&gt;RBl], 42
SHP[1], 26
MDAP[R], 26
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="760">
      <instructions>
        <talk>/* VTTTalk glyph 760, char 0x2234 */
/* GUI generated Sat Feb 22 16:59:42 2020 */

/* Y direction */
YAnchor(0)
YShift(0,12)
YDist(0,6)
YShift(6,18)
YDist(6,24)
YDist(24,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 760, char 0x2234 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
MDRP[M&gt;RBl], 6
SHP[2], 18
MDRP[M&lt;RWh], 24
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="761">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25cc */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 12 18  DISABLED for a NON-LATIN glyph */
/* CVT 24 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(24)	/* min */
YAnchor(174)	/* max */

/* Contour #0 */
YShift(174,6) /* max */
YShift(24,0) /* min */

/* Contour #1 */
YShift(174,18) /* max */
YShift(24,12) /* min */

/* Contour #3 */
YShift(174,42) /* max */
YShift(24,36) /* min */

/* Contour #4 */
YShift(174,54) /* max */
YShift(24,48) /* min */

/* Contour #5 */
YShift(174,66) /* max */
YShift(24,60) /* min */

/* Contour #6 */
YShift(174,78) /* max */
YShift(24,72) /* min */

/* Contour #7 */
YShift(174,90) /* max */
YShift(24,84) /* min */

/* Contour #8 */
YShift(174,102) /* max */
YShift(24,96) /* min */

/* Contour #9 */
YShift(174,114) /* max */
YShift(24,108) /* min */

/* Contour #10 */
YShift(174,126) /* max */
YShift(24,120) /* min */

/* Contour #11 */
YShift(174,138) /* max */
YShift(24,132) /* min */

/* Contour #12 */
YShift(174,150) /* max */
YShift(24,144) /* min */

/* Contour #13 */
YShift(174,162) /* max */
YShift(24,156) /* min */

/* Contour #15 */
YShift(174,186) /* max */
YShift(24,180) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 761, char 0x25cc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 24
MDAP[R], 174
SHP[1], 6
SRP1[], 24
SHP[1], 0
SRP1[], 174
SHP[1], 18
SRP1[], 24
SHP[1], 12
SRP1[], 174
SHP[1], 42
SRP1[], 24
SHP[1], 36
SRP1[], 174
SHP[1], 54
SRP1[], 24
SHP[1], 48
SRP1[], 174
SHP[1], 66
SRP1[], 24
SHP[1], 60
SRP1[], 174
SHP[1], 78
SRP1[], 24
SHP[1], 72
SRP1[], 174
SHP[1], 90
SRP1[], 24
SHP[1], 84
SRP1[], 174
SHP[1], 102
SRP1[], 24
SHP[1], 96
SRP1[], 174
SHP[1], 114
SRP1[], 24
SHP[1], 108
SRP1[], 174
SHP[1], 126
SRP1[], 24
SHP[1], 120
SRP1[], 174
SHP[1], 138
SRP1[], 24
SHP[1], 132
SRP1[], 174
SHP[1], 150
SRP1[], 24
SHP[1], 144
SRP1[], 174
SHP[1], 162
SRP1[], 24
SHP[1], 156
SRP1[], 174
SHP[1], 186
SRP1[], 24
SHP[1], 180
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="762">
      <instructions>
        <talk>/* VTTTalk glyph 762, char 0x40 (@) */
/* GUI generated Sat Feb 22 17:00:24 2020 */

/* Y direction */
YAnchor(0,19)
YDist(0,70)
YAnchor(10)
YDist(10,60)
YIPAnchor(10,40,31,0)
YDist(40,86)
YDist(31,76)
YShift(31,20)
YAnchor(20)
YDist(20,51)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 762, char 0x40 (@) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[m&gt;RBl], 70
MDAP[R], 10
MDRP[m&gt;RBl], 60
SRP2[], 0
IP[], 40
IP[], 31
MDAP[R], 40
MDAP[R], 31
SRP0[], 40
MDRP[m&gt;RBl], 86
SRP0[], 31
MDRP[m&gt;RBl], 76
SHP[1], 20
MDAP[R], 20
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="763">
      <instructions>
        <talk>/* VTTTalk glyph 763, char 0x26 (&amp;) */
/* GUI generated Sat Feb 22 17:04:14 2020 */

/* Y direction */
YAnchor(0)
YDist(0,54)
YAnchor(14)
YDist(14,22)
YDist(14,28)
YDist(28,38)
YDist(38,132)
YDist(132,126)
YDist(126,44)
YAnchor(89)
YDist(89,62)
YDist(62,74)
YDist(74,81)
YShift(89,94)
YAnchor(94)
YDist(94,115)
YShift(89,100)
YAnchor(100)
YDist(100,109)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 763, char 0x26 (&amp;) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 54
MDAP[R], 14
MDRP[m&gt;RBl], 22
MDRP[M&gt;RBl], 28
MDRP[M&lt;RWh], 38
MDRP[M&gt;RBl], 132
MDRP[M&lt;RWh], 126
MDRP[m&gt;RBl], 44
MDAP[R], 89
MDRP[M&gt;RBl], 62
MDRP[M&lt;RWh], 74
MDRP[m&gt;RBl], 81
SRP1[], 89
SHP[1], 94
MDAP[R], 94
MDRP[m&gt;RBl], 115
SRP1[], 89
SHP[1], 100
MDAP[R], 100
MDRP[m&gt;RBl], 109
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="764">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb6 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(9)	/* max */

/* YDir: Stroke #0 */
YDist(9,23) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,16)

Smooth()


</talk>
        <assembly>/* TT glyph 764, char 0xb6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 9
MDRP[m&gt;RBl], 23
SRP1[], 0
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="765">
      <instructions>
        <talk>/* VTTTalk glyph 765, char 0xa7 */
/* GUI generated Thu Feb 20 21:42:31 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,11)
YShift(0,61)
YAnchor(30)
YDist(30,42)
YShift(30,77)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 765, char 0xa7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 11
SHP[1], 61
MDAP[R], 30
MDRP[m&gt;RBl], 42
SHP[1], 77
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="766">
      <instructions>
        <talk>/* VTTTalk glyph 766, char 0xa9 */
/* GUI generated Sat Feb 22 17:05:23 2020 */

/* Y direction */
YAnchor(0)
YDist(0,63)
YAnchor(10)
YDist(10,73)
YIPAnchor(10,20,0)
YInterpolate(10,28,20)
YDist(28,41)
YDist(20,49)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 766, char 0xa9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 63
MDAP[R], 10
MDRP[m&gt;RBl], 73
SRP2[], 0
IP[], 20
MDAP[R], 20
SRP2[], 10
IP[], 28
SRP0[], 28
MDRP[m&gt;RBl], 41
SRP0[], 20
MDRP[m&gt;RBl], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="767">
      <instructions>
        <talk>/* VTTTalk glyph 767, char 0xae */
/* GUI generated Thu Feb 20 21:45:09 2020 */

/* Y direction */
YAnchor(0)
YDist(0,20)
YAnchor(10)
YDist(10,30)
YIPAnchor(10,59,51,76,0)
YDist(59,58)
YShift(59,81)
YDist(51,66)
YShift(66,47)
YDist(76,77)
YShift(76,80)
YShift(76,40)
YDist(40,74)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 767, char 0xae */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 20
MDAP[R], 10
MDRP[m&gt;RBl], 30
SRP2[], 0
SLOOP[], 3
IP[], 59, 51, 76
MDAP[R], 59
MDAP[R], 51
MDAP[R], 76
SRP0[], 59
MDRP[m&gt;RBl], 58
SHP[1], 81
SRP0[], 51
MDRP[m&gt;RBl], 66
SHP[2], 47
SRP0[], 76
MDRP[m&gt;RBl], 77
SHP[1], 80
SHP[1], 40
SRP0[], 40
MDRP[m&gt;RBl], 74
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="768">
      <instructions>
        <talk>/* VTTTalk glyph 768, char 0x2122 */
/* GUI generated Sat Feb 22 17:06:59 2020 */

/* Y direction */
YAnchor(2)
YShift(2,9)
YShift(2,20)
YShift(2,28)
YShift(2,35)
YShift(2,38)
YShift(2,49)
YShift(2,52)
YShift(2,55)
YShift(2,60)
YDist(2,3)
YShift(3,10)
YShift(3,19)
YShift(3,37)
YShift(3,50)
YAnchor(65)
YShift(65,29)
YShift(65,33)
YShift(65,57)
YShift(65,58)
YShift(65,66)
YShift(65,34)
YShift(34,43)
YDist(65,64)
YShift(64,32)
YShift(64,67)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 768, char 0x2122 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 9
SHP[1], 20
SHP[1], 28
SHP[1], 35
SHP[1], 38
SHP[1], 49
SHP[1], 52
SHP[1], 55
SHP[1], 60
MDRP[m&gt;RBl], 3
SHP[2], 10
SHP[2], 19
SHP[2], 37
SHP[2], 50
MDAP[R], 65
SHP[1], 29
SHP[1], 33
SHP[1], 57
SHP[1], 58
SHP[1], 66
SHP[1], 34
SRP1[], 34
SHP[1], 43
MDRP[m&gt;RBl], 64
SHP[2], 32
SHP[2], 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="769">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb0 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,22) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 769, char 0xb0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 22
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="770">
      <instructions>
        <talk>/* VTTTalk Unicode 0x7c (|) */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 770, char 0x7c (|) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="771">
      <instructions>
        <talk>/* VTTTalk glyph 771, char 0xa6 */
/* GUI generated Sat Feb 22 17:08:26 2020 */

/* Y direction */
YAnchor(3,18)
YDist(3,1)
YDist(1,7)
YDist(7,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 771, char 0xa6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 3, 18
MDRP[M&gt;RBl], 1
MDRP[M&lt;RWh], 7
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="772">
      <instructions>
        <talk>/* VTTTalk glyph 772, char 0x2020 */
/* GUI generated Sat Feb 22 17:10:40 2020 */

/* Y direction */
YAnchor(0)
YAnchor(50)
YInterpolate(50,62,0)
YShift(62,35)
YDist(62,86)
YShift(86,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 772, char 0x2020 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 50
IP[], 62
SRP1[], 62
SHP[1], 35
SRP0[], 62
MDRP[m&gt;RBl], 86
SHP[2], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="773">
      <instructions>
        <talk>/* VTTTalk glyph 773, char 0x2021 */
/* GUI generated Sat Feb 22 17:09:58 2020 */

/* Y direction */
YAnchor(0)
YAnchor(17,18)
YAnchor(84)
YInterpolate(0,154,69,84)
YShift(154,11)
YDist(154,131)
YShift(131,34)
YShift(69,97)
YDist(69,45)
YShift(45,121)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 773, char 0x2021 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 17, 18
MDAP[R], 84
IP[], 154
IP[], 69
SRP1[], 154
SHP[1], 11
SRP0[], 154
MDRP[m&gt;RBl], 131
SHP[2], 34
SRP1[], 69
SHP[1], 97
SRP0[], 69
MDRP[m&gt;RBl], 45
SHP[2], 121
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="774">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2de */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YDist(0,18) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 774, char 0x2de */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
SRP0[], 0
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="775">
      <instructions>
        <talk>/* VTTTalk glyph 775, char 0x2e5 */
/* GUI generated Sat Feb 22 17:12:06 2020 */

/* Y direction */
YAnchor(0,18)
YAnchor(5)
YShift(5,1)
YDist(5,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 775, char 0x2e5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 5
SHP[1], 1
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="776">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e6 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 17  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,18)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,5,0)
YAnchor(5)
YDist(5,4) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 776, char 0x2e6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 1
IP[], 5
MDAP[R], 5
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="777">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e7 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,18)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,4,0)
YAnchor(4)
YDist(4,5) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 777, char 0x2e7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="778">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e8 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,18)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,4,0)
YAnchor(4)
YDist(4,5) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 778, char 0x2e8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="779">
      <instructions>
        <talk>/* VTTTalk glyph 779, char 0x2e9 */
/* GUI generated Sat Feb 22 17:14:31 2020 */

/* Y direction */
YAnchor(1)
YAnchor(4,18)
YShift(4,0)
YDist(4,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 779, char 0x2e9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 4, 18
SHP[1], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="780">
      <instructions>
        <talk>/* VTTTalk glyph 780, char 0xffff */
/* GUI generated Sat Feb 22 17:40:23 2020 */

/* Y direction */
YAnchor(0)
YAnchor(13)
YDist(13,26)
YInterpolate(0,41,35,13)
YDist(41,117)
YDist(35,123)
YAnchor(101)
YDist(101,92)
YInterpolate(0,75,107,82,101)
YDist(75,64)
YDist(107,86)
YDist(82,58)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 780, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 26
SRP2[], 0
IP[], 41
IP[], 35
SRP0[], 41
MDRP[m&gt;RBl], 117
SRP0[], 35
MDRP[m&gt;RBl], 123
MDAP[R], 101
MDRP[m&gt;RBl], 92
SRP2[], 0
SLOOP[], 3
IP[], 75, 107, 82
SRP0[], 75
MDRP[m&gt;RBl], 64
SRP0[], 107
MDRP[m&gt;RBl], 86
SRP0[], 82
MDRP[m&gt;RBl], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="781">
      <instructions>
        <talk>/* VTTTalk glyph 781, char 0xffff */
/* GUI generated Sat Feb 22 17:41:27 2020 */

/* Y direction */
YAnchor(0)
YAnchor(29)
YIPAnchor(29,59,12,51,0)
YInterpolate(29,20,59)
YDist(20,43)
YShift(20,26)
YAnchor(26)
YDist(26,4)
YDist(59,75)
YDist(12,32)
YDist(51,67)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 781, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 29
SLOOP[], 3
IP[], 59, 12, 51
MDAP[R], 59
MDAP[R], 12
MDAP[R], 51
SRP1[], 29
SRP2[], 59
IP[], 20
SRP0[], 20
MDRP[m&gt;RBl], 43
SHP[1], 26
MDAP[R], 26
MDRP[m&gt;RBl], 4
SRP0[], 59
MDRP[m&gt;RBl], 75
SRP0[], 12
MDRP[m&gt;RBl], 32
SRP0[], 51
MDRP[m&gt;RBl], 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="782">
      <instructions>
        <talk>/* VTTTalk glyph 782, char 0x2e0 */
/* GUI generated Sat Feb 22 17:43:05 2020 */

/* Y direction */
YAnchor(0)
YDist(0,20)
YAnchor(34)
YShift(34,9)
YShift(34,12)
YShift(34,38)
YInterpolate(0,27,7,13,10,34)
YDist(34,33)
YShift(33,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 782, char 0x2e0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 20
MDAP[R], 34
SHP[1], 9
SHP[1], 12
SHP[1], 38
SRP2[], 0
SLOOP[], 4
IP[], 27, 7, 13, 10
MDRP[m&gt;RBl], 33
SHP[2], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="783">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 697, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="784">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 696, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="785">
      <instructions>
        <talk>/* VTTTalk glyph 785, char 0x2c1 */
/* GUI generated Sat Feb 22 17:49:27 2020 */

/* Y direction */
YAnchor(9)
YDist(9,28)
YAnchor(39)
YShift(39,0)
YDist(39,40)
YInterpolate(9,2,39)
YDist(2,36)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 785, char 0x2c1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RBl], 28
MDAP[R], 39
SHP[1], 0
MDRP[m&gt;RBl], 40
SRP2[], 9
IP[], 2
SRP0[], 2
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="786">
      <instructions>
        <talk>/* VTTTalk glyph 786, char 0x2c8 */
/* GUI generated Sat Feb 22 17:50:07 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 786, char 0x2c8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="787">
      <instructions>
        <talk>/* VTTTalk glyph 787, char 0x2cc */
/* GUI generated Sat Feb 22 17:50:23 2020 */

/* Y direction */
YAnchor(1)
YDist(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 787, char 0x2cc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="788">
      <instructions>
        <talk>/* VTTTalk glyph 788, char 0x2d0 */
/* GUI generated Sat Feb 22 17:51:03 2020 */

/* Y direction */
YAnchor(2)
YAnchor(4)
YInterpolate(4,5,3,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 788, char 0x2d0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 4
SRP2[], 2
IP[], 5
IP[], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="789">
      <instructions>
        <talk>/* VTTTalk glyph 789, char 0x2d1 */
/* GUI generated Sat Feb 22 17:51:39 2020 */

/* Y direction */
YAnchor(1)
YDist(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 789, char 0x2d1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="790">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 836, -774, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="791">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 837, -616, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="792">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 838, -743, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="793">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 839, -595, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="794">
      <instructions>
        <talk>/* VTTTalk glyph 794, char 0x30b */
/* GUI generated Sat Feb 22 17:52:12 2020 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,2)
YShift(2,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 794, char 0x30b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDRP[m&gt;RBl], 2
SHP[2], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="795">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 854, -577, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="796">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 840, -781, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="797">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 841, -630, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="798">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 842, -831, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="799">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 843, -724, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="800">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 844, -895, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="801">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 845, -751, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="802">
      <instructions>
        <talk>/* VTTTalk glyph 802, char 0x305 */
/* GUI generated Thu Feb 20 19:23:59 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 802, char 0x305 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="803">
      <instructions>
        <talk>/* VTTTalk glyph 803, char 0x312 */
/* GUI generated Sat Feb 22 17:53:03 2020 */

/* Y direction */
YAnchor(0)
YAnchor(9)
YInterpolate(0,15,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 803, char 0x312 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 9
IP[], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="804">
      <instructions>
        <talk>/* VTTTalk glyph 804, char 0x315 */
/* GUI generated Sat Feb 22 17:53:38 2020 */

/* Y direction */
YAnchor(0)
YAnchor(11)
YInterpolate(0,5,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 804, char 0x315 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
IP[], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="805">
      <instructions>
        <talk>/* VTTTalk glyph 805, char 0x318 */
/* GUI generated Sat Feb 22 17:55:05 2020 */

/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,5)
YShift(5,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 805, char 0x318 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="806">
      <instructions>
        <talk>/* VTTTalk glyph 806, char 0x319 */
/* GUI generated Sat Feb 22 17:54:42 2020 */

/* Y direction */
YAnchor(4)
YShift(4,3)
YDist(4,5)
YShift(5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 806, char 0x319 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 3
MDRP[m&gt;RBl], 5
SHP[2], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="807">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31a */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* YDir: Stroke #0 */
YDist(3,2) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 807, char 0x31a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="808">
      <instructions>
        <talk>/* VTTTalk glyph 808, char 0x31c */
/* GUI generated Sat Feb 22 17:56:27 2020 */

/* Y direction */
YAnchor(0)
YDist(0,15)
YAnchor(8)
YDist(8,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 808, char 0x31c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 15
MDAP[R], 8
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="809">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31d */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,0,4)
YAnchor(0)

/* YDir: Stroke #1 */
YDist(4,5) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 809, char 0x31d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SRP2[], 4
IP[], 0
MDAP[R], 0
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="810">
      <instructions>
        <talk>/* VTTTalk glyph 810, char 0x31e */
/* GUI generated Sat Feb 22 17:57:28 2020 */

/* Y direction */
YAnchor(5)
YShift(5,1)
YDist(5,4)
YDist(4,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 810, char 0x31e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 1
MDRP[M&gt;RBl], 4
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="811">
      <instructions>
        <talk>/* VTTTalk glyph 811, char 0x31f */
/* GUI generated Sat Feb 22 17:57:45 2020 */

/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,5)
YShift(5,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 811, char 0x31f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="812">
      <instructions>
        <talk>/* VTTTalk glyph 812, char 0x320 */
/* GUI generated Sat Feb 22 17:59:09 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88,&gt;=)
YDist(1,5)
YShift(5,11)
YDist(0,4)
YShift(4,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 812, char 0x320 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[M&gt;RBl], 1, 88
MDRP[m&lt;RBl], 5
SHP[2], 11
SRP0[], 0
MDRP[m&lt;RBl], 4
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="813">
      <instructions>
        <talk>/* VTTTalk glyph 813, char 0x323 */
/* GUI generated Sat Feb 22 17:59:42 2020 */

/* Y direction */
YAnchor(6)
YDist(6,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 813, char 0x323 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="814">
      <instructions>
        <talk>/* VTTTalk glyph 814, char 0x324 */
/* GUI generated Sat Feb 22 18:00:08 2020 */

/* Y direction */
YAnchor(21)
YShift(21,7)
YDist(21,14)
YShift(14,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 814, char 0x324 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 21
SHP[1], 7
MDRP[m&gt;RBl], 14
SHP[2], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="815">
      <instructions>
        <talk>/* VTTTalk Unicode 0x325 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,21) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,15) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 815, char 0x325 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="816">
      <instructions>
        <talk>/* VTTTalk glyph 816, char 0x326 */
/* GUI generated Sat Feb 22 18:00:29 2020 */

/* Y direction */
YAnchor(0)
YAnchor(12)
YInterpolate(0,6,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 816, char 0x326 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
IP[], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="817">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 846, -782, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="818">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 847, -625, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="819">
      <instructions>
        <talk>/* VTTTalk glyph 819, char 0x329 */
/* GUI generated Sat Feb 22 18:01:01 2020 */

/* Y direction */
YAnchor(1)
YDist(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 819, char 0x329 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="820">
      <instructions>
        <talk>/* VTTTalk glyph 820, char 0x32a */
/* GUI generated Sat Feb 22 18:01:12 2020 */

/* Y direction */
YAnchor(1)
YDist(1,6)
YDist(6,0)
YShift(0,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 820, char 0x32a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[M&gt;RBl], 6
MDRP[m&gt;RBl], 0
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="821">
      <instructions>
        <talk>/* VTTTalk glyph 821, char 0x32c */
/* GUI generated Sat Feb 22 18:01:45 2020 */

/* Y direction */
YAnchor(0)
YDist(0,5)
YShift(5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 821, char 0x32c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
SHP[2], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="822">
      <instructions>
        <talk>/* VTTTalk glyph 822, char 0x32f */
/* GUI generated Sat Feb 22 18:17:19 2020 */

/* Y direction */
YAnchor(2)
YDist(2,9,&gt;=)
YDist(9,0,&gt;=)
YShift(0,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 822, char 0x32f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 2
MDRP[M&gt;RBl], 9
MDRP[m&gt;RGr], 0
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="823">
      <instructions>
        <talk>/* VTTTalk glyph 823, char 0x330 */
/* GUI generated Sat Apr 25 07:42:24 2020 */

/* Y direction */
YAnchor(0)
YShift(0,13)
YDist(0,4,&gt;=)
YShift(4,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 823, char 0x330 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 13
MDRP[m&gt;RGr], 4
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="824">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 844, -280, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="825">
      <instructions>
        <talk>/* VTTTalk glyph 825, char 0x335 */
/* GUI generated Thu Feb 20 21:49:50 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 825, char 0x335 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="826">
      <instructions>
        <talk>/* VTTTalk Unicode 0x337 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 826, char 0x337 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="827">
      <instructions>
        <talk>/* VTTTalk Unicode 0x338 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 827, char 0x338 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="828">
      <instructions>
        <talk>/* VTTTalk glyph 828, char 0x339 */
/* GUI generated Sat Feb 22 18:20:07 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)
YAnchor(8)
YDist(8,7,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 828, char 0x339 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 8
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="829">
      <instructions>
        <talk>/* VTTTalk glyph 829, char 0x33a */
/* GUI generated Sat Feb 22 18:20:16 2020 */

/* Y direction */
YAnchor(0)
YDist(0,3)
YDist(3,1,&gt;=)
YShift(1,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 829, char 0x33a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 3
MDRP[m&gt;RBl], 1
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="830">
      <instructions>
        <talk>/* VTTTalk glyph 830, char 0x33b */
/* GUI generated Sat Feb 22 18:20:45 2020 */

/* Y direction */
YAnchor(1)
YDist(1,7)
YDist(7,4,&gt;=)
YDist(4,0,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 830, char 0x33b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[M&gt;RBl], 7
MDRP[M&gt;RWh], 4
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="831">
      <instructions>
        <talk>/* VTTTalk glyph 831, char 0x33c */
/* GUI generated Sat Feb 22 18:21:37 2020 */

/* Y direction */
YAnchor(4)
YShift(4,10)
YDist(4,24)
YShift(24,17)
YDist(24,0)
YShift(0,14)
YShift(0,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 831, char 0x33c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 10
MDRP[M&gt;RBl], 24
SHP[2], 17
MDRP[m&lt;RGr], 0
SHP[2], 14
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="832">
      <instructions>
        <talk>/* VTTTalk Unicode 0x33d */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,6) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 832, char 0x33d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="833">
      <instructions>
        <talk>/* VTTTalk Unicode 0x35b */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,3,0)
YAnchor(3)
YDist(3,7) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 833, char 0x35b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IP[], 3
MDAP[R], 3
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="834">
      <instructions>
        <talk>/* VTTTalk Unicode 0x35c */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(0,8) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,11)

Smooth()


</talk>
        <assembly>/* TT glyph 834, char 0x35c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SRP0[], 0
MDRP[m&gt;RBl], 8
SRP1[], 5
SHP[1], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="835">
      <instructions>
        <talk>/* VTTTalk Unicode 0x361 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()


</talk>
        <assembly>/* TT glyph 835, char 0x361 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="836">
      <instructions>
        <talk>/* VTTTalk glyph 836, char 0xa8 */
/* GUI generated Fri Feb 21 14:35:21 2020 */

/* Y direction */
YAnchor(14,89)
YShift(14,0)
YDist(14,21)
YShift(21,7)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 836, char 0xa8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 89
SHP[1], 0
MDRP[m&gt;RBl], 21
SHP[2], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="837">
      <instructions>
        <talk>/* VTTTalk glyph 837, char 0x2d9 */
/* GUI generated Fri Feb 21 14:25:05 2020 */

/* Y direction */
YAnchor(0,89)
YDist(0,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 837, char 0x2d9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 89
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="838">
      <instructions>
        <talk>/* VTTTalk glyph 838, char 0x60 (`) */
/* GUI generated Sat Feb 22 18:22:54 2020 */

/* Y direction */
YAnchor(0)
YDist(0,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 838, char 0x60 (`) */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="839">
      <instructions>
        <talk>/* VTTTalk glyph 839, char 0xb4 */
/* GUI generated Sat Feb 22 18:23:01 2020 */

/* Y direction */
YAnchor(0)
YDist(0,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 839, char 0xb4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="840">
      <instructions>
        <talk>/* VTTTalk glyph 840, char 0x2c6 */
/* GUI generated Sat Feb 22 18:23:16 2020 */

/* Y direction */
YAnchor(0)
YShift(0,5)
YDist(0,2)
YShift(2,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 840, char 0x2c6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 5
MDRP[m&gt;RBl], 2
SHP[2], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="841">
      <instructions>
        <talk>/* VTTTalk glyph 841, char 0x2c7 */
/* GUI generated Sat Feb 22 18:23:50 2020 */

/* Y direction */
YAnchor(0)
YShift(0,3)
YDist(0,2)
YShift(2,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 841, char 0x2c7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
MDRP[m&gt;RBl], 2
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="842">
      <instructions>
        <talk>/* VTTTalk glyph 842, char 0x2d8 */
/* GUI generated Fri Feb 21 14:52:05 2020 */

/* Y direction */
YAnchor(0,89)
YDist(0,10,&gt;=)
YDist(10,7,&gt;=)
YShift(7,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 842, char 0x2d8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 89
MDRP[M&gt;RBl], 10
MDRP[m&gt;RWh], 7
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="843">
      <instructions>
        <talk>/* VTTTalk glyph 843, char 0x2da */
/* GUI generated Sat Feb 22 18:24:12 2020 */

/* Y direction */
YAnchor(0,16)
YDist(0,15)
YDelta(15,-1@44..45)
YDist(15,22)

YDist(22,7)


/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 843, char 0x2da */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 16
MDRP[M&gt;RBl], 15
DLTP3[(15 @3 -8)(15 @4 -8)]
MDRP[M&lt;RWh], 22
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="844">
      <instructions>
        <talk>/* VTTTalk glyph 844, char 0x2dc */
/* GUI generated Sat Apr 25 07:41:31 2020 */

/* Y direction */
YAnchor(0)
YShift(0,13)
YDist(0,4,&gt;=)
YShift(4,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 844, char 0x2dc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 13
MDRP[m&gt;RGr], 4
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="845">
      <instructions>
        <talk>/* VTTTalk glyph 845, char 0xaf */
/* GUI generated Thu Feb 20 18:23:09 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 845, char 0xaf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="846">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb8 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 20 18 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20,18)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 846, char 0xb8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 20, 18
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="847">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2db */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 18 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6,18)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 847, char 0x2db */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 6, 18
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="848">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1dce */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(13)	/* max */

/* YDir: Stroke #0 */
YDist(13,6) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 848, char 0x1dce */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="849">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 849, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="850">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 844, -397, -290

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="851">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1dcf */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,3,0)
YAnchor(3)
YDist(3,7) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 851, char 0x1dcf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IP[], 3
MDAP[R], 3
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="852">
      <instructions>
        <talk>/* VTTTalk glyph 852, char 0x1dd1 */
/* GUI generated Sat Feb 22 18:33:37 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YDist(0,24)
YAnchor(39)
YIPAnchor(39,16,0)
YDist(16,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 852, char 0x1dd1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDRP[m&gt;RBl], 24
MDAP[R], 39
SRP2[], 0
IP[], 16
MDAP[R], 16
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="853">
      <instructions>
        <talk>/* VTTTalk glyph 853, char 0x1dd2 */
/* GUI generated Sat Feb 22 18:35:44 2020 */

/* Y direction */
YAnchor(0)
YAnchor(25)
YDist(25,8)
YInterpolate(0,18,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 853, char 0x1dd2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 25
MDRP[m&gt;RBl], 8
SRP2[], 0
IP[], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="854">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 854, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="855">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 869, -826, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="856">
      <instructions>
        <talk>/* VTTTalk glyph 856, char 0xffff */
/* GUI generated Mon Mar  2 05:43:07 2020 */

/* Y direction */
YAnchor(0)
YDist(0,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 856, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="857">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 870, -786, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="858">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 871, -757, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="859">
      <instructions>
        <talk>/* VTTTalk glyph 859, char 0xffff */
/* GUI generated Sat Feb 22 18:36:04 2020 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,2)
YShift(2,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 859, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDRP[m&gt;RBl], 2
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="860">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 872, -789, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="861">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 873, -773, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="862">
      <instructions>
        <talk>/* VTTTalk glyph 862, char 0xffff */
/* GUI generated Sat Feb 22 18:36:31 2020 */

/* Y direction */
YAnchor(0)
YDist(0,10)
YDist(10,6,&gt;=)
YShift(6,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 862, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 10
MDRP[m&gt;RGr], 6
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="863">
      <instructions>
        <talk>/* VTTTalk glyph 863, char 0xffff */
/* GUI generated Sat Feb 22 18:37:01 2020 */

/* Y direction */
YAnchor(0)
YDist(0,15)
YDist(15,22,&gt;=)
YDist(22,7,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 863, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 15
MDRP[M&gt;RWh], 22
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="864">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 874, -819, -28
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="865">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 875, -840, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="866">
      <instructions>
        <talk>/* VTTTalk glyph 866, char 0xffff */
/* GUI generated Thu Feb 20 19:21:15 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 866, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="867">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 867, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="868">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 868, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="869">
      <instructions>
        <talk>/* VTTTalk glyph 869, char 0xffff */
/* GUI generated Sat Feb 22 18:42:33 2020 */

/* Y direction */
YAnchor(14)
YShift(14,0)
YDist(14,21,&gt;=)
YShift(21,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 869, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 14
SHP[1], 0
MDRP[m&gt;RBl], 21
SHP[2], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="870">
      <instructions>
        <talk>/* VTTTalk glyph 870, char 0xffff */
/* GUI generated Sat Feb 22 18:43:16 2020 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 870, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="871">
      <instructions>
        <talk>/* VTTTalk glyph 871, char 0xffff */
/* GUI generated Sat Feb 22 18:43:26 2020 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 871, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="872">
      <instructions>
        <talk>/* VTTTalk glyph 872, char 0xffff */
/* GUI generated Sat Feb 22 18:43:37 2020 */

/* Y direction */
YAnchor(4)
YShift(4,1)
YDist(4,6,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 872, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 1
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="873">
      <instructions>
        <talk>/* VTTTalk glyph 873, char 0xffff */
/* GUI generated Sat Feb 22 18:46:34 2020 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)
YShift(2,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 873, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="874">
      <instructions>
        <talk>/* VTTTalk glyph 874, char 0xffff */
/* GUI generated Sat Feb 22 18:46:57 2020 */

/* Y direction */
YAnchor(14)
YShift(14,20)
YDist(14,7,&gt;=)
YShift(7,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 874, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 14
SHP[1], 20
MDRP[m&gt;RBl], 7
SHP[2], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="875">
      <instructions>
        <talk>/* VTTTalk glyph 875, char 0xffff */
/* GUI generated Thu Feb 20 18:23:26 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 875, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="876">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(12)	/* max */

/* YDir: Stroke #0 */
YDist(12,6) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 876, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="877">
      <instructions>
        <talk>/* VTTTalk glyph 877, char 0xffff */
/* GUI generated Thu Feb 20 21:50:36 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 877, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="878">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()

</talk>
        <assembly>/* TT glyph 878, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="879">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(0,8) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,11)

Smooth()

</talk>
        <assembly>/* TT glyph 879, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SRP0[], 0
MDRP[m&gt;RBl], 8
SRP1[], 5
SHP[1], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="880">
      <instructions>
        <talk>/* VTTTalk glyph 880, char 0xffff */
/* GUI generated Sat Feb 22 18:48:03 2020 */

/* Y direction */
YAnchor(0)
YRound(0,1)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 880, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="881">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 9 17  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()


</talk>
        <assembly>/* TT glyph 881, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="882">
      <instructions>
        <talk>/* VTTTalk glyph 882, char 0xffff */
/* GUI generated Thu Feb 20 19:20:59 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 882, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="883">
      <instructions>
        <talk>/* VTTTalk glyph 883, char 0xffff */
/* GUI generated Thu Feb 20 19:20:42 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 883, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="884">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 884, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="885">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 885, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="886">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 886, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="887">
      <instructions>
        <talk>/* VTTTalk glyph 887, char 0x1dd5 */
/* GUI generated Sun Feb 23 14:28:14 2020 */

/* Y direction */
YAnchor(0)
YDist(0,21,&gt;=)
YShift(0,34)
YShift(34,33)
YDist(34,48,&gt;=)
YAnchor(7)
YDist(7,14,&gt;=)
YShift(7,31)
YShift(7,40)
YDist(40,56,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 887, char 0x1dd5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 21
SHP[1], 34
SRP1[], 34
SHP[1], 33
SRP0[], 34
MDRP[m&gt;RBl], 48
MDAP[R], 7
MDRP[m&gt;RBl], 14
SHP[1], 31
SHP[1], 40
SRP0[], 40
MDRP[m&gt;RBl], 56
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="888">
      <instructions>
        <talk>/* VTTTalk glyph 888, char 0x1dd6 */
/* GUI generated Sat Feb 22 18:52:28 2020 */

/* Y direction */
YAnchor(0)
YDist(0,22)
YShift(0,31)
YDist(31,45)
YAnchor(7)
YDist(7,15)
YShift(7,38)
YShift(7,56)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 888, char 0x1dd6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 22
SHP[1], 31
SRP0[], 31
MDRP[m&gt;RBl], 45
MDAP[R], 7
MDRP[m&gt;RBl], 15
SHP[1], 38
SHP[1], 56
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="889">
      <instructions>
        <talk>/* VTTTalk glyph 889, char 0x1dd7 */
/* GUI generated Sat Feb 22 18:56:40 2020 */

/* Y direction */
YAnchor(0)
YDist(0,23)
YShift(0,51)
YAnchor(51)
YDist(51,49)
YDist(49,36)
YDist(36,30)
YAnchor(7)
YDist(7,17)
YShift(17,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 889, char 0x1dd7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&lt;RGr], 23
SHP[1], 51
MDAP[R], 51
MDRP[M&lt;RGr], 49
MDRP[M&lt;RWh], 36
MDRP[m&gt;RBl], 30
MDAP[R], 7
MDRP[m&gt;RBl], 17
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="890">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1dd9 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(28)	/* max */

/* YDir: Stroke #0 */
YInterpolate(28,7,0)
YAnchor(7)
YDist(7,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,20) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(28,37) /* max */
YShift(7,35) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 890, char 0x1dd9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 28
IP[], 7
MDAP[R], 7
MDRP[m&gt;RBl], 13
SRP0[], 0
MDRP[m&gt;RBl], 20
SRP1[], 28
SHP[1], 37
SRP1[], 7
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="891">
      <instructions>
        <talk>/* VTTTalk glyph 891, char 0x363 */
/* GUI generated Sat Feb 22 18:58:46 2020 */

/* Y direction */
YAnchor(0)
YDist(0,23)
YShift(0,33)
YDist(33,46)
YAnchor(8)
YDist(8,15)
YShift(8,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 891, char 0x363 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 23
SHP[1], 33
SRP0[], 33
MDRP[m&gt;RBl], 46
MDAP[R], 8
MDRP[m&gt;RBl], 15
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="892">
      <instructions>
        <talk>/* VTTTalk glyph 892, char 0x364 */
/* GUI generated Sat Feb 22 18:59:16 2020 */

/* Y direction */
YAnchor(0)
YDist(0,31)
YAnchor(8)
YDist(8,24)
YInterpolate(0,16,8)
YDist(16,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 892, char 0x364 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 31
MDAP[R], 8
MDRP[m&gt;RBl], 24
SRP2[], 0
IP[], 16
SRP0[], 16
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="893">
      <instructions>
        <talk>/* VTTTalk glyph 893, char 0x365 */
/* GUI generated Sat Feb 22 19:00:02 2020 */

/* Y direction */
YAnchor(0)
YDist(0,29)
YAnchor(18)
YDist(18,11)
YDist(18,36)
YDist(36,42)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 893, char 0x365 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 29
MDAP[R], 18
MDRP[m&gt;RBl], 11
MDRP[M&lt;RWh], 36
MDRP[m&gt;RBl], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="894">
      <instructions>
        <talk>/* VTTTalk glyph 894, char 0x366 */
/* GUI generated Sun Feb 23 14:28:43 2020 */

/* Y direction */
YAnchor(0)
YDist(0,14,&gt;=)
YAnchor(7)
YDist(7,21,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 894, char 0x366 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 14
MDAP[R], 7
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="895">
      <instructions>
        <talk>/* VTTTalk glyph 895, char 0x367 */
/* GUI generated Sat Feb 22 19:00:52 2020 */

/* Y direction */
YAnchor(0)
YDist(0,30)
YShift(0,39)
YDist(39,52)
YAnchor(19)
YDist(19,12)
YShift(19,35)
YShift(19,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 895, char 0x367 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 30
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 52
MDAP[R], 19
MDRP[m&gt;RBl], 12
SHP[1], 35
SHP[1], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="896">
      <instructions>
        <talk>/* VTTTalk glyph 896, char 0x368 */
/* GUI generated Sat Feb 22 19:02:00 2020 */

/* Y direction */
YAnchor(0)
YDist(0,25)
YAnchor(8)
YDist(8,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 896, char 0x368 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 25
MDAP[R], 8
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="897">
      <instructions>
        <talk>/* VTTTalk glyph 897, char 0x369 */
/* GUI generated Sat Feb 22 19:03:26 2020 */

/* Y direction */
YAnchor(0)
YDist(0,22)
YShift(0,32)
YDist(32,49)
YAnchor(41)
YIPAnchor(0,8,41)
YDist(8,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 897, char 0x369 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 22
SHP[1], 32
SRP0[], 32
MDRP[m&gt;RBl], 49
MDAP[R], 41
SRP2[], 0
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="898">
      <instructions>
        <talk>/* VTTTalk Unicode 0x36a */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(8)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YInterpolate(4,35,8)
YAnchor(35)
YDist(35,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(8,20) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(8,7)

Smooth()

</talk>
        <assembly>/* TT glyph 898, char 0x36a */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 8
MDAP[R], 4
SRP2[], 8
IP[], 35
MDAP[R], 35
MDRP[m&gt;RBl], 28
SRP0[], 8
MDRP[m&gt;RBl], 20
SHP[1], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="899">
      <instructions>
        <talk>/* VTTTalk glyph 899, char 0x36b */
/* GUI generated Sat Feb 22 19:05:18 2020 */

/* Y direction */
YAnchor(13)
YDist(13,6)
YShift(13,62)
YShift(13,35)
YDist(35,26)
YShift(26,53)
YAnchor(42)
YShift(42,0)
YShift(42,20)
YShift(42,30)
YShift(42,57)
YDist(42,73)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 899, char 0x36b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RBl], 6
SHP[1], 62
SHP[1], 35
SRP0[], 35
MDRP[m&gt;RBl], 26
SHP[2], 53
MDAP[R], 42
SHP[1], 0
SHP[1], 20
SHP[1], 30
SHP[1], 57
MDRP[m&gt;RBl], 73
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="900">
      <instructions>
        <talk>/* VTTTalk glyph 900, char 0x36c */
/* GUI generated Sat Feb 22 19:06:40 2020 */

/* Y direction */
YAnchor(0)
YShift(0,20)
YAnchor(24)
YDist(24,34)
YShift(24,13)
YDist(13,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 900, char 0x36c */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 20
MDAP[R], 24
MDRP[m&gt;RBl], 34
SHP[1], 13
SRP0[], 13
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="901">
      <instructions>
        <talk>/* VTTTalk glyph 901, char 0x36d */
/* GUI generated Sat Feb 22 19:06:58 2020 */

/* Y direction */
YAnchor(0)
YDist(0,14)
YShift(0,22)
YAnchor(7)
YShift(7,8)
YShift(7,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 901, char 0x36d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 14
SHP[1], 22
MDAP[R], 7
SHP[1], 8
SHP[1], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="902">
      <instructions>
        <talk>/* VTTTalk glyph 902, char 0x36e */
/* GUI generated Sat Feb 22 19:08:10 2020 */

/* Y direction */
YAnchor(0)
YDist(0,31)
YAnchor(24)
YDist(24,7)
YShift(24,43)
YInterpolate(0,17,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 902, char 0x36e */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 31
MDAP[R], 24
MDRP[m&gt;RBl], 7
SHP[1], 43
SRP2[], 0
IP[], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="903">
      <instructions>
        <talk>/* VTTTalk glyph 903, char 0x36f */
/* GUI generated Sat Feb 22 19:09:18 2020 */

/* Y direction */
YAnchor(31)
YDist(31,50)
YShift(31,0)
YDist(0,10)
YAnchor(44)
YDist(44,37)
YShift(44,16)
YDist(16,25)

/* X direction */

Smooth()
XDelta(30,1/8@31..37)
XDelta(29,1/4@31..37)
XDelta(28,1/4@31..37)
XDelta(13,-1/4@31..37)
XDelta(14,-1/4@31..37)
XDelta(15,-1/8@31..37)
</talk>
        <assembly>/* TT glyph 903, char 0x36f */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 31
MDRP[m&gt;RBl], 50
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 10
MDAP[R], 44
MDRP[m&gt;RBl], 37
SHP[1], 16
SRP0[], 16
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 30, 8, 31, 37, 72
CALL[], 29, 16, 31, 37, 72
CALL[], 28, 16, 31, 37, 72
CALL[], 13, -16, 31, 37, 72
CALL[], 14, -16, 31, 37, 72
CALL[], 15, -8, 31, 37, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="904">
      <instructions>
        <talk>/* VTTTalk glyph 904, char 0x1dd3 */
/* GUI generated Thu Feb 27 06:22:53 2020 */

/* Y direction */
YAnchor(0)
YDist(0,13,&gt;=)
YDist(13,7,&gt;=)
YShift(7,17)
YShift(0,33)
YDist(33,25,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 904, char 0x1dd3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 13
MDRP[m&gt;RWh], 7
SHP[2], 17
SRP1[], 0
SHP[1], 33
SRP0[], 33
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="905">
      <instructions>
        <talk>/* VTTTalk glyph 905, char 0x1dd4 */
/* GUI generated Sat Feb 22 19:21:19 2020 */

/* Y direction */
YAnchor(0)
YDist(0,52,&gt;=)
YShift(0,38)
YDist(38,31,&gt;=)
YAnchor(8)
YDist(8,23,&gt;=)
YShift(8,45)
YInterpolate(8,16,0)
YDist(16,17,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 905, char 0x1dd4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 52
SHP[1], 38
SRP0[], 38
MDRP[m&gt;RBl], 31
MDAP[R], 8
MDRP[m&gt;RBl], 23
SHP[1], 45
SRP2[], 0
IP[], 16
SRP0[], 16
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="906">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1dd8 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(31)	/* max */

/* YDir: Stroke #0 */
YInterpolate(31,7,0)
YAnchor(7)
YDist(7,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,22) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 906, char 0x1dd8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 31
IP[], 7
MDAP[R], 7
MDRP[m&gt;RBl], 14
SRP0[], 0
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="907">
      <instructions>
        <talk>/* VTTTalk glyph 907, char 0x1dda */
/* GUI generated Sat Feb 22 19:24:48 2020 */

/* Y direction */
YAnchor(0)
YDist(0,15,&gt;=)
YDist(15,9,&gt;=)
YDist(9,8,&gt;=)
YDist(8,60,&gt;=)
YDist(60,73,&gt;=)
YDist(73,80,&gt;=)
YDist(80,66,&gt;=)
YShift(66,53)
YDist(53,46,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 907, char 0x1dda */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 15
MDRP[M&gt;RGr], 9
MDRP[M&gt;RBl], 8
MDRP[M&gt;RGr], 60
MDRP[M&gt;RGr], 73
MDRP[M&gt;RWh], 80
MDRP[m&gt;RBl], 66
SHP[2], 53
SRP0[], 53
MDRP[m&gt;RBl], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="908">
      <instructions>
        <talk>/* VTTTalk glyph 908, char 0x1ddc */
/* GUI generated Sat Feb 22 19:25:53 2020 */

/* Y direction */
YAnchor(4)
YAnchor(8)
YShift(8,7)
YDist(8,22)
YIPAnchor(4,44,8)
YInterpolate(44,14,8)
YDist(44,36)
YShift(14,29)
YShift(14,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 908, char 0x1ddc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 8
SHP[1], 7
MDRP[m&gt;RBl], 22
SRP2[], 4
IP[], 44
MDAP[R], 44
SRP2[], 8
IP[], 14
MDRP[m&gt;RBl], 36
SRP1[], 14
SHP[1], 29
SHP[1], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="909">
      <instructions>
        <talk>/* VTTTalk glyph 909, char 0x1ddd */
/* GUI generated Sat Feb 22 19:26:46 2020 */

/* Y direction */
YAnchor(0)
YDist(0,17,&gt;=)
YAnchor(9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 909, char 0x1ddd */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 17
MDAP[R], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="910">
      <instructions>
        <talk>/* VTTTalk glyph 910, char 0x1de0 */
/* GUI generated Sat Feb 22 19:27:44 2020 */

/* Y direction */
YAnchor(0)
YShift(0,16)
YDist(0,32,&gt;=)
YShift(0,39)
YAnchor(21)
YDist(21,11,&gt;=)
YShift(21,52)
YDist(52,45,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 910, char 0x1de0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 16
MDRP[m&gt;RBl], 32
SHP[1], 39
MDAP[R], 21
MDRP[m&gt;RBl], 11
SHP[1], 52
SRP0[], 52
MDRP[m&gt;RBl], 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="911">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1de3 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 24 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(16)	/* max */

/* YDir: Stroke #0 */
YDist(16,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,24) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 911, char 0x1de3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 16
MDRP[m&gt;RBl], 9
SRP0[], 0
MDRP[m&gt;RBl], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="912">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1de4 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(27)	/* max */

/* YDir: Stroke #0 */
YDist(27,39) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,15) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 912, char 0x1de4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 27
MDRP[m&gt;RBl], 39
SRP0[], 0
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="913">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1de5 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 17  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(21)	/* max */

/* YDir: Stroke #0 */
YDist(21,33) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,9)

Smooth()

</talk>
        <assembly>/* TT glyph 913, char 0x1de5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 21
MDRP[m&gt;RBl], 33
SRP0[], 0
MDRP[m&gt;RBl], 13
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="914">
      <instructions>
        <talk>/* VTTTalk glyph 914, char 0x1de6 */
/* GUI generated Sat Feb 22 19:28:33 2020 */

/* Y direction */
YAnchor(23)
YDist(23,7)
YShift(23,26)
YAnchor(52)
YDist(52,38,&gt;=)
YShift(52,61)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 914, char 0x1de6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 23
MDRP[m&gt;RBl], 7
SHP[1], 26
MDAP[R], 52
MDRP[m&gt;RBl], 38
SHP[1], 61
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="915">
      <instructions>
        <talk>/* VTTTalk glyph 915, char 0xffff */
/* GUI generated Sat Feb 22 19:29:04 2020 */

/* Y direction */
YAnchor(0)
YDist(0,4)
YDist(4,10,&gt;=)
YDist(10,16,&gt;=)
YAnchor(1)
YDist(1,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 915, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 4
MDRP[M&gt;RWh], 10
MDRP[m&gt;RBl], 16
MDAP[R], 1
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="916">
      <instructions>
        <talk>/* VTTTalk glyph 916, char 0x16a0 */
/* GUI generated Sat Feb 22 19:33:50 2020 */

/* Y direction */
YAnchor(30,85)
YShift(30,2)
YShift(30,9)
YShift(30,18)
YShift(30,26)
YShift(30,33)
YLink(30,31,87)
YShift(31,27)
YShift(31,32)
YAnchor(39,86)
YShift(39,3)
YLink(39,38,87)
YInterpolate(39,13,4,30)
YDist(13,14)
YDist(4,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 916, char 0x16a0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 30, 85
SHP[1], 2
SHP[1], 9
SHP[1], 18
SHP[1], 26
SHP[1], 33
MIRP[m&gt;RBl], 31, 87
SHP[2], 27
SHP[2], 32
MIAP[R], 39, 86
SHP[1], 3
MIRP[m&gt;RBl], 38, 87
SRP2[], 30
IP[], 13
IP[], 4
SRP0[], 13
MDRP[m&gt;RBl], 14
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="917">
      <instructions>
        <talk>/* VTTTalk glyph 917, char 0x16a1 */
/* GUI generated Sat Feb 22 19:37:07 2020 */

/* Y direction */
YAnchor(46,85)
YShift(46,2)
YShift(46,10)
YShift(46,22)
YShift(46,43)
YShift(46,50)
YDist(46,45)
YShift(45,44)
YShift(45,49)
YAnchor(56,86)
YShift(56,3)
YLink(56,55,87)
YInterpolate(56,16,4,29,35,46)
YDist(16,17)
YDist(4,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 917, char 0x16a1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 46, 85
SHP[1], 2
SHP[1], 10
SHP[1], 22
SHP[1], 43
SHP[1], 50
MDRP[m&gt;RBl], 45
SHP[2], 44
SHP[2], 49
MIAP[R], 56, 86
SHP[1], 3
MIRP[m&gt;RBl], 55, 87
SRP2[], 46
SLOOP[], 4
IP[], 16, 4, 29, 35
SRP0[], 16
MDRP[m&gt;RBl], 17
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="918">
      <instructions>
        <talk>/* VTTTalk glyph 918, char 0x16a2 */
/* GUI generated Sat Feb 22 19:39:17 2020 */

/* Y direction */
YAnchor(3,86)
YShift(3,4)
YShift(3,13)
YShift(3,18)
YDist(3,2)
YShift(2,5)
YAnchor(10,85)
YShift(10,11)
YShift(10,14)
YShift(10,15)
YShift(10,16)
YShift(10,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 918, char 0x16a2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 3, 86
SHP[1], 4
SHP[1], 13
SHP[1], 18
MDRP[m&gt;RBl], 2
SHP[2], 5
MIAP[R], 10, 85
SHP[1], 11
SHP[1], 14
SHP[1], 15
SHP[1], 16
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="919">
      <instructions>
        <talk>/* VTTTalk glyph 919, char 0x16a3 */
/* GUI generated Sat Feb 22 19:42:27 2020 */

/* Y direction */
YAnchor(7,86)
YShift(7,0)
YShift(7,8)
YShift(7,17)
YShift(7,22)
YLink(7,6,87)
YShift(6,9)
YAnchor(14,85)
YShift(14,15)
YShift(14,19)
YShift(14,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 919, char 0x16a3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 0
SHP[1], 8
SHP[1], 17
SHP[1], 22
MIRP[m&gt;RBl], 6, 87
SHP[2], 9
MIAP[R], 14, 85
SHP[1], 15
SHP[1], 19
SHP[1], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="920">
      <instructions>
        <talk>/* VTTTalk glyph 920, char 0x16a4 */
/* GUI generated Sat Feb 22 19:44:57 2020 */

/* Y direction */
YAnchor(3,86)
YShift(3,4)
YShift(3,13)
YShift(3,18)
YLink(3,2,87)
YShift(2,5)
YAnchor(10,85)
YShift(10,11)
YShift(10,15)
YShift(10,16)
YInterpolate(3,19,25,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 920, char 0x16a4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 3, 86
SHP[1], 4
SHP[1], 13
SHP[1], 18
MIRP[m&gt;RBl], 2, 87
SHP[2], 5
MIAP[R], 10, 85
SHP[1], 11
SHP[1], 15
SHP[1], 16
SRP2[], 3
IP[], 19
IP[], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="921">
      <instructions>
        <talk>/* VTTTalk glyph 921, char 0x16a5 */
/* GUI generated Sat Feb 22 19:46:52 2020 */

/* Y direction */
YAnchor(7,86)
YShift(7,0)
YShift(7,11)
YShift(7,15)
YShift(7,20)
YLink(7,8,87)
YShift(8,12)
YAnchor(17,85)
YShift(17,18)
YShift(17,22)
YShift(17,23)
YInterpolate(7,4,17)
YLink(4,3,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 921, char 0x16a5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 0
SHP[1], 11
SHP[1], 15
SHP[1], 20
MIRP[m&gt;RBl], 8, 87
SHP[2], 12
MIAP[R], 17, 85
SHP[1], 18
SHP[1], 22
SHP[1], 23
SRP2[], 7
IP[], 4
SRP0[], 4
MIRP[m&gt;RBl], 3, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="922">
      <instructions>
        <talk>/* VTTTalk glyph 922, char 0x16a6 */
/* GUI generated Sat Feb 22 19:49:20 2020 */

/* Y direction */
YAnchor(13,85)
YShift(13,2)
YLink(13,14,87)
YAnchor(18,86)
YShift(18,7)
YLink(18,17,87)
YInterpolate(18,6,9,4,3,13)
YDist(6,8)
YDist(3,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 922, char 0x16a6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 85
SHP[1], 2
MIRP[m&gt;RBl], 14, 87
MIAP[R], 18, 86
SHP[1], 7
MIRP[m&gt;RBl], 17, 87
SRP2[], 13
SLOOP[], 4
IP[], 6, 9, 4, 3
SRP0[], 6
MDRP[m&gt;RBl], 8
SRP0[], 3
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="923">
      <instructions>
        <talk>/* VTTTalk glyph 923, char 0x16a7 */
/* GUI generated Sat Feb 22 19:51:20 2020 */

/* Y direction */
YAnchor(25,85)
YShift(25,14)
YLink(25,26,87)
YAnchor(30,86)
YShift(30,19)
YLink(30,29,87)
YInterpolate(30,18,15,25)
YDist(18,20)
YDist(15,22)
YInterpolate(20,0,6,22)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 923, char 0x16a7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 25, 85
SHP[1], 14
MIRP[m&gt;RBl], 26, 87
MIAP[R], 30, 86
SHP[1], 19
MIRP[m&gt;RBl], 29, 87
SRP2[], 25
IP[], 18
IP[], 15
SRP0[], 18
MDRP[m&gt;RBl], 20
SRP0[], 15
MDRP[m&gt;RBl], 22
SRP1[], 20
IP[], 0
IP[], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="924">
      <instructions>
        <talk>/* VTTTalk glyph 924, char 0x16a8 */
/* GUI generated Sat Feb 22 19:54:20 2020 */

/* Y direction */
YAnchor(20,85)
YLink(20,19,87)
YShift(20,2)
YShift(2,3)
YDist(20,9)
YShift(9,8)
YAnchor(23,86)
YShift(23,0)
YLink(23,24,87)
YInterpolate(23,10,20)
YShift(10,11)
YDist(10,17)
YShift(17,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 924, char 0x16a8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 20, 85
MIRP[m&gt;RBl], 19, 87
SHP[1], 2
SRP1[], 2
SHP[1], 3
MDRP[m&lt;RGr], 9
SHP[2], 8
MIAP[R], 23, 86
SHP[1], 0
MIRP[m&gt;RBl], 24, 87
SRP2[], 20
IP[], 10
SRP1[], 10
SHP[1], 11
SRP0[], 10
MDRP[m&gt;RBl], 17
SHP[2], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="925">
      <instructions>
        <talk>/* VTTTalk glyph 925, char 0x16a9 */
/* GUI generated Sat Feb 22 19:58:07 2020 */

/* Y direction */
YAnchor(19,86)
YShift(19,0)
YLink(19,20,87)
YAnchor(24,85)
YShift(24,5)
YShift(24,32)
YShift(24,2)
YShift(2,3)
YDist(2,9)
YShift(9,8)
YIPAnchor(24,28,19)
YInterpolate(28,10,19)
YShift(28,13)
YShift(10,11)
YDist(10,17)
YShift(17,16)
YLink(24,23,87)
YShift(23,31)
YAnchor(27,86)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 925, char 0x16a9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 19, 86
SHP[1], 0
MIRP[m&gt;RBl], 20, 87
MIAP[R], 24, 85
SHP[1], 5
SHP[1], 32
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MDRP[m&gt;RBl], 9
SHP[2], 8
SRP1[], 24
SRP2[], 19
IP[], 28
MDAP[R], 28
IP[], 10
SHP[1], 13
SRP1[], 10
SHP[1], 11
SRP0[], 10
MDRP[m&gt;RBl], 17
SHP[2], 16
SRP0[], 24
MIRP[m&gt;RBl], 23, 87
SHP[2], 31
MIAP[R], 27, 86
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="926">
      <instructions>
        <talk>/* VTTTalk glyph 926, char 0x16aa */
/* GUI generated Sat Feb 22 20:01:51 2020 */

/* Y direction */
YAnchor(22,86)
YShift(22,10)
YLink(22,21,87)
YAnchor(24,85)
YShift(24,5)
YShift(24,28)
YShift(24,2)
YShift(2,3)
YDist(2,9)
YShift(9,8)
YInterpolate(24,13,22)
YShift(13,14)
YDist(13,12)
YShift(12,11)
YLink(24,23,87)
YShift(23,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 926, char 0x16aa */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 22, 86
SHP[1], 10
MIRP[m&gt;RBl], 21, 87
MIAP[R], 24, 85
SHP[1], 5
SHP[1], 28
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MDRP[m&gt;RBl], 9
SHP[2], 8
SRP1[], 24
SRP2[], 22
IP[], 13
SRP1[], 13
SHP[1], 14
SRP0[], 13
MDRP[m&gt;RBl], 12
SHP[2], 11
SRP0[], 24
MIRP[m&gt;RBl], 23, 87
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="927">
      <instructions>
        <talk>/* VTTTalk glyph 927, char 0x16ab */
/* GUI generated Sat Feb 22 20:03:58 2020 */

/* Y direction */
YAnchor(22,86)
YShift(22,18)
YLink(22,21,87)
YAnchor(24,85)
YLink(24,23,87)
YShift(24,2)
YShift(2,3)
YDist(2,9)
YShift(9,8)
YInterpolate(22,10,24)
YShift(10,11)
YDist(10,17)
YShift(17,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 927, char 0x16ab */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 22, 86
SHP[1], 18
MIRP[m&gt;RBl], 21, 87
MIAP[R], 24, 85
MIRP[m&gt;RBl], 23, 87
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MDRP[m&gt;RBl], 9
SHP[2], 8
SRP1[], 22
SRP2[], 24
IP[], 10
SRP1[], 10
SHP[1], 11
SRP0[], 10
MDRP[m&gt;RBl], 17
SHP[2], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="928">
      <instructions>
        <talk>/* VTTTalk glyph 928, char 0x16ac */
/* GUI generated Sat Feb 22 20:07:25 2020 */

/* Y direction */
YAnchor(29,85)
YShift(29,25)
YLink(29,28,87)
YAnchor(35,86)
YShift(35,27)
YLink(35,34,87)
YInterpolate(35,18,6,29)
YShift(18,19)
YDist(18,13)
YShift(13,12)
YShift(6,7)
YDist(6,1)
YShift(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 928, char 0x16ac */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 85
SHP[1], 25
MIRP[m&gt;RBl], 28, 87
MIAP[R], 35, 86
SHP[1], 27
MIRP[m&gt;RBl], 34, 87
SRP2[], 29
IP[], 18
IP[], 6
SRP1[], 18
SHP[1], 19
SRP0[], 18
MDRP[m&gt;RBl], 13
SHP[2], 12
SRP1[], 6
SHP[1], 7
SRP0[], 6
MDRP[m&gt;RBl], 1
SHP[2], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="929">
      <instructions>
        <talk>/* VTTTalk glyph 929, char 0x16ad */
/* GUI generated Sat Feb 22 20:09:27 2020 */

/* Y direction */
YAnchor(21,85)
YShift(21,1)
YLink(21,20,87)
YAnchor(27,86)
YShift(27,3)
YLink(27,26,87)
YInterpolate(21,6,14,27)
YShift(6,7)
YDist(6,5)
YShift(5,4)
YShift(14,15)
YDist(14,13)
YShift(13,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 929, char 0x16ad */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 1
MIRP[m&gt;RBl], 20, 87
MIAP[R], 27, 86
SHP[1], 3
MIRP[m&gt;RBl], 26, 87
SRP2[], 21
IP[], 6
IP[], 14
SRP1[], 6
SHP[1], 7
SRP0[], 6
MDRP[m&gt;RBl], 5
SHP[2], 4
SRP1[], 14
SHP[1], 15
SRP0[], 14
MDRP[m&gt;RBl], 13
SHP[2], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="930">
      <instructions>
        <talk>/* VTTTalk glyph 930, char 0x16ae */
/* GUI generated Sat Feb 22 20:19:47 2020 */

/* Y direction */
YAnchor(21,85)
YLink(21,20,87)
YAnchor(24,86)
YShift(24,0)
YLink(24,25,87)
YInterpolate(24,17,9,21)
YShift(17,16)
YDist(17,18)
YShift(18,19)
YShift(9,8)
YDist(9,10)
YShift(10,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 930, char 0x16ae */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 85
MIRP[m&gt;RBl], 20, 87
MIAP[R], 24, 86
SHP[1], 0
MIRP[m&gt;RBl], 25, 87
SRP2[], 21
IP[], 17
IP[], 9
SRP1[], 17
SHP[1], 16
SRP0[], 17
MDRP[m&gt;RBl], 18
SHP[2], 19
SRP1[], 9
SHP[1], 8
SRP0[], 9
MDRP[m&gt;RBl], 10
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="931">
      <instructions>
        <talk>/* VTTTalk glyph 931, char 0x16af */
/* GUI generated Sun Feb 23 14:31:41 2020 */

/* Y direction */
YAnchor(29,85)
YShift(29,25)
YLink(29,28,87)
YAnchor(32,86)
YShift(32,24)
YLink(32,33,87)
YInterpolate(32,23,11,29)
YShift(23,22)
YDist(23,16)
YShift(16,17)
YShift(11,10)
YDist(11,4)
YShift(4,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 931, char 0x16af */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 85
SHP[1], 25
MIRP[m&gt;RBl], 28, 87
MIAP[R], 32, 86
SHP[1], 24
MIRP[m&gt;RBl], 33, 87
SRP2[], 29
IP[], 23
IP[], 11
SRP1[], 23
SHP[1], 22
SRP0[], 23
MDRP[m&gt;RBl], 16
SHP[2], 17
SRP1[], 11
SHP[1], 10
SRP0[], 11
MDRP[m&gt;RBl], 4
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="932">
      <instructions>
        <talk>/* VTTTalk glyph 932, char 0x16b0 */
/* GUI generated Sun Feb 23 14:32:14 2020 */

/* Y direction */
YAnchor(7,86)
YShift(7,3)
YLink(7,6,87)
YAnchor(29,85)
YShift(29,1)
YLink(29,28,87)
YInterpolate(7,15,27,29)
YShift(15,14)
YDist(15,12)
YShift(12,13)
YShift(27,26)
YDist(27,20)
YShift(20,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 932, char 0x16b0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 3
MIRP[m&gt;RBl], 6, 87
MIAP[R], 29, 85
SHP[1], 1
MIRP[m&gt;RBl], 28, 87
SRP2[], 7
IP[], 15
IP[], 27
SRP1[], 15
SHP[1], 14
SRP0[], 15
MDRP[m&gt;RBl], 12
SHP[2], 13
SRP1[], 27
SHP[1], 26
SRP0[], 27
MDRP[m&gt;RBl], 20
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="933">
      <instructions>
        <talk>/* VTTTalk glyph 933, char 0x16b1 */
/* GUI generated Sat Feb 22 20:33:11 2020 */

/* Y direction */
YAnchor(14,86)
YShift(14,0)
YShift(14,10)
YShift(14,18)
YLink(14,15,87)
YShift(15,19)
YAnchor(23,85)
YLink(23,22,87)
YShift(23,2)
YAnchor(2)
YDist(2,9)
YInterpolate(14,5,11,23)
YDist(5,7)
YInterpolate(7,4,8,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 933, char 0x16b1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 86
SHP[1], 0
SHP[1], 10
SHP[1], 18
MIRP[m&gt;RBl], 15, 87
SHP[2], 19
MIAP[R], 23, 85
MIRP[m&gt;RBl], 22, 87
SHP[1], 2
MDAP[R], 2
MDRP[m&gt;RBl], 9
SRP1[], 14
SRP2[], 23
IP[], 5
IP[], 11
SRP0[], 5
MDRP[m&lt;RGr], 7
SRP1[], 9
IP[], 4
IP[], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="934">
      <instructions>
        <talk>/* VTTTalk glyph 934, char 0x16b2 */
/* GUI generated Sat Feb 22 20:33:51 2020 */

/* Y direction */
YAnchor(0)
YAnchor(4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 934, char 0x16b2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="935">
      <instructions>
        <talk>/* VTTTalk glyph 935, char 0x16b3 */
/* GUI generated Sat Feb 22 20:41:55 2020 */

/* Y direction */
YAnchor(22,86)
YShift(22,0)
YShift(22,18)
YShift(22,23)
YLink(22,21,87)
YShift(21,24)
YAnchor(29,85)
YShift(29,17)
YLink(29,30,87)
YInterpolate(22,7,29)
YDist(7,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 935, char 0x16b3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 22, 86
SHP[1], 0
SHP[1], 18
SHP[1], 23
MIRP[m&gt;RBl], 21, 87
SHP[2], 24
MIAP[R], 29, 85
SHP[1], 17
MIRP[m&gt;RBl], 30, 87
SRP2[], 22
IP[], 7
SRP0[], 7
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="936">
      <instructions>
        <talk>/* VTTTalk glyph 936, char 0x16b4 */
/* GUI generated Sat Feb 22 20:45:05 2020 */

/* Y direction */
YAnchor(18,85)
YShift(18,2)
YShift(18,10)
YShift(18,21)
YLink(18,19,87)
YShift(19,20)
YAnchor(27,86)
YShift(27,3)
YLink(27,26,87)
YInterpolate(27,4,18)
YDist(4,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 936, char 0x16b4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 85
SHP[1], 2
SHP[1], 10
SHP[1], 21
MIRP[m&gt;RBl], 19, 87
SHP[2], 20
MIAP[R], 27, 86
SHP[1], 3
MIRP[m&gt;RBl], 26, 87
SRP2[], 18
IP[], 4
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="937">
      <instructions>
        <talk>/* VTTTalk glyph 937, char 0x16b5 */
/* GUI generated Sat Feb 22 20:47:33 2020 */

/* Y direction */
YAnchor(18,85)
YShift(18,2)
YShift(18,10)
YShift(18,21)
YLink(18,19,87)
YShift(19,20)
YAnchor(27,86)
YShift(27,3)
YLink(27,26,87)
YInterpolate(27,4,28,34,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 937, char 0x16b5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 85
SHP[1], 2
SHP[1], 10
SHP[1], 21
MIRP[m&gt;RBl], 19, 87
SHP[2], 20
MIAP[R], 27, 86
SHP[1], 3
MIRP[m&gt;RBl], 26, 87
SRP2[], 18
SLOOP[], 3
IP[], 4, 28, 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="938">
      <instructions>
        <talk>/* VTTTalk glyph 938, char 0x16b6 */
/* GUI generated Sat Feb 22 20:49:19 2020 */

/* Y direction */
YAnchor(32,85)
YShift(32,16)
YShift(32,24)
YShift(32,35)
YLink(32,33,87)
YShift(33,34)
YAnchor(41,86)
YShift(41,17)
YLink(41,40,87)
YInterpolate(41,18,32)
YShift(18,0)
YDist(18,19)
YShift(19,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 938, char 0x16b6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 32, 85
SHP[1], 16
SHP[1], 24
SHP[1], 35
MIRP[m&gt;RBl], 33, 87
SHP[2], 34
MIAP[R], 41, 86
SHP[1], 17
MIRP[m&gt;RBl], 40, 87
SRP2[], 32
IP[], 18
SRP1[], 18
SHP[1], 0
SRP0[], 18
MDRP[m&gt;RBl], 19
SHP[2], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="939">
      <instructions>
        <talk>/* VTTTalk glyph 939, char 0x16b7 */
/* GUI generated Sat Feb 22 20:51:15 2020 */

/* Y direction */
YAnchor(7,86)
YShift(7,0)
YShift(7,11)
YShift(7,12)
YLink(7,6,87)
YShift(6,13)
YAnchor(18,85)
YShift(18,2)
YShift(18,22)
YShift(18,25)
YInterpolate(7,20,10,21,9,18)
YLink(18,19,87)
YShift(19,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 939, char 0x16b7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 0
SHP[1], 11
SHP[1], 12
MIRP[m&gt;RBl], 6, 87
SHP[2], 13
MIAP[R], 18, 85
SHP[1], 2
SHP[1], 22
SHP[1], 25
SRP2[], 7
SLOOP[], 4
IP[], 20, 10, 21, 9
MIRP[m&gt;RBl], 19, 87
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="940">
      <instructions>
        <talk>/* VTTTalk glyph 940, char 0x16b8 */
/* GUI generated Sat Feb 22 20:54:05 2020 */

/* Y direction */
YAnchor(27,86)
YShift(27,0)
YShift(27,6)
YShift(27,12)
YShift(27,19)
YShift(27,28)
YLink(27,26,87)
YShift(26,29)
YAnchor(34,85)
YShift(34,2)
YShift(34,10)
YShift(34,14)
YShift(34,22)
YShift(34,37)
YInterpolate(27,20,18,21,17,34)
YLink(34,35,87)
YShift(35,36)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 940, char 0x16b8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 27, 86
SHP[1], 0
SHP[1], 6
SHP[1], 12
SHP[1], 19
SHP[1], 28
MIRP[m&gt;RBl], 26, 87
SHP[2], 29
MIAP[R], 34, 85
SHP[1], 2
SHP[1], 10
SHP[1], 14
SHP[1], 22
SHP[1], 37
SRP2[], 27
SLOOP[], 4
IP[], 20, 18, 21, 17
MIRP[m&gt;RBl], 35, 87
SHP[2], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="941">
      <instructions>
        <talk>/* VTTTalk glyph 941, char 0x16b9 */
/* GUI generated Sat Feb 22 20:56:57 2020 */

/* Y direction */
YAnchor(14,86)
YShift(14,0)
YLink(14,15,87)
YAnchor(19,85)
YLink(19,18,87)
YShift(19,2)
YShift(2,3)
YDist(2,12)
YShift(12,11)
YInterpolate(14,5,19)
YShift(5,4)
YDist(5,9)
YShift(9,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 941, char 0x16b9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 86
SHP[1], 0
MIRP[m&gt;RBl], 15, 87
MIAP[R], 19, 85
MIRP[m&gt;RBl], 18, 87
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MDRP[m&gt;RBl], 12
SHP[2], 11
SRP1[], 14
SRP2[], 19
IP[], 5
SRP1[], 5
SHP[1], 4
SRP0[], 5
MDRP[m&gt;RBl], 9
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="942">
      <instructions>
        <talk>/* VTTTalk glyph 942, char 0x16ba */
/* GUI generated Sat Feb 22 20:58:44 2020 */

/* Y direction */
YAnchor(14,85)
YShift(14,2)
YShift(14,6)
YShift(14,9)
YShift(14,17)
YLink(14,15,87)
YShift(15,16)
YAnchor(23,86)
YShift(23,0)
YShift(23,7)
YShift(23,8)
YShift(23,24)
YLink(23,22,87)
YShift(22,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 942, char 0x16ba */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 85
SHP[1], 2
SHP[1], 6
SHP[1], 9
SHP[1], 17
MIRP[m&gt;RBl], 15, 87
SHP[2], 16
MIAP[R], 23, 86
SHP[1], 0
SHP[1], 7
SHP[1], 8
SHP[1], 24
MIRP[m&gt;RBl], 22, 87
SHP[2], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="943">
      <instructions>
        <talk>/* VTTTalk glyph 943, char 0x16bb */
/* GUI generated Sat Feb 22 21:01:36 2020 */

/* Y direction */
YAnchor(18,85)
YShift(18,10)
YShift(18,13)
YShift(18,21)
YLink(18,19,87)
YShift(19,20)
YAnchor(27,86)
YShift(27,11)
YShift(27,12)
YShift(27,28)
YInterpolate(27,4,0,6,2,18)
YLink(27,26,87)
YShift(26,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 943, char 0x16bb */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 85
SHP[1], 10
SHP[1], 13
SHP[1], 21
MIRP[m&gt;RBl], 19, 87
SHP[2], 20
MIAP[R], 27, 86
SHP[1], 11
SHP[1], 12
SHP[1], 28
SRP2[], 18
SLOOP[], 4
IP[], 4, 0, 6, 2
MIRP[m&gt;RBl], 26, 87
SHP[2], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="944">
      <instructions>
        <talk>/* VTTTalk glyph 944, char 0x16bc */
/* GUI generated Sat Feb 22 21:04:59 2020 */

/* Y direction */
YAnchor(25,85)
YShift(25,21)
YLink(25,24,87)
YAnchor(31,86)
YShift(31,23)
YLink(31,30,87)
YInterpolate(31,11,3,25)
YShift(11,12)
YDist(11,17)
YShift(17,16)
YShift(3,2)
YDist(3,7)
YShift(7,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 944, char 0x16bc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 25, 85
SHP[1], 21
MIRP[m&gt;RBl], 24, 87
MIAP[R], 31, 86
SHP[1], 23
MIRP[m&gt;RBl], 30, 87
SRP2[], 25
IP[], 11
IP[], 3
SRP1[], 11
SHP[1], 12
SRP0[], 11
MDRP[m&gt;RBl], 17
SHP[2], 16
SRP1[], 3
SHP[1], 2
SRP0[], 3
MDRP[m&gt;RBl], 7
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="945">
      <instructions>
        <talk>/* VTTTalk glyph 945, char 0x16bd */
/* GUI generated Sat Feb 22 21:06:41 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,8)
YShift(22,18)
YLink(22,23,87)
YAnchor(24,86)
YShift(24,0)
YShift(24,16)
YLink(24,25,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 945, char 0x16bd */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 8
SHP[1], 18
MIRP[m&gt;RBl], 23, 87
MIAP[R], 24, 86
SHP[1], 0
SHP[1], 16
MIRP[m&gt;RBl], 25, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="946">
      <instructions>
        <talk>/* VTTTalk glyph 946, char 0x16be */
/* GUI generated Sat Feb 22 21:08:32 2020 */

/* Y direction */
YAnchor(16,85)
YShift(16,12)
YLink(16,17,87)
YAnchor(18,86)
YShift(18,10)
YLink(18,19,87)
YInterpolate(16,3,18)
YShift(3,2)
YDist(3,7)
YShift(7,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 946, char 0x16be */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 16, 85
SHP[1], 12
MIRP[m&gt;RBl], 17, 87
MIAP[R], 18, 86
SHP[1], 10
MIRP[m&gt;RBl], 19, 87
SRP2[], 16
IP[], 3
SRP1[], 3
SHP[1], 2
SRP0[], 3
MDRP[m&gt;RBl], 7
SHP[2], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="947">
      <instructions>
        <talk>/* VTTTalk glyph 947, char 0x16bf */
/* GUI generated Sat Feb 22 21:10:27 2020 */

/* Y direction */
YAnchor(4,86)
YShift(4,0)
YLink(4,5,87)
YAnchor(17,85)
YShift(17,2)
YLink(17,18,87)
YInterpolate(17,12,4)
YShift(12,13)
YDist(12,11)
YShift(11,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 947, char 0x16bf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 4, 86
SHP[1], 0
MIRP[m&gt;RBl], 5, 87
MIAP[R], 17, 85
SHP[1], 2
MIRP[m&gt;RBl], 18, 87
SRP2[], 4
IP[], 12
SRP1[], 12
SHP[1], 13
SRP0[], 12
MDRP[m&gt;RBl], 11
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="948">
      <instructions>
        <talk>/* VTTTalk glyph 948, char 0x16c0 */
/* GUI generated Sat Feb 22 21:13:16 2020 */

/* Y direction */
YAnchor(31,85)
YShift(31,8)
YShift(31,27)
YLink(31,30,87)
YAnchor(37,86)
YShift(37,0)
YShift(37,29)
YLink(37,36,87)
YInterpolate(37,19,31)
YShift(19,18)
YDist(19,23)
YShift(23,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 948, char 0x16c0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 31, 85
SHP[1], 8
SHP[1], 27
MIRP[m&gt;RBl], 30, 87
MIAP[R], 37, 86
SHP[1], 0
SHP[1], 29
MIRP[m&gt;RBl], 36, 87
SRP2[], 31
IP[], 19
SRP1[], 19
SHP[1], 18
SRP0[], 19
MDRP[m&gt;RBl], 23
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="949">
      <instructions>
        <talk>/* VTTTalk glyph 949, char 0x16c1 */
/* GUI generated Sat Feb 22 21:15:16 2020 */

/* Y direction */
YAnchor(5,85)
YShift(5,1)
YLink(5,4,87)
YAnchor(11,86)
YShift(11,3)
YLink(11,10,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 949, char 0x16c1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 85
SHP[1], 1
MIRP[m&gt;RBl], 4, 87
MIAP[R], 11, 86
SHP[1], 3
MIRP[m&gt;RBl], 10, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="950">
      <instructions>
        <talk>/* VTTTalk glyph 945, char 0x16bd */
/* GUI generated Sat Feb 22 21:06:41 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,8)
YShift(22,18)
YLink(22,23,87)
YAnchor(24,86)
YShift(24,0)
YShift(24,16)
YLink(24,25,87)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 950, char 0x16c2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 8
SHP[1], 18
MIRP[m&gt;RBl], 23, 87
MIAP[R], 24, 86
SHP[1], 0
SHP[1], 16
MIRP[m&gt;RBl], 25, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="951">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16c3 */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 951, char 0x16c3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="952">
      <instructions>
        <talk>/* VTTTalk glyph 952, char 0x16c4 */
/* GUI generated Sat Feb 22 21:17:19 2020 */

/* Y direction */
YAnchor(13,85)
YShift(13,9)
YLink(13,12,87)
YAnchor(19,86)
YShift(19,11)
YLink(19,18,87)
YInterpolate(19,0,2,13)
YShift(0,4)
YShift(2,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 952, char 0x16c4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 13, 85
SHP[1], 9
MIRP[m&gt;RBl], 12, 87
MIAP[R], 19, 86
SHP[1], 11
MIRP[m&gt;RBl], 18, 87
SRP2[], 13
IP[], 0
IP[], 2
SRP1[], 0
SHP[1], 4
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="953">
      <instructions>
        <talk>/* VTTTalk glyph 953, char 0x16c5 */
/* GUI generated Sat Feb 22 21:49:36 2020 */

/* Y direction */
YAnchor(15,85)
YShift(15,11)
YDist(15,14)
YAnchor(21,86)
YShift(21,13)
YLink(21,20,87)
YInterpolate(21,1,15)
YShift(1,2)
YDist(1,7)
YShift(7,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 953, char 0x16c5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 15, 85
SHP[1], 11
MDRP[m&gt;RBl], 14
MIAP[R], 21, 86
SHP[1], 13
MIRP[m&gt;RBl], 20, 87
SRP2[], 15
IP[], 1
SRP1[], 1
SHP[1], 2
SRP0[], 1
MDRP[m&gt;RBl], 7
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="954">
      <instructions>
        <talk>/* VTTTalk glyph 954, char 0x16c6 */
/* GUI generated Sat Feb 22 21:51:31 2020 */

/* Y direction */
YAnchor(12,85)
YLink(12,11,87)
YAnchor(18,86)
YShift(18,10)
YLink(18,17,87)
YInterpolate(18,2,12)
YShift(2,1)
YDist(2,3)
YShift(3,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 954, char 0x16c6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 12, 85
MIRP[m&gt;RBl], 11, 87
MIAP[R], 18, 86
SHP[1], 10
MIRP[m&gt;RBl], 17, 87
SRP2[], 12
IP[], 2
SRP1[], 2
SHP[1], 1
SRP0[], 2
MDRP[m&gt;RBl], 3
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="955">
      <instructions>
        <talk>/* VTTTalk glyph 955, char 0x16c7 */
/* GUI generated Sat Feb 22 21:52:40 2020 */

/* Y direction */
YAnchor(0,86)
YShift(0,1)
YDist(0,6)
YShift(6,5)
YAnchor(9,85)
YShift(9,10)
YDist(9,15)
YShift(15,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 955, char 0x16c7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 86
SHP[2], 1
MDRP[m&gt;RBl], 6
SHP[2], 5
MIAP[R], 9, 85
SHP[1], 10
MDRP[m&gt;RBl], 15
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="956">
      <instructions>
        <talk>/* VTTTalk glyph 956, char 0x16c8 */
/* GUI generated Sat Feb 22 21:57:40 2020 */

/* Y direction */
YAnchor(21,85)
YShift(21,5)
YShift(21,25)
YShift(21,2)
YShift(2,3)
YDist(2,9)
YShift(9,8)
YLink(21,20,87)
YShift(20,24)
YAnchor(28,86)
YShift(28,16)
YShift(28,32)
YShift(28,19)
YShift(19,18)
YDist(19,12)
YShift(12,13)
YLink(28,29,87)
YShift(29,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 956, char 0x16c8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 5
SHP[1], 25
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MDRP[m&gt;RBl], 9
SHP[2], 8
SRP0[], 21
MIRP[m&gt;RBl], 20, 87
SHP[2], 24
MIAP[R], 28, 86
SHP[1], 16
SHP[1], 32
SHP[1], 19
SRP1[], 19
SHP[1], 18
SRP0[], 19
MDRP[m&gt;RBl], 12
SHP[2], 13
SRP0[], 28
MIRP[m&gt;RBl], 29, 87
SHP[2], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="957">
      <instructions>
        <talk>/* VTTTalk glyph 957, char 0x16c9 */
/* GUI generated Sat Feb 22 22:01:06 2020 */

/* Y direction */
YAnchor(9,85)
YShift(9,1)
YShift(9,6)
YShift(9,13)
YShift(9,22)
YShift(9,26)
YLink(9,8,87)
YShift(8,7)
YShift(8,12)
YAnchor(19,86)
YShift(19,3)
YLink(19,18,87)
YInterpolate(9,24,20,19)

/* X direction */

Smooth()
XDelta(24,1/2@12..53)
XDelta(27,1/2@12..53)</talk>
        <assembly>/* TT glyph 957, char 0x16c9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 9, 85
SHP[1], 1
SHP[1], 6
SHP[1], 13
SHP[1], 22
SHP[1], 26
MIRP[m&gt;RBl], 8, 87
SHP[2], 7
SHP[2], 12
MIAP[R], 19, 86
SHP[1], 3
MIRP[m&gt;RBl], 18, 87
SRP2[], 9
IP[], 24
IP[], 20
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 24, 32, 12, 53, 72
CALL[], 27, 32, 12, 53, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="958">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16ca */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 12 17  DISABLED for a NON-LATIN glyph */
/* CVT 30 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* Extreme Max */
YShift(10,8)

/* Extreme Min */
YShift(0,2)

Smooth()

</talk>
        <assembly>/* TT glyph 958, char 0x16ca */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
SHP[1], 8
SHP[2], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="959">
      <instructions>
        <talk>/* VTTTalk glyph 959, char 0x16cb */
/* GUI generated Sat Feb 22 22:05:59 2020 */

/* Y direction */
YAnchor(14,85)
YShift(14,6)
YLink(14,15,87)
YAnchor(16,86)
YShift(16,0)
YLink(16,17,87)
YInterpolate(16,3,9,14)
YShift(3,8)
YShift(9,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 959, char 0x16cb */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 85
SHP[1], 6
MIRP[m&gt;RBl], 15, 87
MIAP[R], 16, 86
SHP[1], 0
MIRP[m&gt;RBl], 17, 87
SRP2[], 14
IP[], 3
IP[], 9
SRP1[], 3
SHP[1], 8
SRP1[], 9
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="960">
      <instructions>
        <talk>/* VTTTalk glyph 960, char 0x16cc */
/* GUI generated Sat Feb 22 22:07:12 2020 */

/* Y direction */
YAnchor(5,85)
YShift(5,0)
YAnchor(0)
YShift(5,1)
YLink(5,4,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 960, char 0x16cc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 5, 85
SHP[1], 0
MDAP[R], 0
SRP1[], 5
SHP[1], 1
SRP0[], 5
MIRP[m&gt;RBl], 4, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="961">
      <instructions>
        <talk>/* VTTTalk glyph 961, char 0x16cd */
/* GUI generated Sat Feb 22 22:08:08 2020 */

/* Y direction */
YAnchor(21,85)
YShift(21,17)
YLink(21,20,87)
YShift(21,16)
YAnchor(16)
YShift(16,0)
YShift(16,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 961, char 0x16cd */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 17
MIRP[m&gt;RBl], 20, 87
SHP[1], 16
MDAP[R], 16
SHP[1], 0
SHP[1], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="962">
      <instructions>
        <talk>/* VTTTalk glyph 962, char 0x16ce */
/* GUI generated Sun Feb 23 07:17:56 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,9)
YShift(9,8)
YDist(0,14)
YShift(14,15)
YAnchor(23)
YShift(23,22)
YAnchor(25,85)
YShift(25,11)
YLink(25,24,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 962, char 0x16ce */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
MDRP[m&gt;RBl], 9
SHP[2], 8
MDRP[m&gt;RBl], 14
SHP[2], 15
MDAP[R], 23
SHP[1], 22
MIAP[R], 25, 85
SHP[1], 11
MIRP[m&gt;RBl], 24, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="963">
      <instructions>
        <talk>/* VTTTalk glyph 963, char 0x16cf */
/* GUI generated Sun Feb 23 05:55:45 2020 */

/* Y direction */
YAnchor(11,85)
YShift(11,10)
YDist(11,2)
YShift(2,3)
YAnchor(12,85)
YShift(12,13)
YDist(12,21)
YShift(21,20)
YAnchor(27,86)
YShift(27,23)
YLink(27,26,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 963, char 0x16cf */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 11, 85
SHP[1], 10
MDRP[m&gt;RBl], 2
SHP[2], 3
MIAP[R], 12, 85
SHP[1], 13
MDRP[m&gt;RBl], 21
SHP[2], 20
MIAP[R], 27, 86
SHP[1], 23
MIRP[m&gt;RBl], 26, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="964">
      <instructions>
        <talk>/* VTTTalk glyph 964, char 0x16d0 */
/* GUI generated Sun Feb 23 05:57:22 2020 */

/* Y direction */
YAnchor(11,85)
YShift(11,10)
YDist(11,2)
YShift(2,3)
YAnchor(17,86)
YShift(17,13)
YHalfGrid(16)
YLink(17,16,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 964, char 0x16d0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 11, 85
SHP[1], 10
MDRP[m&gt;RBl], 2
SHP[2], 3
MIAP[R], 17, 86
SHP[1], 13
RTHG[]
MIRP[m&gt;RBl], 16, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="965">
      <instructions>
        <talk>/* VTTTalk glyph 965, char 0x16d1 */
/* GUI generated Sun Feb 23 05:59:04 2020 */

/* Y direction */
YAnchor(27,85)
YShift(27,8)
YShift(27,26)
YDist(27,18)
YShift(18,19)
YAnchor(33,86)
YShift(33,0)
YShift(33,29)
YLink(33,32,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 965, char 0x16d1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 27, 85
SHP[1], 8
SHP[1], 26
MDRP[m&gt;RBl], 18
SHP[2], 19
MIAP[R], 33, 86
SHP[1], 0
SHP[1], 29
MIRP[m&gt;RBl], 32, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="966">
      <instructions>
        <talk>/* VTTTalk glyph 966, char 0x16d2 */
/* GUI generated Sun Feb 23 06:02:28 2020 */

/* Y direction */
YAnchor(20,85)
YLink(20,19,87)
YShift(20,2)
YDist(2,18)
YShift(18,17)
YAnchor(23,86)
YLink(23,24,87)
YInterpolate(23,13,5,15,20)
YShift(13,12)
YShift(15,16)
YShift(23,8)
YDist(8,10)
YShift(10,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 966, char 0x16d2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 20, 85
MIRP[m&gt;RBl], 19, 87
SHP[1], 2
SRP0[], 2
MDRP[m&gt;RBl], 18
SHP[2], 17
MIAP[R], 23, 86
MIRP[m&gt;RBl], 24, 87
SRP2[], 20
SLOOP[], 3
IP[], 13, 5, 15
SRP1[], 13
SHP[1], 12
SRP1[], 15
SHP[1], 16
SRP1[], 23
SHP[1], 8
SRP0[], 8
MDRP[m&gt;RBl], 10
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="967">
      <instructions>
        <talk>/* VTTTalk glyph 967, char 0x16d3 */
/* GUI generated Sun Feb 23 06:04:44 2020 */

/* Y direction */
YAnchor(21,85)
YShift(21,1)
YLink(21,20,87)
YAnchor(27,86)
YShift(27,3)
YLink(27,26,87)
YInterpolate(27,5,13,21)
YShift(5,6)
YDist(5,4)
YShift(4,11)
YShift(13,14)
YDist(13,12)
YShift(12,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 967, char 0x16d3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 1
MIRP[m&gt;RBl], 20, 87
MIAP[R], 27, 86
SHP[1], 3
MIRP[m&gt;RBl], 26, 87
SRP2[], 21
IP[], 5
IP[], 13
SRP1[], 5
SHP[1], 6
SRP0[], 5
MDRP[m&gt;RBl], 4
SHP[2], 11
SRP1[], 13
SHP[1], 14
SRP0[], 13
MDRP[m&gt;RBl], 12
SHP[2], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="968">
      <instructions>
        <talk>/* VTTTalk glyph 968, char 0x16d4 */
/* GUI generated Sun Feb 23 06:10:34 2020 */

/* Y direction */
YAnchor(44,85)
YShift(44,26)
YDist(26,42)
YShift(42,6)
YShift(42,41)
YAnchor(47,86)
YInterpolate(47,37,29,39,44)
YShift(37,18)
YShift(37,36)
YShift(39,0)
YShift(39,40)
YShift(47,32)
YDist(32,34)
YShift(34,12)
YShift(34,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 968, char 0x16d4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 44, 85
SHP[1], 26
SRP0[], 26
MDRP[m&gt;RBl], 42
SHP[2], 6
SHP[2], 41
MIAP[R], 47, 86
SRP2[], 44
SLOOP[], 3
IP[], 37, 29, 39
SRP1[], 37
SHP[1], 18
SHP[1], 36
SRP1[], 39
SHP[1], 0
SHP[1], 40
SRP1[], 47
SHP[1], 32
SRP0[], 32
MDRP[m&gt;RBl], 34
SHP[2], 12
SHP[2], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="969">
      <instructions>
        <talk>/* VTTTalk glyph 969, char 0x16d5 */
/* GUI generated Sun Feb 23 06:12:37 2020 */

/* Y direction */
YAnchor(14,86)
YShift(14,3)
YShift(14,4)
YShift(14,15)
YLink(14,13,87)
YShift(13,16)
YAnchor(21,85)
YShift(21,2)
YShift(21,6)
YShift(21,24)
YInterpolate(14,5,8,21)
YLink(21,22,87)
YShift(22,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 969, char 0x16d5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 14, 86
SHP[1], 3
SHP[1], 4
SHP[1], 15
MIRP[m&gt;RBl], 13, 87
SHP[2], 16
MIAP[R], 21, 85
SHP[1], 2
SHP[1], 6
SHP[1], 24
SRP2[], 14
IP[], 5
IP[], 8
MIRP[m&gt;RBl], 22, 87
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="970">
      <instructions>
        <talk>/* VTTTalk glyph 970, char 0x16d6 */
/* GUI generated Sun Feb 23 06:17:06 2020 */

/* Y direction */
YAnchor(1,85)
YShift(1,6)
YLink(1,0,87)
YShift(0,7)
YShift(1,17)
YDist(17,28)
YShift(28,27)
YShift(1,21)
YShift(21,20)
YDist(21,26)
YAnchor(11,86)
YLink(11,10,87)
YShift(11,12)
YShift(11,24)
YShift(11,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 970, char 0x16d6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 1, 85
SHP[1], 6
MIRP[m&gt;RBl], 0, 87
SHP[2], 7
SHP[1], 17
SRP0[], 17
MDRP[m&lt;RGr], 28
SHP[2], 27
SRP1[], 1
SHP[1], 21
SRP1[], 21
SHP[1], 20
SRP0[], 21
MDRP[m&gt;RBl], 26
MIAP[R], 11, 86
MIRP[m&gt;RBl], 10, 87
SHP[1], 12
SHP[1], 24
SHP[1], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="971">
      <instructions>
        <talk>/* VTTTalk glyph 971, char 0x16d7 */
/* GUI generated Sun Feb 23 06:25:27 2020 */

/* Y direction */
YAnchor(1,85)
YShift(1,5)
YLink(1,0,87)
YDist(0,7)
YShift(1,17)
YDist(17,36)
YShift(1,21)
YDist(21,40)
YAnchor(12,86)
YShift(12,11)
YShift(12,24)
YShift(12,31)
YLink(12,13,87)
YShift(13,10)
YInterpolate(12,26,29,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 971, char 0x16d7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 1, 85
SHP[1], 5
MIRP[M&gt;RBl], 0, 87
MDRP[m&lt;RGr], 7
SRP1[], 1
SHP[1], 17
SRP0[], 17
MDRP[m&lt;RGr], 36
SRP1[], 1
SHP[1], 21
SRP0[], 21
MDRP[m&gt;RBl], 40
MIAP[R], 12, 86
SHP[1], 11
SHP[1], 24
SHP[1], 31
MIRP[m&gt;RBl], 13, 87
SHP[2], 10
SRP2[], 1
IP[], 26
IP[], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="972">
      <instructions>
        <talk>/* VTTTalk glyph 972, char 0x16d8 */
/* GUI generated Sun Feb 23 06:27:51 2020 */

/* Y direction */
YAnchor(29,85)
YShift(29,1)
YShift(29,11)
YShift(29,23)
YShift(29,34)
YShift(29,37)
YLink(29,28,87)
YShift(28,35)
YShift(28,36)
YAnchor(43,86)
YShift(43,3)
YLink(43,42,87)
YInterpolate(29,4,43)
YShift(4,18)
YDist(4,17)
YShift(17,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 972, char 0x16d8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 29, 85
SHP[1], 1
SHP[1], 11
SHP[1], 23
SHP[1], 34
SHP[1], 37
MIRP[m&gt;RBl], 28, 87
SHP[2], 35
SHP[2], 36
MIAP[R], 43, 86
SHP[1], 3
MIRP[m&gt;RBl], 42, 87
SRP2[], 29
IP[], 4
SRP1[], 4
SHP[1], 18
SRP0[], 4
MDRP[m&gt;RBl], 17
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="973">
      <instructions>
        <talk>/* VTTTalk glyph 973, char 0x16d9 */
/* GUI generated Sun Feb 23 06:29:51 2020 */

/* Y direction */
YAnchor(23,86)
YShift(23,19)
YLink(23,22,87)
YDist(23,18)
YShift(18,0)
YShift(18,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 973, char 0x16d9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 23, 86
SHP[1], 19
MIRP[m&gt;RBl], 22, 87
MDRP[m&lt;RGr], 18
SHP[2], 0
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="974">
      <instructions>
        <talk>/* VTTTalk glyph 974, char 0x16da */
/* GUI generated Sun Feb 23 06:31:27 2020 */

/* Y direction */
YAnchor(2,85)
YShift(2,3)
YLink(2,11,87)
YShift(11,10)
YAnchor(17,86)
YShift(17,13)
YLink(17,16,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 974, char 0x16da */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 2, 85
SHP[1], 3
MIRP[m&gt;RBl], 11, 87
SHP[2], 10
MIAP[R], 17, 86
SHP[1], 13
MIRP[m&gt;RBl], 16, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="975">
      <instructions>
        <talk>/* VTTTalk glyph 975, char 0x16db */
/* GUI generated Sun Feb 23 06:32:54 2020 */

/* Y direction */
YAnchor(18,85)
YShift(18,8)
YShift(18,19)
YDist(18,27)
YShift(27,26)
YAnchor(33,86)
YShift(33,0)
YShift(33,29)
YLink(33,32,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 975, char 0x16db */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 18, 85
SHP[1], 8
SHP[1], 19
MDRP[m&gt;RBl], 27
SHP[2], 26
MIAP[R], 33, 86
SHP[1], 0
SHP[1], 29
MIRP[m&gt;RBl], 32, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="976">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16dc */
/* ACT generated Thu Feb 20 17:43:54 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,6) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 976, char 0x16dc */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="977">
      <instructions>
        <talk>/* VTTTalk glyph 977, char 0x16dd */
/* GUI generated Sun Feb 23 06:36:36 2020 */

/* Y direction */
YAnchor(16,86)
YShift(16,0)
YShift(16,11)
YShift(16,15)
YLink(16,17,87)
YShift(17,14)
YAnchor(22,85)
YShift(22,2)
YShift(22,9)
YShift(22,25)
YInterpolate(16,1,10,22)
YShift(1,4)
YShift(10,7)
YLink(22,23,87)
YShift(23,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 977, char 0x16dd */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 16, 86
SHP[1], 0
SHP[1], 11
SHP[1], 15
MIRP[m&gt;RBl], 17, 87
SHP[2], 14
MIAP[R], 22, 85
SHP[1], 2
SHP[1], 9
SHP[1], 25
SRP2[], 16
IP[], 1
IP[], 10
SRP1[], 1
SHP[1], 4
SRP1[], 10
SHP[1], 7
MIRP[m&gt;RBl], 23, 87
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="978">
      <instructions>
        <talk>/* VTTTalk glyph 978, char 0x16de */
/* GUI generated Sun Feb 23 07:22:50 2020 */

/* Y direction */
YAnchor(7,85)
YShift(7,4)
YShift(7,26)
YLink(7,6,87)
YShift(6,17)
YShift(7,16)
YShift(16,11)
YShift(16,19)
YAnchor(23,86)
YShift(23,10)
YShift(23,20)
YShift(23,0)
YShift(0,3)
YShift(0,27)
YLink(23,22,87)
YShift(22,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 978, char 0x16de */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 85
SHP[1], 4
SHP[1], 26
MIRP[m&gt;RBl], 6, 87
SHP[2], 17
SHP[1], 16
SRP1[], 16
SHP[1], 11
SHP[1], 19
MIAP[R], 23, 86
SHP[1], 10
SHP[1], 20
SHP[1], 0
SRP1[], 0
SHP[1], 3
SHP[1], 27
MIRP[m&gt;RBl], 22, 87
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="979">
      <instructions>
        <talk>/* VTTTalk glyph 979, char 0x16df */
/* GUI generated Sun Feb 23 07:24:33 2020 */

/* Y direction */
YAnchor(7,85)
YShift(7,2)
YAnchor(13,86)
YShift(13,5)
YShift(13,9)
YShift(13,14)
YLink(13,12,87)
YShift(12,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 979, char 0x16df */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 85
SHP[1], 2
MIAP[R], 13, 86
SHP[1], 5
SHP[1], 9
SHP[1], 14
MIRP[m&gt;RBl], 12, 87
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="980">
      <instructions>
        <talk>/* VTTTalk glyph 980, char 0x16e0 */
/* GUI generated Sun Feb 23 07:28:19 2020 */

/* Y direction */
YAnchor(10,85)
YShift(10,11)
YAnchor(23,86)
YShift(23,19)
YLink(23,22,87)
YAnchor(26,85)
YShift(26,6)
YShift(26,13)
YShift(26,29)
YShift(26,9)
YShift(9,8)
YLink(9,2,87)
YShift(2,3)
YLink(9,17,87)
YShift(17,16)
YLink(26,27,87)
YShift(27,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 980, char 0x16e0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 10, 85
SHP[1], 11
MIAP[R], 23, 86
SHP[1], 19
MIRP[m&gt;RBl], 22, 87
MIAP[R], 26, 85
SHP[1], 6
SHP[1], 13
SHP[1], 29
SHP[1], 9
SRP1[], 9
SHP[1], 8
SRP0[], 9
MIRP[m&gt;RBl], 2, 87
SHP[2], 3
MIRP[m&gt;RBl], 17, 87
SHP[2], 16
SRP0[], 26
MIRP[m&gt;RBl], 27, 87
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="981">
      <instructions>
        <talk>/* VTTTalk glyph 981, char 0x16e1 */
/* GUI generated Sun Feb 23 07:32:27 2020 */

/* Y direction */
YAnchor(26,85)
YShift(26,22)
YLink(26,27,87)
YAnchor(31,86)
YShift(31,23)
YLink(31,30,87)
YInterpolate(31,11,3,26)
YShift(11,12)
YDist(11,17)
YShift(17,16)
YShift(3,2)
YDist(3,7)
YShift(7,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 981, char 0x16e1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 26, 85
SHP[1], 22
MIRP[m&gt;RBl], 27, 87
MIAP[R], 31, 86
SHP[1], 23
MIRP[m&gt;RBl], 30, 87
SRP2[], 26
IP[], 11
IP[], 3
SRP1[], 11
SHP[1], 12
SRP0[], 11
MDRP[m&gt;RBl], 17
SHP[2], 16
SRP1[], 3
SHP[1], 2
SRP0[], 3
MDRP[m&gt;RBl], 7
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="982">
      <instructions>
        <talk>/* VTTTalk glyph 982, char 0x16e2 */
/* GUI generated Sun Feb 23 07:35:06 2020 */

/* Y direction */
YAnchor(23,85)
YShift(23,8)
YShift(23,19)
YShift(23,6)
YShift(6,7)
YDist(6,12)
YShift(12,11)
YLink(23,22,87)
YShift(22,18)
YAnchor(29,86)
YShift(29,17)
YShift(29,33)
YShift(29,15)
YShift(15,16)
YDist(15,3)
YShift(3,2)
YDist(29,28)
YShift(28,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 982, char 0x16e2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 8
SHP[1], 19
SHP[1], 6
SRP1[], 6
SHP[1], 7
SRP0[], 6
MDRP[m&gt;RBl], 12
SHP[2], 11
SRP0[], 23
MIRP[m&gt;RBl], 22, 87
SHP[2], 18
MIAP[R], 29, 86
SHP[1], 17
SHP[1], 33
SHP[1], 15
SRP1[], 15
SHP[1], 16
SRP0[], 15
MDRP[m&gt;RBl], 3
SHP[2], 2
SRP0[], 29
MDRP[m&gt;RBl], 28
SHP[2], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="983">
      <instructions>
        <talk>/* VTTTalk glyph 983, char 0x16e3 */
/* GUI generated Sun Feb 23 07:37:34 2020 */

/* Y direction */
YAnchor(11,86)
YShift(11,3)
YShift(11,7)
YShift(11,15)
YShift(11,16)
YShift(11,20)
YLink(11,10,87)
YShift(10,6)
YShift(10,17)
YAnchor(26,85)
YShift(26,2)
YLink(26,27,87)
YInterpolate(11,13,22,26)

/* X direction */

Smooth()
XDelta(12,-1/2@12..38)
XDelta(13,-1/2@12..38)
</talk>
        <assembly>/* TT glyph 983, char 0x16e3 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 11, 86
SHP[1], 3
SHP[1], 7
SHP[1], 15
SHP[1], 16
SHP[1], 20
MIRP[m&gt;RBl], 10, 87
SHP[2], 6
SHP[2], 17
MIAP[R], 26, 85
SHP[1], 2
MIRP[m&gt;RBl], 27, 87
SRP2[], 11
IP[], 13
IP[], 22
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 12, -32, 12, 38, 72
CALL[], 13, -32, 12, 38, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="984">
      <instructions>
        <talk>/* VTTTalk glyph 984, char 0x16e4 */
/* GUI generated Sun Feb 23 07:42:21 2020 */

/* Y direction */
YAnchor(31,86)
YShift(31,3)
YShift(31,4)
YShift(31,11)
YShift(31,12)
YShift(31,18)
YShift(31,27)
YShift(31,32)
YLink(31,30,87)
YShift(30,26)
YShift(30,33)
YAnchor(41,85)
YShift(41,1)
YShift(41,6)
YShift(41,9)
YShift(41,14)
YShift(41,22)
YShift(41,38)
YShift(41,45)
YLink(41,40,87)
YShift(40,39)
YShift(40,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 984, char 0x16e4 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 31, 86
SHP[1], 3
SHP[1], 4
SHP[1], 11
SHP[1], 12
SHP[1], 18
SHP[1], 27
SHP[1], 32
MIRP[m&gt;RBl], 30, 87
SHP[2], 26
SHP[2], 33
MIAP[R], 41, 85
SHP[1], 1
SHP[1], 6
SHP[1], 9
SHP[1], 14
SHP[1], 22
SHP[1], 38
SHP[1], 45
MIRP[m&gt;RBl], 40, 87
SHP[2], 39
SHP[2], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="985">
      <instructions>
        <talk>/* VTTTalk glyph 985, char 0x16e5 */
/* GUI generated Sun Feb 23 07:47:20 2020 */

/* Y direction */
YAnchor(7,85)
YShift(7,11)
YLink(7,6,87)
YShift(6,12)
YAnchor(18,86)
YShift(18,0)
YInterpolate(18,20,29,34,22,25,36,41,9,7)
YLink(18,17,87)
YShift(17,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 985, char 0x16e5 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 85
SHP[1], 11
MIRP[m&gt;RBl], 6, 87
SHP[2], 12
MIAP[R], 18, 86
SHP[1], 0
SRP2[], 7
SLOOP[], 8
IP[], 20, 29, 34, 22, 25, 36, 41, 9
MIRP[m&gt;RBl], 17, 87
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="986">
      <instructions>
        <talk>/* VTTTalk glyph 986, char 0x16e6 */
/* GUI generated Sun Feb 23 07:49:39 2020 */

/* Y direction */
YAnchor(35,86)
YShift(35,3)
YShift(35,13)
YShift(35,14)
YShift(35,31)
YShift(35,36)
YLink(35,34,87)
YShift(34,30)
YShift(34,37)
YAnchor(42,85)
YShift(42,2)
YLink(42,43,87)
YInterpolate(35,21,42)
YShift(21,8)
YDist(21,20)
YShift(20,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 986, char 0x16e6 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 35, 86
SHP[1], 3
SHP[1], 13
SHP[1], 14
SHP[1], 31
SHP[1], 36
MIRP[m&gt;RBl], 34, 87
SHP[2], 30
SHP[2], 37
MIAP[R], 42, 85
SHP[1], 2
MIRP[m&gt;RBl], 43, 87
SRP2[], 35
IP[], 21
SRP1[], 21
SHP[1], 8
SRP0[], 21
MDRP[m&gt;RBl], 20
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="987">
      <instructions>
        <talk>/* VTTTalk glyph 987, char 0x16e7 */
/* GUI generated Sun Feb 23 07:51:28 2020 */

/* Y direction */
YAnchor(7,86)
YDist(7,2)
YShift(7,3)
YLink(7,6,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 987, char 0x16e7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 7, 86
MDRP[m&lt;RGr], 2
SHP[1], 3
MIRP[m&gt;RBl], 6, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="988">
      <instructions>
        <talk>/* VTTTalk glyph 988, char 0x16e8 */
/* GUI generated Sun Feb 23 07:53:12 2020 */

/* Y direction */
YAnchor(21,85)
YShift(21,20)
YShift(21,23)
YDist(21,12)
YShift(12,13)
YDist(21,31)
YShift(31,30)
YAnchor(43,86)
YShift(43,1)
YShift(43,42)
YDist(43,9)
YShift(9,8)
YDist(43,34)
YShift(34,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 988, char 0x16e8 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 20
SHP[1], 23
MDRP[m&gt;RBl], 12
SHP[2], 13
MDRP[m&gt;RBl], 31
SHP[2], 30
MIAP[R], 43, 86
SHP[1], 1
SHP[1], 42
MDRP[m&gt;RBl], 9
SHP[2], 8
MDRP[m&gt;RBl], 34
SHP[2], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="989">
      <instructions>
        <talk>/* VTTTalk glyph 989, char 0x16e9 */
/* GUI generated Sun Feb 23 07:55:36 2020 */

/* Y direction */
YAnchor(15,85)
YLink(15,16,87)
YShift(15,5)
YDist(5,11)
YAnchor(20,86)
YShift(20,7)
YLink(20,19,87)
YInterpolate(20,2,3,12,15)
YDist(2,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 989, char 0x16e9 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 15, 85
MIRP[m&gt;RBl], 16, 87
SHP[1], 5
SRP0[], 5
MDRP[m&gt;RBl], 11
MIAP[R], 20, 86
SHP[1], 7
MIRP[m&gt;RBl], 19, 87
SRP2[], 15
SLOOP[], 3
IP[], 2, 3, 12
SRP0[], 2
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="990">
      <instructions>
        <talk>/* VTTTalk glyph 990, char 0x16ea */
/* GUI generated Sun Feb 23 07:57:03 2020 */

/* Y direction */
YAnchor(8,86)
YAnchor(13,85)
YIPAnchor(13,5,0,8)
YInterpolate(5,17,11,0)
YDist(5,4)
YDist(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 990, char 0x16ea */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 8, 86
MIAP[R], 13, 85
SRP2[], 8
IP[], 5
IP[], 0
MDAP[R], 5
MDAP[R], 0
SRP2[], 5
IP[], 17
IP[], 11
SRP0[], 5
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="991">
      <instructions>
        <talk>/* VTTTalk glyph 991, char 0x16eb */
/* GUI generated Sun Feb 23 07:57:35 2020 */

/* Y direction */
YAnchor(0)
YDist(0,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 991, char 0x16eb */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="992">
      <instructions>
        <talk>/* VTTTalk glyph 992, char 0x16ec */
/* GUI generated Sun Feb 23 07:57:49 2020 */

/* Y direction */
YAnchor(0)
YDist(0,7)
YDist(7,13)
YDist(13,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 992, char 0x16ec */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 7
MDRP[M&lt;RWh], 13
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="993">
      <instructions>
        <talk>/* VTTTalk glyph 993, char 0x16ed */
/* GUI generated Sun Feb 23 07:58:23 2020 */

/* Y direction */
YAnchor(0)
YAnchor(5)
YInterpolate(5,7,1,0)
YShift(7,4)
YShift(1,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 993, char 0x16ed */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IP[], 7
IP[], 1
SRP1[], 7
SHP[1], 4
SRP1[], 1
SHP[1], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="994">
      <instructions>
        <talk>/* VTTTalk glyph 994, char 0x16ee */
/* GUI generated Sun Feb 23 08:00:18 2020 */

/* Y direction */
YAnchor(2,85)
YShift(2,3)
YDist(2,11)
YShift(11,10)
YAnchor(24,86)
YShift(24,13)
YLink(24,23,87)
YInterpolate(24,16,2)
YShift(16,15)
YDist(16,17)
YShift(17,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 994, char 0x16ee */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 2, 85
SHP[1], 3
MDRP[m&gt;RBl], 11
SHP[2], 10
MIAP[R], 24, 86
SHP[1], 13
MIRP[m&gt;RBl], 23, 87
SRP2[], 2
IP[], 16
SRP1[], 16
SHP[1], 15
SRP0[], 16
MDRP[m&gt;RBl], 17
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="995">
      <instructions>
        <talk>/* VTTTalk glyph 995, char 0x16ef */
/* GUI generated Sun Feb 23 08:03:18 2020 */

/* Y direction */
YAnchor(57,85)
YShift(57,1)
YShift(57,11)
YShift(57,23)
YShift(57,54)
YShift(57,61)
YLink(57,56,87)
YShift(56,55)
YShift(56,60)
YAnchor(71,86)
YShift(71,3)
YShift(71,37)
YShift(71,38)
YShift(71,67)
YShift(71,72)
YInterpolate(71,44,17,57)
YShift(44,33)
YDist(44,45)
YShift(45,32)
YShift(17,19)
YDist(17,4)
YShift(4,18)
YLink(71,70,87)
YShift(70,66)
YShift(70,73)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 995, char 0x16ef */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 57, 85
SHP[1], 1
SHP[1], 11
SHP[1], 23
SHP[1], 54
SHP[1], 61
MIRP[m&gt;RBl], 56, 87
SHP[2], 55
SHP[2], 60
MIAP[R], 71, 86
SHP[1], 3
SHP[1], 37
SHP[1], 38
SHP[1], 67
SHP[1], 72
SRP2[], 57
IP[], 44
IP[], 17
SRP1[], 44
SHP[1], 33
SRP0[], 44
MDRP[m&gt;RBl], 45
SHP[2], 32
SRP1[], 17
SHP[1], 19
SRP0[], 17
MDRP[m&gt;RBl], 4
SHP[2], 18
SRP0[], 71
MIRP[m&gt;RBl], 70, 87
SHP[2], 66
SHP[2], 73
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="996">
      <instructions>
        <talk>/* VTTTalk glyph 996, char 0x16f0 */
/* GUI generated Sun Feb 23 08:04:43 2020 */

/* Y direction */
YAnchor(41,85)
YShift(41,37)
YLink(41,40,87)
YAnchor(47,86)
YShift(47,39)
YLink(47,46,87)
YInterpolate(47,0,10,41)
YShift(0,20)
YShift(10,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 996, char 0x16f0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 41, 85
SHP[1], 37
MIRP[m&gt;RBl], 40, 87
MIAP[R], 47, 86
SHP[1], 39
MIRP[m&gt;RBl], 46, 87
SRP2[], 41
IP[], 0
IP[], 10
SRP1[], 0
SHP[1], 20
SRP1[], 10
SHP[1], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="997">
      <instructions>
        <talk>/* VTTTalk glyph 997, char 0x1c2 */
/* GUI generated Wed Feb 26 22:35:51 2020 */

/* Y direction */
YAnchor(0)
YAnchor(2)
YIPAnchor(0,4,8,2)
YDist(4,5)
YDist(8,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 997, char 0x1c2 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IP[], 4
IP[], 8
MDAP[R], 4
MDAP[R], 8
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 8
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="998">
      <instructions>
        <talk>/* VTTTalk glyph 998, char 0x1c0 */
/* GUI generated Wed Feb 26 22:36:17 2020 */

/* Y direction */
YAnchor(0)
YAnchor(2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 998, char 0x1c0 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="999">
      <instructions>
        <talk>/* VTTTalk glyph 999, char 0x1c1 */
/* GUI generated Wed Feb 26 22:36:48 2020 */

/* Y direction */
YAnchor(3)
YShift(3,7)
YAnchor(5)
YShift(5,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 999, char 0x1c1 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 7
MDAP[R], 5
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1000">
      <instructions>
        <talk>/* dotlessi with ogonek */</talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OVERLAP[]
OFFSET[R], 818, 553, 10
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1001">
      <instructions>
        <talk>/* a with rhotic hook */</talk>
        <assembly>/* TT glyph 1001, char 0xffff */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1002">
      <instructions>
        <talk>/* VTTTalk glyph 1002, char 0x2f7 */
/* GUI generated Sat Apr 25 07:33:14 2020 */

/* Y direction */
YAnchor(0)
YShift(0,13)
YDist(0,4,&gt;=)
YShift(4,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1002, char 0x2f7 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 13
MDRP[m&gt;RGr], 4
SHP[2], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1003">
      <instructions>
        <talk>/* VTTTalk glyph 1003, char 0xa76d */
/* GUI generated Mon May 11 07:25:55 2020 */

/* Y direction */
YAnchor(0,15)
YDist(0,6)
YShift(0,9)
YDist(0,13)
YAnchor(23,1)
YDist(23,41)
YIPAnchor(0,32,23)
YDist(32,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 1003, char 0xa76d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MDRP[m&lt;RGr], 6
SHP[1], 9
MDRP[m&gt;RBl], 13
MIAP[R], 23, 1
MDRP[m&gt;RBl], 41
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1004">
      <instructions>
        <talk>/* VTTTalk glyph 1004, char 0xa779 */
/* GUI generated Sat May 16 18:47:11 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,18,68)
YAnchor(38,2)
YShift(38,31)
YLink(38,27,67)
YInterpolate(27,10,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1004, char 0xa779 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 18, 68
MIAP[R], 38, 2
SHP[1], 31
MIRP[m&gt;RBl], 27, 67
IP[], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1005">
      <instructions>
        <talk>/* VTTTalk glyph 1005, char 0xa77b */
/* GUI generated Sat May 16 18:48:55 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,3)
YDist(8,6,&gt;=)
YShift(8,24)
YAnchor(24)
YDist(24,31)
YDist(24,35)
YIPAnchor(0,18,24)
YLink(18,17,67)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 1005, char 0xa77b */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 3
MDRP[m&gt;RBl], 6
SHP[1], 24
MDAP[R], 24
MDRP[m&gt;RBl], 31
MDRP[m&gt;RBl], 35
SRP2[], 0
IP[], 18
MDAP[R], 18
MIRP[m&gt;RBl], 17, 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1006">
      <instructions>
        <talk>/* VTTTalk glyph 1006, char 0xa77d */
/* GUI generated Sat May 16 18:51:16 2020 */

/* Y direction */
YAnchor(0)
YDist(0,53)
YAnchor(30,2)
YShift(30,25)
YLink(30,22,67,&gt;=)
YInterpolate(22,20,30)
YShift(20,37)
YInterpolate(0,62,30)
YDist(62,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 1006, char 0xa77d */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 53
MIAP[R], 30, 2
SHP[1], 25
MIRP[m&gt;RBl], 22, 67
IP[], 20
SRP1[], 20
SHP[1], 37
SRP1[], 0
SRP2[], 30
IP[], 62
SRP0[], 62
MDRP[m&lt;RGr], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1007">
      <instructions>
        <talk>/* VTTTalk glyph 1007, char 0xa782 */
/* GUI generated Sat May 16 18:52:51 2020 */

/* Y direction */
YAnchor(0,9)
YAnchor(31,3)
YLink(31,21,68)
YShift(31,8)
YAnchor(8)
YDist(8,6,&gt;=)
YAnchor(38,8)
YShift(38,15)
YLink(38,39,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1007, char 0xa782 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIAP[R], 31, 3
MIRP[m&gt;RBl], 21, 68
SHP[1], 8
MDAP[R], 8
MDRP[m&gt;RBl], 6
MIAP[R], 38, 8
SHP[1], 15
MIRP[m&gt;RBl], 39, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1008">
      <instructions>
        <talk>/* VTTTalk glyph 1008, char 0xa784 */
/* GUI generated Sat May 16 18:53:57 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,3)
YDist(8,6,&gt;=)
YShift(8,20)
YAnchor(20)
YDist(20,27)
YDist(20,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1008, char 0xa784 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 3
MDRP[m&gt;RBl], 6
SHP[1], 20
MDAP[R], 20
MDRP[m&gt;RBl], 27
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1009">
      <instructions>
        <talk>/* VTTTalk glyph 1009, char 0xa786 */
/* GUI generated Sat May 16 18:55:36 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,18,68)
YAnchor(40,2)
YShift(40,35)
YDist(40,32,&gt;=)
YInterpolate(32,8,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 1009, char 0xa786 */
/* VTT 6.31 compiler Sat May 16 18:56:27 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 18, 68
MIAP[R], 40, 2
SHP[1], 35
MDRP[m&gt;RBl], 32
IP[], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1010">
      <instructions>
        <talk>/* VTTTalk glyph 1010, char 0xffff */
/* GUI generated Sun May 17 08:13:48 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YAnchor(37,75)
YShift(37,30)
YLink(37,26,79,&gt;=)
YShift(26,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1010, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:24:08 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
MIAP[R], 37, 75
SHP[1], 30
MIRP[m&gt;RBl], 26, 79
SHP[2], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1011">
      <instructions>
        <talk>/* VTTTalk glyph 1011, char 0xffff */
/* GUI generated Sun May 17 08:15:47 2020 */

/* Y direction */
YAnchor(0)
YAnchor(1,77)
YAnchor(8,76)
YDist(8,6,&gt;=)
YIPAnchor(8,18,1)
YLink(18,17,81)
YShift(8,24)
YAnchor(24)
YDist(24,31)
YDist(24,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1011, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:25:12 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 1, 77
MIAP[R], 8, 76
MDRP[m&gt;RBl], 6
SRP2[], 1
IP[], 18
MDAP[R], 18
MIRP[m&gt;RBl], 17, 81
SRP1[], 8
SHP[1], 24
MDAP[R], 24
MDRP[m&gt;RBl], 31
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1012">
      <instructions>
        <talk>/* VTTTalk glyph 1012, char 0xffff */
/* GUI generated Sun May 17 08:18:32 2020 */

/* Y direction */
YAnchor(0)
YLink(0,53,80)
YAnchor(30,75)
YShift(30,19)
YShift(30,24)
YShift(30,37)
YDist(30,21,&gt;=)
YShift(21,36)
YIPAnchor(30,61,0)
YDist(61,9,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1012, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:18:32 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 53, 80
MIAP[R], 30, 75
SHP[1], 19
SHP[1], 24
SHP[1], 37
MDRP[m&gt;RBl], 21
SHP[2], 36
SRP2[], 0
IP[], 61
MDAP[R], 61
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1013">
      <instructions>
        <talk>/* VTTTalk glyph 1013, char 0xffff */
/* GUI generated Sun May 17 08:20:00 2020 */

/* Y direction */
YAnchor(0)
YAnchor(31,76)
YLink(31,22,80)
YShift(31,8)
YAnchor(8)
YDist(8,6,&gt;=)
YAnchor(39,77)
YShift(39,15)
YLink(39,40,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1013, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:25:31 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 31, 76
MIRP[m&gt;RBl], 22, 80
SHP[1], 8
MDAP[R], 8
MDRP[m&gt;RBl], 6
MIAP[R], 39, 77
SHP[1], 15
MIRP[m&gt;RBl], 40, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1014">
      <instructions>
        <talk>/* VTTTalk glyph 1014, char 0xffff */
/* GUI generated Sun May 17 08:21:15 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,76)
YDist(8,6,&gt;=)
YShift(8,20)
YAnchor(20)
YDist(20,27)
YDist(20,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1014, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:25:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 76
MDRP[m&gt;RBl], 6
SHP[1], 20
MDAP[R], 20
MDRP[m&gt;RBl], 27
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1015">
      <instructions>
        <talk>/* VTTTalk glyph 1015, char 0xffff */
/* GUI generated Sun May 17 08:23:01 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YAnchor(40,75)
YShift(40,35)
YDist(40,32,&gt;=)
YShift(32,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1015, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:23:53 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
MIAP[R], 40, 75
SHP[1], 35
MDRP[m&gt;RBl], 32
SHP[2], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1016">
      <instructions>
        <talk>/* VTTTalk glyph 1002, char 0xffff */
/* GUI generated Wed Feb 26 22:38:43 2020 */

/* Y direction */
YAnchor(0)
YShift(0,6)
YDist(0,17)
YShift(0,58)
YAnchor(30)
YShift(30,35)
YDist(30,44)
YShift(30,63)
YInterpolate(30,51,23,0)

/* X direction */

Smooth()






</talk>
        <assembly>/* TT glyph 1016, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:11:31 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDRP[m&gt;RBl], 17
SHP[1], 58
MDAP[R], 30
SHP[1], 35
MDRP[m&gt;RBl], 44
SHP[1], 63
SRP2[], 0
IP[], 51
IP[], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1017">
      <instructions>
        <talk>/* VTTTalk glyph 1003, char 0xffff */
/* GUI generated Wed Feb 26 22:38:43 2020 */

/* Y direction */
YAnchor(0)
YShift(0,6)
YDist(0,17)
YShift(0,58)
YAnchor(30)
YShift(30,35)
YDist(30,44)
YShift(30,63)
YInterpolate(30,51,23,0)

/* X direction */

Smooth()




</talk>
        <assembly>/* TT glyph 1017, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:11:49 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDRP[m&gt;RBl], 17
SHP[1], 58
MDAP[R], 30
SHP[1], 35
MDRP[m&gt;RBl], 44
SHP[1], 63
SRP2[], 0
IP[], 51
IP[], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1018">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Feb 26 22:33:50 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(54)	/* min */
YAnchor(60)	/* max */

/* YDir: Stroke #0 */
YInterpolate(60,29,54)
YAnchor(29)
ResYDist(29,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(60,0,54)
YAnchor(0)
ResYDist(0,15) /*perpendicular to the stroke*/

Smooth()




</talk>
        <assembly>/* TT glyph 1018, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:12:06 2020 */
SVTCA[Y]
MDAP[R], 54
MDAP[R], 60
SRP2[], 54
IP[], 29
MDAP[R], 29
CALL[], 29, 41, 106
SRP1[], 60
SRP2[], 54
IP[], 0
MDAP[R], 0
CALL[], 0, 15, 106
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1019">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Wed Feb 26 22:33:50 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(54)	/* min */
YAnchor(60)	/* max */

/* YDir: Stroke #0 */
YInterpolate(60,29,54)
YAnchor(29)
ResYDist(29,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(60,0,54)
YAnchor(0)
ResYDist(0,15) /*perpendicular to the stroke*/

Smooth()





</talk>
        <assembly>/* TT glyph 1019, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:12:26 2020 */
SVTCA[Y]
MDAP[R], 54
MDAP[R], 60
SRP2[], 54
IP[], 29
MDAP[R], 29
CALL[], 29, 41, 106
SRP1[], 60
SRP2[], 54
IP[], 0
MDAP[R], 0
CALL[], 0, 15, 106
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
  </glyf>
</ttFont>