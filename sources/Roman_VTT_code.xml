<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttVttLibVersion="1.0">
  <fpgm>
    <assembly>/* Font-program */
/* ACT generated Wed Jun 10 12:39:16 2015 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in �1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instruction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)� */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)�&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend� */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend�&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add � denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said � denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-�,+�] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-�,+�] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d� &lt;= w� or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d� - w�&gt;, &lt;d� - w�&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d� - w�&gt;, &lt;sqrt(d� - w�)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d� - w� =: dx&gt;, &lt;w�sqrt(d� - w�) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1�pv| &lt; 1/16 means fv1 is within �arcsin(1/16) or �3.5833� perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in � 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in � 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]






</assembly>
  </fpgm>
  <prep>
    <assembly>/* auto-generated pre-program */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 2047
GT[]
MPPEM[]
#PUSH, 6
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* ScanCtrl */
SCANCTRL[], 511

/* ScanType */
SCANTYPE[], 4

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

WS[], 16, 0
/* LinearAdvanceWidths */
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 40, 2, 85
CALL[], 9, 40, 8, 85
SVTCA[Y]
CALL[], 65, 89
SVTCA[Y]
CALL[], 67, 89
SVTCA[Y]
CALL[], 0, 89
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
SVTCA[Y]
CALL[], 14, 89
CALL[], 1, 205, 0, 85
CALL[], 7, 40, 6, 85
CALL[], 11, 40, 10, 85
CALL[], 15, 35, 14, 85
SVTCA[Y]
CALL[], 66, 89
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 40, 4, 85
CALL[], 13, 40, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 40, 16, 85
CALL[], 19, 40, 18, 85
SVTCA[X]
CALL[], 21, 25, 53, 22, 39, 90
SVTCA[Y]
CALL[], 75, 89
SVTCA[Y]
CALL[], 77, 89
CALL[], 76, 40, 75, 85
CALL[], 78, 40, 77, 85
SVTCA[Y]
CALL[], 81, 89
SVTCA[Y]
CALL[], 79, 89
SVTCA[Y]
CALL[], 85, 89
SVTCA[Y]
CALL[], 86, 89
SVTCA[Y]
CALL[], 87, 89
CALL[], 24, 90, 12, 17, 70
CALL[], 32, 90, 18, 24, 70
RTG[]
</assembly>
  </prep>
  <cvt>
    <talk>/* Control Program */
/* ACT generated Thu Jan  9 18:13:47 2020 */

CATEGORY Stroke
CATEGORY StrokeInheritance
GROUP SmallCap
GROUP Runic

InstructionsOn @6..2047

/* DropOutCtrlOff @255 */

ScanCtrl = 511
ScanType = 4

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

ASM("WS[], 16, 0") /* &amp;amp;lt;== S[16] = threshold ppem that less than or equal is no RES */

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:  1358 /* cap height */
ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:    27 ~   2 @ 40 /* cap height overshoot */
      9:   -27 ~   8 @ 40 /* base line undershoot */
  Black
  Y
  StraightStroke
      65: 51 /* serif height */
      67: 61 /* bar height */
  RoundStroke
      68: 57 /* round horizontal stroke */
ASM("SVTCA[Y]")
ASM("CALL[], 65, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 67, 89")

LowerCase
  SquareHeight
      0:  1487 /* lc ascender */
ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")
      6:   891 /* x height */
ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -501 /* lc descender */
ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:     5 ~   0 @205 /* lc ascender overshoot */
      7:    24 ~   6 @ 40 /* x height overshoot */
     11:   -24 ~  10 @ 40 /* base line undershoot */
     15:   -30 ~  14 @ 35 /* lc descender undershoot */
  Black
  Y
  StraightStroke
     66: 51 /* lc serif height */
ASM("SVTCA[Y]")
ASM("CALL[], 66, 89")
  RoundStroke
     69: 57 /* lc standard horizontal round stroke */

Figure
  SquareHeight
      4:  1321 /* figure height */
ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:    37 ~   4 @ 40 /* figure height overshoot */
     13:   -23 ~  12 @ 40 /* base line undershoot */

Other
  SquareHeight
     16:  1378 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
         17:    21 ~  16 @ 40 /* other height overshoot */
         19:   -21 ~  18 @ 40 /* base line undershoot */
     Black
     Y
     StraightStroke
         88:  61 /* standard bar height */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     21:   170 /* 31x */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     22:   187 /* 14x */
LowerCase
  Black
  X
  StrokeInheritance
     25:   156 /* 17x */
ASM("SVTCA[X]")
ASM("CALL[], 21, 25, 53, 22, 39, 90")

SmallCap
    Grey
    Y
    SquareHeight
        75: 1016 /* sc height */
        77: 0 /* baseline */
ASM("SVTCA[Y]")
ASM("CALL[], 75, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 77, 89")
    RoundHeight
        76: 20 ~ 75 @ 40 /* sc height overshoot */
        78: -23 ~ 77 @ 40 /* sc baseline undershoot */
    Black
    Y
    StraightStroke
        81: 51 /* serif height */
        79: 61 /* bar height */
ASM("SVTCA[Y]")
ASM("CALL[], 81, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 79, 89")
    RoundStroke
        80: 57 /* sc round horizontal stroke */

Runic
    Grey
    Y
    SquareHeight
        85: 1358 /* Rune height */
        86: 0 /* baseline */
    Black
    Y
    StraightStroke
        87: 51 /* Serif height */
ASM("SVTCA[Y]")
ASM("CALL[], 85, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 86, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 87, 89")
	90 : 127 Delta(3/8 @12..17, 1/2 @18..24) /* Diagonal height */


</talk>
  </cvt>
  <glyf>
    <TTGlyph ID="0">
      <instructions>
        <talk>/* Y direction */
YAnchor(0)
YDist(0,4)
YDist(4,10)
YDist(10,16)
YAnchor(1)
YDist(1,28)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 0, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 4
MDRP[M&lt;RWh], 10
MDRP[m&gt;RBl], 16
MDAP[R], 1
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1">
      <instructions>
        <talk>YAnchor(11,3)
YShift(11,18)
YAnchor(30,8)
YShift(30,16)
YShift(30,17)
YShift(30,25)
YIPAnchor(11,21,30)
YLink(21,22,67)
YLink(30,31,65)
YShift(31,26)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 1, char 0x41 (A) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 3
SHP[1], 18
MIAP[R], 30, 8
SHP[1], 16
SHP[1], 17
SHP[1], 25
SRP2[], 11
IP[], 21
MDAP[R], 21
MIRP[m&gt;RBl], 22, 67
SRP0[], 30
MIRP[m&gt;RBl], 31, 65
SHP[2], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="2">
      <instructions>
        <talk>YAnchor(0)
YDist(0,6)
YShift(0,11)
YAnchor(23,8)
YLink(23,24,65)
YShift(23,28)
YShift(23,36)
YAnchor(47,3)
YShift(47,17)
YShift(47,29)
YIPAnchor(47,33,23)
YLink(33,32,67)
YShift(47,55)
YLink(55,54,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 2, char 0xa73c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 11
MIAP[R], 23, 8
MIRP[m&gt;RBl], 24, 65
SHP[1], 28
SHP[1], 36
MIAP[R], 47, 3
SHP[1], 17
SHP[1], 29
SRP2[], 23
IP[], 33
MDAP[R], 33
MIRP[m&gt;RBl], 32, 67
SRP1[], 47
SHP[1], 55
SRP0[], 55
MIRP[m&gt;RBl], 54, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="3">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 842, 1262, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="4">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 780, 1078, 467
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="5">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 844, 1259, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="6">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 839, 1258, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="7">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 841, 1263, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="8">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 849, 1260, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="9">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 838, 1597, 10

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="10">
      <instructions>
        <talk>/* Y direction */
YAnchor(11)
YShift(11,32)
YDist(11,24)
YDist(24,18)
YDist(18,4)
YAnchor(42,8)
YShift(42,30)
YShift(42,34)
YShift(42,37)
YIPAnchor(11,0,42)
YLink(0,1,67)
YLink(42,43,65)
YShift(43,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 10, char 0xc5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 32
MDRP[M&gt;RBl], 24
MDRP[M&lt;RWh], 18
MDRP[m&lt;RGr], 4
MIAP[R], 42, 8
SHP[1], 30
SHP[1], 34
SHP[1], 37
SRP2[], 11
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 67
SRP0[], 42
MIRP[m&gt;RBl], 43, 65
SHP[2], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="11">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OVERLAP[]
OFFSET[R], 848, 1259, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="12">
      <instructions>
        <talk>YAnchor(8,2)
YShift(8,32)
YLink(8,7,65)
YShift(7,16)
YAnchor(26,8)
YShift(26,3)
YShift(26,17)
YShift(26,25)
YShift(26,31)
YLink(26,27,65)
YShift(27,1)
YShift(27,18)
YIPAnchor(8,35,26)
YLink(35,36,67)

/* X direction */
XAnchor(40)
XDist(40,41)
XInterpolate(41,37,40)

Smooth()</talk>
        <assembly>/* TT glyph 12, char 0xc6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 2
SHP[1], 32
MIRP[m&gt;RBl], 7, 65
SHP[2], 16
MIAP[R], 26, 8
SHP[1], 3
SHP[1], 17
SHP[1], 25
SHP[1], 31
MIRP[m&gt;RBl], 27, 65
SHP[2], 1
SHP[2], 18
SRP2[], 8
IP[], 35
MDAP[R], 35
MIRP[m&gt;RBl], 36, 67
SVTCA[X]
MDAP[R], 40
MDRP[m&gt;RBl], 41
IP[], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="13">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OVERLAP[]
OFFSET[R], 842, 1938, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="14">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OVERLAP[]
OFFSET[R], 849, 1936, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="15">
      <instructions>
        <talk>YAnchor(17,8)
YShift(17,0)
YLink(17,18,65)
YShift(18,21)
YAnchor(35,2)
YShift(35,1)
YLink(35,34,65)
YShift(34,45)
YIPAnchor(35,37,17)
YDist(37,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 15, char 0x42 (B) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 17, 8
SHP[1], 0
MIRP[m&gt;RBl], 18, 65
SHP[2], 21
MIAP[R], 35, 2
SHP[1], 1
MIRP[m&gt;RBl], 34, 65
SHP[2], 45
SRP2[], 17
IP[], 37
MDAP[R], 37
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="16">
      <instructions>
        <talk>YAnchor(0,9)
YLink(0,31,68)
YShift(0,38)
YAnchor(10,3)
YShift(10,15)
YLink(10,22,68)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 16, char 0x43 (C) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 31, 68
SHP[1], 38
MIAP[R], 10, 3
SHP[1], 15
MIRP[m&gt;RBl], 22, 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="17">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OVERLAP[]
OFFSET[R], 842, 1422, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="18">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OVERLAP[]
OFFSET[R], 845, 1418, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="19">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OVERLAP[]
OFFSET[R], 799, 1154, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="20">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OVERLAP[]
OFFSET[R], 840, 1417, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="21">
      <instructions>
        <talk>YAnchor(26,2)
YShift(26,1)
YLink(26,25,65)
YShift(25,23)
YAnchor(28,8)
YShift(28,0)
YLink(28,29,65)
YShift(29,11)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 21, char 0x44 (D) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 26, 2
SHP[1], 1
MIRP[m&gt;RBl], 25, 65
SHP[2], 23
MIAP[R], 28, 8
SHP[1], 0
MIRP[m&gt;RBl], 29, 65
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="22">
      <instructions>
        <talk>YAnchor(26,2)
YShift(26,1)
YLink(26,25,65)
YShift(25,23)
YAnchor(28,8)
YShift(28,0)
YLink(28,29,65)
YShift(29,11)
YIPAnchor(26,32,28)
YLink(32,33,67)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 22, char 0xd0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 26, 2
SHP[1], 1
MIRP[m&gt;RBl], 25, 65
SHP[2], 23
MIAP[R], 28, 8
SHP[1], 0
MIRP[m&gt;RBl], 29, 65
SHP[2], 11
SRP2[], 26
IP[], 32
MDAP[R], 32
MIRP[m&gt;RBl], 33, 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="23">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OVERLAP[]
OFFSET[R], 845, 1301, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="24">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 22, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="25">
      <instructions>
        <talk>YAnchor(32,2)
YShift(32,1)
YShift(32,19)
YLink(32,31,65)
YShift(31,18)
YAnchor(34,8)
YShift(34,0)
YShift(34,4)
YIPAnchor(32,22,34)
YShift(22,26)
YLink(22,23,67)
YShift(23,27)
YLink(34,35,65)
YShift(35,5)

/* X direction */
XAnchor(27)
XDist(27,28)
XInterpolate(28,24,27)

Smooth()</talk>
        <assembly>/* TT glyph 25, char 0x45 (E) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 32, 2
SHP[1], 1
SHP[1], 19
MIRP[m&gt;RBl], 31, 65
SHP[2], 18
MIAP[R], 34, 8
SHP[1], 0
SHP[1], 4
SRP2[], 32
IP[], 22
MDAP[R], 22
SHP[1], 26
MIRP[m&gt;RBl], 23, 67
SHP[2], 27
SRP0[], 34
MIRP[m&gt;RBl], 35, 65
SHP[2], 5
SVTCA[X]
MDAP[R], 27
MDRP[m&gt;RBl], 28
IP[], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="26">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 842, 1326, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="27">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 846, 1322, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="28">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 845, 1322, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="29">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 844, 1323, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="30">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 839, 1322, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="31">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 840, 1321, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="32">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 841, 1327, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="33">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 849, 1324, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="34">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OVERLAP[]
OFFSET[R], 838, 1660, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="35">
      <instructions>
        <talk>/* Y direction */
YAnchor(13,8)
YShift(13,0)
YLink(13,14,65)
YAnchor(28,2)
YShift(28,1)
YShift(28,10)
YIPAnchor(28,18,13)
YShift(18,22)
YLink(18,19,67)
YShift(19,23)
YLink(28,27,65)
YShift(27,9)

/* X direction */
XAnchor(23)
XDist(23,24)
XInterpolate(24,20,23)

Smooth()
</talk>
        <assembly>/* TT glyph 35, char 0x46 (F) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 8
SHP[1], 0
MIRP[m&gt;RBl], 14, 65
MIAP[R], 28, 2
SHP[1], 1
SHP[1], 10
SRP2[], 13
IP[], 18
MDAP[R], 18
SHP[1], 22
MIRP[m&gt;RBl], 19, 67
SHP[2], 23
SRP0[], 28
MIRP[m&gt;RBl], 27, 65
SHP[2], 9
SVTCA[X]
MDAP[R], 23
MDRP[m&gt;RBl], 24
IP[], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="36">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,9)
YLink(0,29,68)
YAnchor(9,3)
YShift(9,15)
YLink(9,21,68)
YIPAnchor(9,37,0)
YShift(37,40)
YShift(37,41)
YLink(37,38,65)
YShift(38,35)
YShift(38,42)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 36, char 0x47 (G) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 29, 68
MIAP[R], 9, 3
SHP[1], 15
MIRP[m&gt;RBl], 21, 68
SRP2[], 0
IP[], 37
MDAP[R], 37
SHP[1], 40
SHP[1], 41
MIRP[m&gt;RBl], 38, 65
SHP[2], 35
SHP[2], 42
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="37">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 36, 0, 0
OVERLAP[]
OFFSET[R], 798, 1251, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="38">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 36, 0, 0
OVERLAP[]
OFFSET[R], 840, 1407, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="39">
      <instructions>
        <talk>/* Y direction */
YAnchor(0)
YAnchor(34,3)
YLink(34,21,68)
YShift(34,28)
YInterpolate(34,13,0)
YShift(13,14)

/* X direction */
XAnchor(27)
XDist(27,28)

Smooth()</talk>
        <assembly>/* TT glyph 39, char 0x21c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 34, 3
MIRP[m&gt;RBl], 21, 68
SHP[1], 28
SRP2[], 0
IP[], 13
SRP1[], 13
SHP[1], 14
SVTCA[X]
MDAP[R], 27
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="40">
      <instructions>
        <talk>/* Y direction */
YAnchor(12,8)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,65)
YShift(13,18)
YAnchor(24,2)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(24,8,12)
YLink(8,9,67)
YLink(24,23,65)
YShift(23,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 40, char 0x48 (H) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 8
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 65
SHP[2], 18
MIAP[R], 24, 2
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 9, 67
SRP0[], 24
MIRP[m&gt;RBl], 23, 65
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="41">
      <instructions>
        <talk>/* Y direction */
YAnchor(6,2)
YShift(6,1)
YLink(6,5,65)
YAnchor(9,8)
YShift(9,0)
YLink(9,10,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 41, char 0x49 (I) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 1
MIRP[m&gt;RBl], 5, 65
MIAP[R], 9, 8
SHP[1], 0
MIRP[m&gt;RBl], 10, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="42">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 51, 714, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="43">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 842, 954, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="44">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 846, 950, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="45">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 844, 951, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="46">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 839, 950, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="47">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 840, 949, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="48">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 841, 955, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="49">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 849, 952, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="50">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OVERLAP[]
OFFSET[R], 838, 962, 10

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="51">
      <instructions>
        <talk>/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,10)
YAnchor(26,2)
YShift(26,18)
YLink(26,25,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 51, char 0x4a (J) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 10
MIAP[R], 26, 2
SHP[1], 18
MIRP[m&gt;RBl], 25, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="52">
      <instructions>
        <talk>/* Y direction */
YAnchor(30,8)
YShift(30,0)
YLink(30,31,65)
YShift(30,29)
YDist(29,28)
YAnchor(37,2)
YShift(37,1)
YShift(37,18)
YShift(37,42)
YIPAnchor(37,11,30)
YDist(11,12)
YLink(37,36,65)
YShift(36,41)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 52, char 0x4b (K) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 30, 8
SHP[1], 0
MIRP[m&gt;RBl], 31, 65
SHP[1], 29
SRP0[], 29
MDRP[m&gt;RBl], 28
MIAP[R], 37, 2
SHP[1], 1
SHP[1], 18
SHP[1], 42
SRP2[], 30
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 12
SRP0[], 37
MIRP[m&gt;RBl], 36, 65
SHP[2], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="53">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OVERLAP[]
OFFSET[R], 798, 1126, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="54">
      <instructions>
        <talk>/* Y direction */
YAnchor(15,2)
YShift(15,1)
YLink(15,14,65)
YAnchor(18,8)
YShift(18,0)
YShift(18,4)
YLink(18,19,65)
YShift(19,5)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 54, char 0x4c (L) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 2
SHP[1], 1
MIRP[m&gt;RBl], 14, 65
MIAP[R], 18, 8
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 65
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="55">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OVERLAP[]
OFFSET[R], 842, 973, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="56">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OVERLAP[]
OFFSET[R], 777, 1081, -46

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="57">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OVERLAP[]
OFFSET[R], 798, 1106, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="58">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OVERLAP[]
OFFSET[R], 850, 363, 194
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="59">
      <instructions>
        <talk>/* Y direction */
YAnchor(9,2)
YShift(9,20)
YShift(9,23)
YLink(9,8,65)
YShift(8,39)
YShift(9,37)
YShift(37,1)
YAnchor(26,8)
YShift(26,4)
YShift(26,21)
YShift(26,22)
YShift(26,31)
YLink(26,27,65)
YShift(27,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 59, char 0x4d (M) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 2
SHP[1], 20
SHP[1], 23
MIRP[m&gt;RBl], 8, 65
SHP[2], 39
SHP[1], 37
SRP1[], 37
SHP[1], 1
MIAP[R], 26, 8
SHP[1], 4
SHP[1], 21
SHP[1], 22
SHP[1], 31
MIRP[m&gt;RBl], 27, 65
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="60">
      <instructions>
        <talk>/* Y direction */
YAnchor(6,2)
YShift(6,14)
YShift(6,17)
YShift(6,27)
YLink(6,5,65)
YShift(5,26)
YAnchor(20,8)
YShift(20,0)
YShift(20,16)
YLink(20,21,65)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 60, char 0x4e (N) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 14
SHP[1], 17
SHP[1], 27
MIRP[m&gt;RBl], 5, 65
SHP[2], 26
MIAP[R], 20, 8
SHP[1], 0
SHP[1], 16
MIRP[m&gt;RBl], 21, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="61">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OVERLAP[]
OFFSET[R], 842, 1402, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="62">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OVERLAP[]
OFFSET[R], 845, 1398, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="63">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OVERLAP[]
OFFSET[R], 798, 1218, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="64">
      <instructions>
        <talk>/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(23,2)
YShift(23,31)
YShift(23,37)
YShift(23,47)
YLink(23,22,65)
YShift(22,46)
YAnchor(40,8)
YShift(40,36)
YLink(40,41,65)

/* X direction */
XAnchor(31)
XDist(31,30)
XShift(30,17)
XAnchor(37)
XDist(37,38)

Smooth()
</talk>
        <assembly>/* TT glyph 64, char 0x14a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MIAP[R], 23, 2
SHP[1], 31
SHP[1], 37
SHP[1], 47
MIRP[m&gt;RBl], 22, 65
SHP[2], 46
MIAP[R], 40, 8
SHP[1], 36
MIRP[m&gt;RBl], 41, 65
SVTCA[X]
MDAP[R], 31
MDRP[m&gt;RBl], 30
SHP[2], 17
MDAP[R], 37
MDRP[m&gt;RBl], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="65">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OVERLAP[]
OFFSET[R], 848, 1399, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="66">
      <instructions>
        <talk>YAnchor(0,9)	/* min, CVT */
YAnchor(10,3)	/* max, CVT */
YLink(10,30,68) /*perpendicular to the stroke*/
YLink(0,20,68) /*perpendicular to the stroke*/
Smooth()</talk>
        <assembly>/* TT glyph 66, char 0x4f (O) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIAP[R], 10, 3
MIRP[m&gt;RBl], 30, 68
SRP0[], 0
MIRP[m&gt;RBl], 20, 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="67">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,9)
YShift(0,26)
YLink(0,32,68)
YShift(32,49)
YAnchor(10,3)
YShift(10,16)
YLink(10,39,68)
YShift(39,59)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 67, char 0xa74e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 26
MIRP[m&gt;RBl], 32, 68
SHP[2], 49
MIAP[R], 10, 3
SHP[1], 16
MIRP[m&gt;RBl], 39, 68
SHP[2], 59
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="68">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 842, 1362, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="69">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 846, 1358, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="70">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 844, 1359, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="71">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 839, 1358, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="72">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 841, 1363, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="73">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 843, 1358, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="74">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 849, 1360, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="75">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 800, 1193, -44

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="76">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 851, 758, 6
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="77">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 76, 0, 0
OVERLAP[]
OFFSET[R], 842, 1362, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="78">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OVERLAP[]
OFFSET[R], 848, 1359, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="79">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,8)
YShift(0,40)
YLink(40,41,65)
YShift(41,13)
YAnchor(10,2)
YShift(10,37)
YLink(37,36,65)
YShift(36,21)
YIPAnchor(10,49,0)
YShift(49,53)
YLink(49,50,67)
YShift(50,54)

/* X direction */
XAnchor(54)
XDist(54,55)
XInterpolate(55,51,54)

Smooth()
</talk>
        <assembly>/* TT glyph 79, char 0x152 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 40
SRP0[], 40
MIRP[m&gt;RBl], 41, 65
SHP[2], 13
MIAP[R], 10, 2
SHP[1], 37
SRP0[], 37
MIRP[m&gt;RBl], 36, 65
SHP[2], 21
SRP1[], 10
SRP2[], 0
IP[], 49
MDAP[R], 49
SHP[1], 53
MIRP[m&gt;RBl], 50, 67
SHP[2], 54
SVTCA[X]
MDAP[R], 54
MDRP[m&gt;RBl], 55
IP[], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="80">
      <instructions>
        <talk>/* Y direction */
YAnchor(31,2)
YShift(31,1)
YLink(31,30,65)
YShift(30,24)
YAnchor(33,8)
YShift(33,15)
YLink(33,34,65)
YIPAnchor(31,10,33)
YLink(10,16,68)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 80, char 0x50 (P) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 31, 2
SHP[1], 1
MIRP[m&gt;RBl], 30, 65
SHP[2], 24
MIAP[R], 33, 8
SHP[1], 15
MIRP[m&gt;RBl], 34, 65
SRP2[], 31
IP[], 10
MDAP[R], 10
MIRP[m&gt;RBl], 16, 68
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="81">
      <instructions>
        <talk>/* Y direction */
YAnchor(31,8)
YShift(31,17)
YLink(31,32,65)
YAnchor(38,2)
YShift(38,2)
YLink(38,37,65)
YIPAnchor(38,3,12,31)
YDist(3,30)
YLink(12,22,67)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 81, char 0xde */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 31, 8
SHP[1], 17
MIRP[m&gt;RBl], 32, 65
MIAP[R], 38, 2
SHP[1], 2
MIRP[m&gt;RBl], 37, 65
SRP2[], 31
IP[], 3
IP[], 12
MDAP[R], 3
MDAP[R], 12
SRP0[], 3
MDRP[m&gt;RBl], 30
SRP0[], 12
MIRP[m&gt;RBl], 22, 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="82">
      <instructions>
        <talk>/* Y direction */
YAnchor(11,3)
YLink(11,37,68)
YAnchor(21,9)
YLink(21,27,68)
YDelta(27,1@10..17)
YShift(21,0)
YDist(0,51)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 82, char 0x51 (Q) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 3
MIRP[m&gt;RBl], 37, 68
MIAP[R], 21, 9
MIRP[m&lt;RWh], 27, 68
CALL[], 27, 64, 10, 17, 72
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="83">
      <instructions>
        <talk>/* Y direction */
YAnchor(40,8)
YShift(40,22)
YShift(40,39)
YLink(40,41,65)
YAnchor(47,2)
YShift(47,23)
YIPAnchor(40,6,47)
YLink(6,11,68)
YLink(47,46,65)
YShift(46,20)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 83, char 0x52 (R) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 40, 8
SHP[1], 22
SHP[1], 39
MIRP[m&gt;RBl], 41, 65
MIAP[R], 47, 2
SHP[1], 23
SRP2[], 40
IP[], 6
MDAP[R], 6
MIRP[m&gt;RBl], 11, 68
SRP0[], 47
MIRP[m&gt;RBl], 46, 65
SHP[2], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="84">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OVERLAP[]
OFFSET[R], 842, 1211, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="85">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OVERLAP[]
OFFSET[R], 845, 1207, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="86">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OVERLAP[]
OFFSET[R], 798, 1097, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="87">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,9)
YLink(0,9,68)
YAnchor(25,3)
YShift(25,30)
YLink(25,37,68)
YInterpolate(0,44,25)
YShift(44,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 87, char 0x53 (S) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 9, 68
MIAP[R], 25, 3
SHP[1], 30
MIRP[m&gt;RBl], 37, 68
SRP2[], 0
IP[], 44
SRP1[], 44
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="88">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OVERLAP[]
OFFSET[R], 842, 1177, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="89">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OVERLAP[]
OFFSET[R], 845, 1173, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="90">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OVERLAP[]
OFFSET[R], 799, 917, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="91">
      <instructions>
        <talk>/* Y direction */
YAnchor(39,3)
YLink(39,25,68)
YAnchor(53,8)
YShift(53,33)
YLink(53,54,65)
YShift(53,0)
YAnchor(0)
YLink(0,10,68)
YInterpolate(39,18,53)
YShift(18,19)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 91, char 0x1e9e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 39, 3
MIRP[m&gt;RBl], 25, 68
MIAP[R], 53, 8
SHP[1], 33
MIRP[m&gt;RBl], 54, 65
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 10, 68
SRP1[], 39
SRP2[], 53
IP[], 18
SRP1[], 18
SHP[1], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="92">
      <instructions>
        <talk>/* Y direction */
YAnchor(12,2)
YShift(12,8)
YShift(12,16)
YLink(12,2,67)
YShift(2,30)
YAnchor(32,8)
YShift(32,31)
YLink(32,33,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 92, char 0x54 (T) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 2
SHP[1], 8
SHP[1], 16
MIRP[m&gt;RBl], 2, 67
SHP[2], 30
MIAP[R], 32, 8
SHP[1], 31
MIRP[m&gt;RBl], 33, 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="93">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OVERLAP[]
OFFSET[R], 807, 760, 172
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="94">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OVERLAP[]
OFFSET[R], 845, 1359, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="95">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OVERLAP[]
OFFSET[R], 799, 1139, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="96">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,9)
YLink(0,13,68)
YAnchor(29,2)
YShift(29,9)
YShift(29,19)
YShift(29,34)
YLink(29,28,65)
YShift(28,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 96, char 0x55 (U) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 13, 68
MIAP[R], 29, 2
SHP[1], 9
SHP[1], 19
SHP[1], 34
MIRP[m&gt;RBl], 28, 65
SHP[2], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="97">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 842, 1431, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="98">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 846, 1427, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="99">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 844, 1428, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="100">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 839, 1427, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="101">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 841, 1432, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="102">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 843, 1427, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="103">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 849, 1429, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="104">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,9)
YDist(0,13)
YShift(0,24)
YShift(0,44)
YAnchor(29,2)
YShift(29,9)
YShift(29,19)
YShift(29,34)
YLink(29,28,65)
YShift(28,33)
YAnchor(37)
YDist(37,48)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 104, char 0x172 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MDRP[m&gt;RBl], 13
SHP[1], 24
SHP[1], 44
MIAP[R], 29, 2
SHP[1], 9
SHP[1], 19
SHP[1], 34
MIRP[m&gt;RBl], 28, 65
SHP[2], 33
MDAP[R], 37
MDRP[m&gt;RBl], 48
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="105">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 847, 1246, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="106">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OVERLAP[]
OFFSET[R], 848, 1428, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="107">
      <instructions>
        <talk>/* V */

/* Y direction */
YAnchor(0,9)
YShift(0,4)
YAnchor(10,2)
YShift(10,2)
YShift(10,6)
YShift(10,15)
YLink(10,9,65)
YShift(9,14)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 107, char 0x56 (V) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 4
MIAP[R], 10, 2
SHP[1], 2
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 9, 65
SHP[2], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="108">
      <instructions>
        <talk>/* W */

/* Y direction */
YAnchor(0,9)
YShift(0,8)
YAnchor(18,2)
YShift(18,2)
YShift(18,9)
YShift(18,14)
YShift(18,23)
YShift(18,28)
YLink(18,17,65)
YShift(17,5)
YShift(17,22)
YShift(17,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 108, char 0x57 (W) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 8
MIAP[R], 18, 2
SHP[1], 2
SHP[1], 9
SHP[1], 14
SHP[1], 23
SHP[1], 28
MIRP[m&gt;RBl], 17, 65
SHP[2], 5
SHP[2], 22
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="109">
      <instructions>
        <talk>/* uniA760 */

/* Y direction */
YAnchor(0,9)
YShift(0,8)
YAnchor(15)
YShift(15,1)
YShift(15,9)
YShift(15,20)
YShift(15,25)
YShift(15,45)
YLink(15,14,65)
YShift(14,5)
YShift(14,19)
YShift(14,24)
YAnchor(28)
YDist(28,34)
YShift(28,39)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 109, char 0xa760 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 8
MDAP[R], 15
SHP[1], 1
SHP[1], 9
SHP[1], 20
SHP[1], 25
SHP[1], 45
MIRP[m&gt;RBl], 14, 65
SHP[2], 5
SHP[2], 19
SHP[2], 24
MDAP[R], 28
MDRP[m&gt;RBl], 34
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="110">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OVERLAP[]
OFFSET[R], 842, 1603, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="111">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OVERLAP[]
OFFSET[R], 844, 1600, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="112">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OVERLAP[]
OFFSET[R], 839, 1599, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="113">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OVERLAP[]
OFFSET[R], 841, 1604, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="114">
      <instructions>
        <talk>/* uni01F7 */

/* Y direction */
YAnchor(16,2)
YAnchor(27,8)
YShift(27,0)
YLink(27,28,65)
YAnchor(34,2)
YShift(34,1)
YInterpolate(27,4,34)
YDist(4,5)
YLink(34,33,65)
YShift(33,15)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 114, char 0x1f7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 2
MIAP[R], 27, 8
SHP[1], 0
MIRP[m&gt;RBl], 28, 65
MIAP[R], 34, 2
SHP[1], 1
SRP2[], 27
IP[], 4
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 34
MIRP[m&gt;RBl], 33, 65
SHP[2], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="115">
      <instructions>
        <talk>/* Y direction */
YAnchor(10,2)
YShift(10,1)
YShift(10,5)
YShift(10,15)
YLink(10,9,65)
YShift(9,14)
YAnchor(23,8)
YShift(23,0)
YShift(23,4)
YShift(23,18)
YLink(23,24,65)
YShift(24,19)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 115, char 0x58 (X) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 2
SHP[1], 1
SHP[1], 5
SHP[1], 15
MIRP[m&gt;RBl], 9, 65
SHP[2], 14
MIAP[R], 23, 8
SHP[1], 0
SHP[1], 4
SHP[1], 18
MIRP[m&gt;RBl], 24, 65
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="116">
      <instructions>
        <talk>/* Y */

/* Y direction */
YAnchor(19,2)
YShift(19,3)
YShift(19,8)
YShift(19,14)
YLink(19,18,65)
YShift(18,13)
YAnchor(22,8)
YShift(22,0)
YLink(22,23,65)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 116, char 0x59 (Y) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 19, 2
SHP[1], 3
SHP[1], 8
SHP[1], 14
MIRP[m&gt;RBl], 18, 65
SHP[2], 13
MIAP[R], 22, 8
SHP[1], 0
MIRP[m&gt;RBl], 23, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="117">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OVERLAP[]
OFFSET[R], 842, 1407, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="118">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OVERLAP[]
OFFSET[R], 844, 1404, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="119">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OVERLAP[]
OFFSET[R], 839, 1403, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="120">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OVERLAP[]
OFFSET[R], 841, 1408, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="121">
      <instructions>
        <talk>/* Z */

/* Y direction */
YAnchor(5,8)
YShift(5,0)
YLink(5,28,67)
YAnchor(24,2)
YShift(24,7)
YLink(24,9,67)
YShift(24,21)
YShift(24,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 121, char 0x5a (Z) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 0
MIRP[m&gt;RBl], 28, 67
MIAP[R], 24, 2
SHP[1], 7
MIRP[m&gt;RBl], 9, 67
SHP[1], 21
SHP[1], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="122">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 842, 1260, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="123">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 845, 1256, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="124">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 840, 1255, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="125">
      <instructions>
        <talk>/* uni0126 */

/* Y direction */
YAnchor(12,8)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,65)
YShift(13,18)
YAnchor(24,2)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(12,8,32,24)
YLink(8,9,67)
YLink(32,33,67)
YLink(24,23,65)
YShift(23,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 125, char 0x126 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 8
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 65
SHP[2], 18
MIAP[R], 24, 2
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 8
IP[], 32
MDAP[R], 8
MDAP[R], 32
SRP0[], 8
MIRP[m&gt;RBl], 9, 67
SRP0[], 32
MIRP[m&gt;RBl], 33, 67
SRP0[], 24
MIRP[m&gt;RBl], 23, 65
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="126">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OVERLAP[]
OFFSET[R], 867, 637, 167

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="127">
      <instructions>
        <talk>/* uni01F6 */

/* Y direction */
YAnchor(0,9)
YLink(0,13,68)
YAnchor(41,8)
YShift(41,37)
YLink(41,42,65)
YAnchor(54,2)
YShift(54,6)
YShift(54,39)
YShift(54,48)
YIPAnchor(41,33,54)
YLink(33,34,67)
YLink(54,55,65)
YShift(55,47)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 127, char 0x1f6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 13, 68
MIAP[R], 41, 8
SHP[1], 37
MIRP[m&gt;RBl], 42, 65
MIAP[R], 54, 2
SHP[1], 6
SHP[1], 39
SHP[1], 48
SRP2[], 41
IP[], 33
MDAP[R], 33
MIRP[m&gt;RBl], 34, 67
SRP0[], 54
MIRP[m&gt;RBl], 55, 65
SHP[2], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="128">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 10, 0, 0
OVERLAP[]
OFFSET[R], 842, 1693, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="129">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OVERLAP[]
OFFSET[R], 849, 1405, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="130">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OVERLAP[]
OFFSET[R], 807, 344, 173
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="131">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OVERLAP[]
OFFSET[R], 840, 1402, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="132">
      <instructions>
        <talk>/* uni2C62 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YLink(4,19,65)
YShift(4,21)
YAnchor(15,2)
YShift(15,1)
YLink(15,14,65)
YIPAnchor(15,22,4)
YShift(22,26)
YDist(22,38)
YShift(38,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 132, char 0x2c62 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
MIRP[m&gt;RBl], 19, 65
SHP[1], 21
MIAP[R], 15, 2
SHP[1], 1
MIRP[m&gt;RBl], 14, 65
SRP2[], 4
IP[], 22
MDAP[R], 22
SHP[1], 26
MDRP[m&gt;RBl], 38
SHP[2], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="133">
      <instructions>
        <talk>/* uniA732 */

/* Y direction */
YAnchor(15,3)
YShift(15,1)
YShift(15,23)
YShift(15,36)
YAnchor(50,8)
YShift(50,0)
YShift(50,4)
YShift(50,25)
YShift(50,55)
YShift(50,60)
YIPAnchor(50,42,15)
YShift(42,46)
YLink(42,43,67)
YShift(43,47)
YLink(50,51,65)
YShift(51,56)
YShift(51,61)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 133, char 0xa732 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 3
SHP[1], 1
SHP[1], 23
SHP[1], 36
MIAP[R], 50, 8
SHP[1], 0
SHP[1], 4
SHP[1], 25
SHP[1], 55
SHP[1], 60
SRP2[], 15
IP[], 42
MDAP[R], 42
SHP[1], 46
MIRP[m&gt;RBl], 43, 67
SHP[2], 47
SRP0[], 50
MIRP[m&gt;RBl], 51, 65
SHP[2], 56
SHP[2], 61
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="134">
      <instructions>
        <talk>/* uniA734 */

/* Y direction */
YAnchor(34,3)
YShift(34,60)
YShift(34,10)
YLink(10,49,68)
YAnchor(72,8)
YShift(72,20)
YShift(72,59)
YShift(72,67)
YShift(72,0)
YAnchor(0)
YLink(0,40,68)
YIPAnchor(72,63,34)
YLink(63,64,67)
YLink(72,73,65)
YShift(73,68)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 134, char 0xa734 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 3
SHP[1], 60
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 49, 68
MIAP[R], 72, 8
SHP[1], 20
SHP[1], 59
SHP[1], 67
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 40, 68
SRP1[], 72
SRP2[], 34
IP[], 63
MDAP[R], 63
MIRP[m&gt;RBl], 64, 67
SRP0[], 72
MIRP[m&gt;RBl], 73, 65
SHP[2], 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="135">
      <instructions>
        <talk>/* uniA736 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YLink(4,5,65)
YShift(4,23)
YAnchor(23)
YLink(23,36,68)
YAnchor(15,2)
YShift(15,1)
YShift(15,20)
YShift(15,32)
YShift(15,41)
YIPAnchor(4,9,15)
YLink(9,10,67)
YLink(15,14,65)
YShift(14,19)

/* X direction */
XAnchor(42)
XDist(42,41)

Smooth()</talk>
        <assembly>/* TT glyph 135, char 0xa736 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
MIRP[m&gt;RBl], 5, 65
SHP[1], 23
MDAP[R], 23
MIRP[m&gt;RBl], 36, 68
MIAP[R], 15, 2
SHP[1], 1
SHP[1], 20
SHP[1], 32
SHP[1], 41
SRP2[], 4
IP[], 9
MDAP[R], 9
MIRP[m&gt;RBl], 10, 67
SRP0[], 15
MIRP[m&gt;RBl], 14, 65
SHP[2], 19
SVTCA[X]
MDAP[R], 42
MDRP[m&gt;RBl], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="136">
      <instructions>
        <talk>/* uniA738 */

/* Y direction */
YAnchor(20,8)
YShift(20,0)
YLink(20,21,65)
YShift(20,30)
YShift(20,34)
YAnchor(27,2)
YLink(27,26,65)
YShift(27,35)
YShift(27,10)
YShift(10,31)
YIPAnchor(20,16,27)
YLink(16,17,67)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 136, char 0xa738 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 20, 8
SHP[1], 0
MIRP[m&gt;RBl], 21, 65
SHP[1], 30
SHP[1], 34
MIAP[R], 27, 2
MIRP[m&gt;RBl], 26, 65
SHP[1], 35
SHP[1], 10
SRP1[], 10
SHP[1], 31
SRP1[], 20
SRP2[], 27
IP[], 16
MDAP[R], 16
MIRP[m&gt;RBl], 17, 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="137">
      <instructions>
        <talk>/* uniA73A */

/* Y direction */
YAnchor(16,8)
YShift(16,0)
YLink(16,17,65)
YShift(16,26)
YShift(16,30)
YAnchor(23,2)
YLink(23,22,65)
YShift(23,31)
YShift(23,10)
YShift(10,27)
YIPAnchor(16,34,23)
YLink(34,35,67)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 137, char 0xa73a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 8
SHP[1], 0
MIRP[m&gt;RBl], 17, 65
SHP[1], 26
SHP[1], 30
MIAP[R], 23, 2
MIRP[m&gt;RBl], 22, 65
SHP[1], 31
SHP[1], 10
SRP1[], 10
SHP[1], 27
SRP1[], 16
SRP2[], 23
IP[], 34
MDAP[R], 34
MIRP[m&gt;RBl], 35, 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="138">
      <instructions>
        <talk>YAnchor(4,9)	/* min */
YAnchor(14,3)	/* max */

/* YDir: Stroke #0 */
YLink(14,34,68) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(14,0,4)
YAnchor(0)
YLink(0,1,67) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YLink(4,24,68) /*perpendicular to the stroke*/

Smooth()</talk>
        <assembly>/* TT glyph 138, char 0xa74a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 9
MIAP[R], 14, 3
MIRP[m&gt;RBl], 34, 68
SRP2[], 4
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 67
SRP0[], 4
MIRP[m&gt;RBl], 24, 68
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="139">
      <instructions>
        <talk>/* Q.alt */

/* Y direction */
YAnchor(14,3)
YLink(14,41,68)
YAnchor(24,9)
YLink(24,31,68)
YDelta(31,1@10..17)
YShift(24,55)
YDist(55,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 139, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 14, 3
MIRP[m&gt;RBl], 41, 68
MIAP[R], 24, 9
MIRP[m&lt;RWh], 31, 68
CALL[], 31, 64, 10, 17, 72
SHP[1], 55
SRP0[], 55
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="140">
      <instructions>
        <talk>/* Thorn.loclENG */

/* Y direction */
YAnchor(0,9)
YLink(0,1,68)
YAnchor(38)
YShift(38,39)
YAnchor(46,3)
YShift(46,26)
YDist(26,13)
YShift(46,45)
YLink(45,44,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 140, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 1, 68
MDAP[R], 38
SHP[1], 39
MIAP[R], 46, 3
SHP[1], 26
SRP0[], 26
MDRP[m&gt;RBl], 13
SRP1[], 46
SHP[1], 45
SRP0[], 45
MIRP[m&gt;RBl], 44, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="141">
      <instructions>
        <talk>/* a */

/* Y direction */
YAnchor(25,7)
YDist(25,11)
YAnchor(42,11)
YDist(42,57)
YShift(42,0)
YDist(0,35)
YInterpolate(42,49,17,25)
YShift(49,50)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 141, char 0x61 (a) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 7
MDRP[m&gt;RBl], 11
MIAP[R], 42, 11
MDRP[m&gt;RBl], 57
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 35
SRP1[], 42
SRP2[], 25
IP[], 49
IP[], 17
SRP1[], 49
SHP[1], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="142">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 775, 872, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="143">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 780, 872, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="144">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 778, 871, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="145">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 772, 871, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="146">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 774, 871, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="147">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 783, 872, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="148">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 800, 1150, -30
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="149">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 781, 871, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="150">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OVERLAP[]
OFFSET[R], 782, 871, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="151">
      <instructions>
        <talk>/* uniA73D ay */

/* Y direction */
YAnchor(25,7)
YDist(25,11)
YShift(25,72)
YShift(25,79)
YAnchor(79)
YLink(79,78,66)
YAnchor(38,11)
YDist(38,53)
YAnchor(62,14)
YDist(62,68)

/* X direction */

Smooth()
XDelta(73,1/2@12..18)
XDelta(74,1/2@12..18)
XDelta(75,1/2@12..18)
XDelta(76,1/4@12..18)
</talk>
        <assembly>/* TT glyph 151, char 0xa73d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 7
MDRP[m&gt;RBl], 11
SHP[1], 72
SHP[1], 79
MDAP[R], 79
MIRP[m&gt;RBl], 78, 66
MIAP[R], 38, 11
MDRP[m&gt;RBl], 53
MIAP[R], 62, 14
MDRP[m&gt;RBl], 68
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 73, 32, 12, 18, 72
CALL[], 74, 32, 12, 18, 72
CALL[], 75, 32, 12, 18, 72
CALL[], 76, 16, 12, 18, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="152">
      <instructions>
        <talk>/* ae */

/* Y direction */
YAnchor(0,11)
YDist(0,68)
YShift(0,25)
YDist(25,18)
YAnchor(49,7)
YDist(49,35)
YShift(49,56)
YDist(56,10)
YInterpolate(0,61,49)
YShift(61,60)
YShift(61,6)
YAnchor(6)
YShift(6,7)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 152, char 0xe6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 68
SHP[1], 25
SRP0[], 25
MDRP[m&gt;RBl], 18
MIAP[R], 49, 7
MDRP[m&gt;RBl], 35
SHP[1], 56
SRP0[], 56
MDRP[m&gt;RBl], 10
SRP1[], 0
SRP2[], 49
IP[], 61
SRP1[], 61
SHP[1], 60
SHP[1], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="153">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 152, 0, 0
OVERLAP[]
OFFSET[R], 775, 1093, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="154">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 152, 0, 0
OVERLAP[]
OFFSET[R], 783, 1093, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="155">
      <instructions>
        <talk>/* b */

/* Y direction */
YAnchor(9,0)
YAnchor(32,7)
YDist(32,26)
YAnchor(40,11)
YShift(40,1)
YDist(40,18)
YShift(40,46)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 155, char 0x62 (b) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 0
MIAP[R], 32, 7
MDRP[m&gt;RBl], 26
MIAP[R], 40, 11
SHP[1], 1
MDRP[m&gt;RBl], 18
SHP[1], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="156">
      <instructions>
        <talk>/* c */

/* Y direction */
YAnchor(0,11)
YDist(0,32)
YNoRound(36)
YAnchor(36)
YDelta(32,1/4@12..19,1/2@20..31)
YAnchor(8,7)
YLink(8,24,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 156, char 0x63 (c) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 32
MDAP[r], 36
CALL[], 32, 16, 12, 19, 72
CALL[], 32, 32, 20, 31, 72
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="157">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OVERLAP[]
OFFSET[R], 775, 948, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="158">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OVERLAP[]
OFFSET[R], 779, 947, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="159">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OVERLAP[]
OFFSET[R], 799, 849, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="160">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OVERLAP[]
OFFSET[R], 773, 947, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="161">
      <instructions>
        <talk>/* d */

/* Y direction */
YAnchor(5,11)
YShift(5,0)
YDist(5,40)
YShift(5,35)
YDist(35,34)
YAnchor(14,7)
YDist(14,47)
YAnchor(23,0)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 161, char 0x64 (d) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 0
MDRP[m&gt;RBl], 40
SHP[1], 35
SRP0[], 35
MDRP[m&gt;RBl], 34
MIAP[R], 14, 7
MDRP[m&gt;RBl], 47
MIAP[R], 23, 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="162">
      <instructions>
        <talk>/* eth */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YAnchor(8,7)
YDist(8,35)
YShift(8,44)
YAnchor(16)
YShift(16,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 162, char 0xf0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
MIAP[R], 8, 7
MDRP[m&gt;RBl], 35
SHP[1], 44
MDAP[R], 16
SHP[1], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="163">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 161, 0, 0
OVERLAP[]
OFFSET[R], 777, 1311, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="164">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 161, 0, 0
OVERLAP[]
OFFSET[R], 807, 842, 608

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="165">
      <instructions>
        <talk>/* e */

/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8,7)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(8,18) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(8,14,0)
YAnchor(14)
YDist(14,13) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,26) /*perpendicular to the stroke*/

Smooth()</talk>
        <assembly>/* TT glyph 165, char 0x65 (e) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 8, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 14
MDAP[R], 14
MDRP[m&gt;RBl], 13
SRP0[], 0
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="166">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 775, 898, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="167">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 780, 898, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="168">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 779, 897, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="169">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 778, 897, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="170">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 772, 897, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="171">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 773, 897, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="172">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 774, 897, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="173">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 783, 898, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="174">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OVERLAP[]
OFFSET[R], 836, 1044, 41

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="175">
      <instructions>
        <talk>/* uniA76B */

/* Y direction */
YAnchor(0)
YAnchor(22,7)
YDist(22,15)
YInterpolate(0,8,29,22)
YDist(8,9)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 175, char 0xa76b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 22, 7
MDRP[m&gt;RBl], 15
SRP2[], 0
IP[], 8
IP[], 29
SRP0[], 8
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="176">
      <instructions>
        <talk>/* uni0259 */

/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(25,7)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(25,18) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(25,7,0)
YAnchor(7)
YDist(7,4) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,10) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 176, char 0x259 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 25, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 7
MDAP[R], 7
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="177">
      <instructions>
        <talk>/* uni025A */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(44,7)	/* max */

/* YDir: Stroke #0 */
YDist(44,37) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(44,19,0)
YAnchor(19)
YDist(19,12) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,31) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 177, char 0x25a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 44, 7
MDRP[m&gt;RBl], 37
SRP2[], 0
IP[], 19
MDAP[R], 19
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="178">
      <instructions>
        <talk>/* f */

/* Y direction */
YAnchor(10,1)
YDist(10,26)
YAnchor(31,6)
YDist(31,34)
YShift(34,2)
YAnchor(36,10)
YShift(36,0)
YDist(36,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 178, char 0x66 (f) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MDRP[m&gt;RBl], 26
MIAP[R], 31, 6
MDRP[m&gt;RBl], 34
SHP[2], 2
MIAP[R], 36, 10
SHP[1], 0
MDRP[m&gt;RBl], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="179">
      <instructions>
        <talk>/* g */

/* Y direction */
YAnchor(0,15)
YLink(0,14,69)
YAnchor(51,7)
YLink(51,65,69)
YIPAnchor(51,59,21,0)
YLink(59,43,69)
YDist(21,35)
YAnchor(75,6)
YDist(75,90)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 179, char 0x67 (g) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MIRP[m&gt;RBl], 14, 69
MIAP[R], 51, 7
MIRP[m&gt;RBl], 65, 69
SRP2[], 0
IP[], 59
IP[], 21
MDAP[R], 59
MDAP[R], 21
SRP0[], 59
MIRP[m&gt;RBl], 43, 69
SRP0[], 21
MDRP[m&gt;RBl], 35
MIAP[R], 75, 6
MDRP[m&gt;RBl], 90
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="180">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 179, 0, 0
OVERLAP[]
OFFSET[R], 785, 1205, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="181">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 179, 0, 0
OVERLAP[]
OFFSET[R], 773, 920, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="182">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,14)
YDist(0,12)
YAnchor(46,7)
YLink(46,33,69)
YDelta(33,-1/4@12..19)
YDelta(33,-1/2@20..50)
YShift(46,40)
YInterpolate(46,53,22,0)
YShift(22,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 182, char 0x21d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 12
MIAP[R], 46, 7
MIRP[m&gt;RBl], 33, 69
CALL[], 33, -16, 12, 19, 72
CALL[], 33, -32, 20, 50, 72
SHP[1], 40
SRP2[], 0
IP[], 53
IP[], 22
SRP1[], 22
SHP[1], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="183">
      <instructions>
        <talk>/* Y direction */
YAnchor(5,0)
YAnchor(28,7)
YDist(28,20)
YAnchor(38,10)
YShift(38,10)
YShift(38,37)
YShift(38,43)
YLink(38,39,66)
YShift(39,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 183, char 0x68 (h) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 28, 7
MDRP[m&gt;RBl], 20
MIAP[R], 38, 10
SHP[1], 10
SHP[1], 37
SHP[1], 43
MIRP[m&gt;RBl], 39, 66
SHP[2], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="184">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 773, 674, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="185">
      <instructions>
        <talk>/* dotlessi */

/* Y direction */
YAnchor(0,10)
YShift(0,3)
YShift(0,13)
YLink(0,1,66)
YShift(1,15)
YAnchor(8,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 185, char 0x131 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 3
SHP[2], 13
MIRP[m&gt;RBl], 1, 66
SHP[2], 15
MIAP[R], 8, 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="186">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 775, 675, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="187">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 780, 675, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="188">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 778, 674, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="189">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 772, 674, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="190">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 774, 674, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="191">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 184, 0, 0
OVERLAP[]
OFFSET[R], 194, 528, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="192">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 783, 675, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="193">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OVERLAP[]
OFFSET[R], 800, 754, -35

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="194">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OVERLAP[]
OFFSET[R], 773, 674, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="195">
      <instructions>
        <talk>/* uni0237 */

/* Min and Max */
YAnchor(0,15)	/* min, CVT */
YAnchor(21,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 195, char 0x237 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MIAP[R], 21, 7
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="196">
      <instructions>
        <talk>/* k */

/* Y direction */
YAnchor(5,0)
YAnchor(27,10)
YShift(27,10)
YShift(27,26)
YShift(27,32)
YIPAnchor(5,16,27)
YDist(16,17)
YLink(27,28,66)
YShift(28,33)
YAnchor(39,6)
YShift(39,22)
YLink(39,38,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 196, char 0x6b (k) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 27, 10
SHP[1], 10
SHP[1], 26
SHP[1], 32
SRP2[], 5
IP[], 16
MDAP[R], 16
MDRP[m&gt;RBl], 17
SRP0[], 27
MIRP[m&gt;RBl], 28, 66
SHP[2], 33
MIAP[R], 39, 6
SHP[1], 22
MIRP[m&gt;RBl], 38, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="197">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OVERLAP[]
OFFSET[R], 798, 941, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="198">
      <instructions>
        <talk>/* Y direction */
YAnchor(5,0)
YAnchor(11,10)
YShift(11,0)
YLink(11,12,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 198, char 0x6c (l) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 11, 10
SHP[1], 0
MIRP[m&gt;RBl], 12, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="199">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OVERLAP[]
OFFSET[R], 842, 870, 127

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="200">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OVERLAP[]
OFFSET[R], 777, 759, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="201">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OVERLAP[]
OFFSET[R], 798, 686, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="202">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OVERLAP[]
OFFSET[R], 808, 257, 272

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="203">
      <instructions>
        <talk>/* M */

/* Y direction */
YAnchor(27,7)
YShift(27,5)
YShift(27,54)
YDist(27,18)
YDelta(18,-1/4@12..19,-1/2@20..30)
YShift(18,45)
YAnchor(64,10)
YShift(64,10)
YShift(64,34)
YShift(64,63)
YShift(64,69)
YShift(64,74)
YLink(64,65,66)
YShift(65,70)
YShift(65,75)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 203, char 0x6d (m) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 27, 7
SHP[1], 5
SHP[1], 54
MDRP[m&gt;RBl], 18
CALL[], 18, -16, 12, 19, 72
CALL[], 18, -32, 20, 30, 72
SHP[2], 45
MIAP[R], 64, 10
SHP[1], 10
SHP[1], 34
SHP[1], 63
SHP[1], 69
SHP[1], 74
MIRP[m&gt;RBl], 65, 66
SHP[2], 70
SHP[2], 75
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="204">
      <instructions>
        <talk>/* n */

/* Y direction */
YAnchor(18,7)
YDist(18,9)
YDelta(9,-1/4@12..19)
YDelta(9,-1/2@20..30)
YShift(18,43)
YAnchor(28,10)
YShift(28,27)
YShift(28,33)
YShift(28,48)
YLink(28,29,66)
YShift(29,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 204, char 0x6e (n) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 18, 7
MDRP[m&gt;RBl], 9
CALL[], 9, -16, 12, 19, 72
CALL[], 9, -32, 20, 30, 72
SHP[1], 43
MIAP[R], 28, 10
SHP[1], 27
SHP[1], 33
SHP[1], 48
MIRP[m&gt;RBl], 29, 66
SHP[2], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="205">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OVERLAP[]
OFFSET[R], 775, 1011, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="206">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OVERLAP[]
OFFSET[R], 779, 1010, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="207">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OVERLAP[]
OFFSET[R], 798, 981, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="208">
      <instructions>
        <talk>/* eng */

/* Y direction */
YAnchor(0,15)
YDist(0,6)
YShift(0,10)
YDist(0,11)
YAnchor(53,10)
YLink(53,54,66)
YShift(53,58)
YAnchor(63,7)
YShift(63,35)
YDist(35,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 208, char 0x14b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MDRP[m&gt;RBl], 6
SHP[1], 10
MDRP[m&gt;RBl], 11
MIAP[R], 53, 10
MIRP[m&gt;RBl], 54, 66
SHP[1], 58
MIAP[R], 63, 7
SHP[1], 35
SRP0[], 35
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="209">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OVERLAP[]
OFFSET[R], 782, 1010, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="210">
      <instructions>
        <talk>/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YLink(8,24,69) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YLink(0,16,69) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 210, char 0x6f (o) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
SRP0[], 0
MIRP[m&gt;RBl], 16, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="211">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 775, 953, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="212">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 780, 953, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="213">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 778, 952, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="214">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 772, 952, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="215">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 774, 952, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="216">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 776, 990, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="217">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 783, 953, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="218">
      <instructions>
        <talk>/* uniA74F */

/* Y direction */
YAnchor(0,11)
YShift(0,22)
YLink(0,28,69)
YShift(28,43)
YAnchor(8,7)
YShift(8,14)
YLink(8,35,69)
YShift(35,51)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 218, char 0xa74f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 22
MIRP[m&gt;RBl], 28, 69
SHP[2], 43
MIAP[R], 8, 7
SHP[1], 14
MIRP[m&gt;RBl], 35, 69
SHP[2], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="219">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 800, 979, -30

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="220">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 809, 521, -221
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="221">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OVERLAP[]
OFFSET[R], 775, 953, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="222">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OVERLAP[]
OFFSET[R], 782, 952, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="223">
      <instructions>
        <talk>/* oe */

/* Y direction */
YAnchor(0,11)
YLink(0,47,69)
YShift(0,40)
YDist(40,33)
YDelta(33,1/4@12..19)
YDelta(33,1/2@20..31)
YAnchor(8,7)
YLink(8,55,69)
YShift(8,15)
YLink(15,25,69)
YIPAnchor(8,21,0)
YDist(21,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 223, char 0x153 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 47, 69
SHP[1], 40
SRP0[], 40
MDRP[m&gt;RBl], 33
CALL[], 33, 16, 12, 19, 72
CALL[], 33, 32, 20, 31, 72
MIAP[R], 8, 7
MIRP[m&gt;RBl], 55, 69
SHP[1], 15
SRP0[], 15
MIRP[m&gt;RBl], 25, 69
SRP1[], 8
SRP2[], 0
IP[], 21
MDAP[R], 21
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="224">
      <instructions>
        <talk>/* p */

/* Y direction */
YAnchor(11,11)
YLink(11,19,69)
YAnchor(35,7)
YShift(35,5)
YDist(35,27)
YAnchor(43,14)
YShift(43,10)
YLink(43,44,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 224, char 0x70 (p) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 11
MIRP[m&gt;RBl], 19, 69
MIAP[R], 35, 7
SHP[1], 5
MDRP[m&gt;RBl], 27
MIAP[R], 43, 14
SHP[1], 10
MIRP[m&gt;RBl], 44, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="225">
      <instructions>
        <talk>/* thorn */

/* Y direction */
YAnchor(5,0)
YAnchor(11,14)
YShift(11,10)
YLink(11,12,66)
YAnchor(16,11)
YLink(16,24,69)
YAnchor(40,7)
YDist(40,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 225, char 0xfe */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 11, 14
SHP[1], 10
MIRP[m&gt;RBl], 12, 66
MIAP[R], 16, 11
MIRP[m&gt;RBl], 24, 69
MIAP[R], 40, 7
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="226">
      <instructions>
        <talk>/* q */

/* Y direction */
YAnchor(5,11)
YLink(5,24,69)
YAnchor(13,7)
YShift(13,17)
YLink(13,33,69)
YAnchor(41,14)
YShift(41,23)
YLink(41,42,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 226, char 0x71 (q) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 11
MIRP[m&gt;RBl], 24, 69
MIAP[R], 13, 7
SHP[1], 17
MIRP[m&gt;RBl], 33, 69
MIAP[R], 41, 14
SHP[1], 23
MIRP[m&gt;RBl], 42, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="227">
      <instructions>
        <talk>/* r */

/* Y direction */
YAnchor(8,7)
YDist(8,23)
YDelta(23,-1/2@12..20)
YShift(8,37)
YAnchor(27,10)
YLink(27,28,66)
YShift(27,42)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 227, char 0x72 (r) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 7
MDRP[m&gt;RBl], 23
CALL[], 23, -32, 12, 20, 72
SHP[1], 37
MIAP[R], 27, 10
MIRP[m&gt;RBl], 28, 66
SHP[1], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="228">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 227, 0, 0
OVERLAP[]
OFFSET[R], 775, 842, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="229">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 227, 0, 0
OVERLAP[]
OFFSET[R], 779, 841, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="230">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 227, 0, 0
OVERLAP[]
OFFSET[R], 798, 710, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="231">
      <instructions>
        <talk>/* uniA75B */

/* Y direction */
YUpToGrid(0)
YAnchor(0,10)
YDist(0,26)
YAnchor(17,7)
YDist(17,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 231, char 0xa75b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
RDTG[]
MIAP[R], 0, 10
RTG[]
MDRP[m&gt;RBl], 26
MIAP[R], 17, 7
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="232">
      <instructions>
        <talk>/* s */

/* Y direction */
YAnchor(0,11)
YLink(0,10,69)
YAnchor(24,7)
YShift(24,30)
YLink(24,40,69)
YInterpolate(0,48,24)
YShift(48,16)

/* X direction */

Smooth()
YDelta(36,0.5@14..17)
YDelta(35,0.5@14..17)
YDelta(36,0.25@13)
YDelta(35,0.25@13)
YDelta(6,-0.5@13..17)
YDelta(7,-0.5@13..17)
YDelta(34,0.5@12)
YDelta(37,0.5@12)
YDelta(35,1@12)
YDelta(36,1@12)
YDelta(6,-1.5@12)
YDelta(7,-1.5@12)
YDelta(8,-1@12)
YDelta(5,-1@12)

</talk>
        <assembly>/* TT glyph 232, char 0x73 (s) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 10, 69
MIAP[R], 24, 7
SHP[1], 30
MIRP[m&gt;RBl], 40, 69
SRP2[], 0
IP[], 48
SRP1[], 48
SHP[1], 16
IUP[Y]
IUP[X]
CALL[], 36, 32, 14, 17, 72
CALL[], 35, 32, 14, 17, 72
DLTP1[(36 @4 2)]
DLTP1[(35 @4 2)]
CALL[], 6, -32, 13, 17, 72
CALL[], 7, -32, 13, 17, 72
DLTP1[(34 @3 4)]
DLTP1[(37 @3 4)]
DLTP1[(35 @3 8)]
DLTP1[(36 @3 8)]
SDS[], 2
DLTP1[(6 @3 -6)]
DLTP1[(7 @3 -6)]
DLTP1[(8 @3 -4)]
DLTP1[(5 @3 -4)]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="233">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OVERLAP[]
OFFSET[R], 775, 843, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="234">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OVERLAP[]
OFFSET[R], 779, 842, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="235">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OVERLAP[]
OFFSET[R], 799, 783, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="236">
      <instructions>
        <talk>/* germandbls */

/* Y direction */
YAnchor(53,0)
YDist(53,32)
YAnchor(75,10)
YShift(75,40)
YLink(75,76,66)
YShift(75,0)
YAnchor(0)
YLink(0,10,69)
YInterpolate(75,42,53)
YDist(42,43)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 236, char 0xdf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 53, 0
MDRP[m&gt;RBl], 32
MIAP[R], 75, 10
SHP[1], 40
MIRP[m&gt;RBl], 76, 66
SHP[1], 0
MDAP[R], 0
MIRP[m&gt;RBl], 10, 69
SRP1[], 75
SRP2[], 53
IP[], 42
SRP0[], 42
MDRP[m&gt;RBl], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="237">
      <instructions>
        <talk>/* longs */

/* Y direction */
YAnchor(10,1)
YDist(10,26)
YAnchor(33,10)
YShift(33,32)
YLink(33,34,66)
YInterpolate(10,2,33)
YDist(2,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 237, char 0x17f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MDRP[m&gt;RBl], 26
MIAP[R], 33, 10
SHP[1], 32
MIRP[m&gt;RBl], 34, 66
SRP2[], 10
IP[], 2
SRP0[], 2
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="238">
      <instructions>
        <talk>/* t */

/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(14)	/* max */

/* CVTs - beginning */
YAnchor(16,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(16,19) /*perpendicular to the stroke*/
YShift(19,9) /*along bottom edge*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 238, char 0x74 (t) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 14
MIAP[R], 16, 6
MDRP[m&gt;RBl], 19
SHP[2], 9
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="239">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OVERLAP[]
OFFSET[R], 807, 318, 60
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="240">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OVERLAP[]
OFFSET[R], 777, 773, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="241">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OVERLAP[]
OFFSET[R], 799, 780, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="242">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 225, 0, 0
OVERLAP[]
OFFSET[R], 807, 249, 608

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="243">
      <instructions>
        <talk>/* u */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,22)
YAnchor(7,6)
YShift(7,4)
YShift(7,24)
YShift(7,27)
YLink(7,6,66)
YShift(6,26)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 243, char 0x75 (u) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 22
MIAP[R], 7, 6
SHP[1], 4
SHP[1], 24
SHP[1], 27
MIRP[m&gt;RBl], 6, 66
SHP[2], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="244">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 775, 984, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="245">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 780, 984, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="246">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 778, 983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="247">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 772, 983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="248">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 774, 983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="249">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 776, 1021, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="250">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 783, 984, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="251">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 183, 0, 0
OVERLAP[]
OFFSET[R], 807, 261, 608

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="252">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YLink(0,30,69)
YAnchor(20,7)
YDist(20,12)
YShift(20,41)
YAnchor(50,10)
YLink(50,51,66)
YShift(50,55)
YAnchor(60,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 252, char 0x195 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 30, 69
MIAP[R], 20, 7
MDRP[m&gt;RBl], 12
SHP[1], 41
MIAP[R], 50, 10
MIRP[m&gt;RBl], 51, 66
SHP[1], 55
MIAP[R], 60, 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="253">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OVERLAP[]
OFFSET[R], 807, 259, 225

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="254">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OVERLAP[]
OFFSET[R], 807, 412, -46

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="255">
      <instructions>
        <talk>/* uni01FB */

/* Y direction */
YAnchor(1)
YAnchor(56,7)
YDist(56,42)
YAnchor(73,11)
YDist(73,88)
YIPAnchor(1,11,18,73)
YInterpolate(18,48,80,73)
YDist(11,24)
YDist(18,4)
YShift(80,81)
YShift(73,30)
YDist(30,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 255, char 0x1fb */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 56, 7
MDRP[m&gt;RBl], 42
MIAP[R], 73, 11
MDRP[m&gt;RBl], 88
SRP2[], 1
IP[], 11
IP[], 18
MDAP[R], 11
MDAP[R], 18
SRP2[], 73
IP[], 48
IP[], 80
SRP0[], 11
MDRP[m&gt;RBl], 24
SRP0[], 18
MDRP[m&gt;RBl], 4
SRP1[], 80
SHP[1], 81
SRP1[], 73
SHP[1], 30
SRP0[], 30
MDRP[m&gt;RBl], 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="256">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OVERLAP[]
OFFSET[R], 783, 943, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="257">
      <instructions>
        <talk>/* uni0250 */

/* Y direction */
YAnchor(0)
YDist(0,29)
YAnchor(60,7)
YDist(60,52)
YShift(60,17)
YAnchor(17)
YDist(17,10)
YInterpolate(60,44,35,0)
YDist(44,43)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 257, char 0x250 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 29
MIAP[R], 60, 7
MDRP[m&gt;RBl], 52
SHP[1], 17
MDAP[R], 17
MDRP[m&gt;RBl], 10
SRP1[], 60
SRP2[], 0
IP[], 44
IP[], 35
SRP0[], 44
MDRP[m&gt;RBl], 43
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="258">
      <instructions>
        <talk>/* uni0251 */

/* Y direction */
YAnchor(0,11)
YLink(0,22,69)
YShift(0,28)
YDist(28,42)
YAnchor(8,7)
YLink(8,15,69)
YShift(8,34)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 258, char 0x251 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 22, 69
SHP[1], 28
SRP0[], 28
MDRP[m&gt;RBl], 42
MIAP[R], 8, 7
MIRP[m&gt;RBl], 15, 69
SHP[1], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="259">
      <instructions>
        <talk>/* uni0252 */

/* Y direction */
YAnchor(0,11)
YLink(0,7,69)
YShift(0,30)
YAnchor(22,7)
YLink(22,14,69)
YShift(22,45)
YDist(45,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 259, char 0x252 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 7, 69
SHP[1], 30
MIAP[R], 22, 7
MIRP[m&gt;RBl], 14, 69
SHP[1], 45
SRP0[], 45
MDRP[m&gt;RBl], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="260">
      <instructions>
        <talk>/* uni0253 */

/* Y direction */
YAnchor(13,1)
YDist(13,20)
YShift(13,23)
YAnchor(48,7)
YDist(48,42)
YAnchor(56,11)
YShift(56,0)
YDist(56,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 260, char 0x253 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 1
MDRP[m&gt;RBl], 20
SHP[1], 23
MIAP[R], 48, 7
MDRP[m&gt;RBl], 42
MIAP[R], 56, 11
SHP[1], 0
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="261">
      <instructions>
        <talk>/* uni0254 */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(32,7)	/* max */

/* YDir: Stroke #0 */
YDist(32,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,16) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 261, char 0x254 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 32, 7
MDRP[m&gt;RBl], 24
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="262">
      <instructions>
        <talk>/* Y direction */
YAnchor(0,11)
YLink(0,31,69)
YAnchor(8,7)
YLink(8,23,69)
YIPAnchor(8,38,0)
YLink(38,45,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 262, char 0x255 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 31, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 23, 69
SRP2[], 0
IP[], 38
MDAP[R], 38
MIRP[m&gt;RBl], 45, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="263">
      <instructions>
        <talk>/* uni0256 */

/* Y direction */
YAnchor(0,11)
YDist(0,28)
YAnchor(9,7)
YLink(9,35,69)
YAnchor(18,1)
YAnchor(43,14)
YDist(43,57)
YShift(43,58)
YDist(43,61)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 263, char 0x256 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 28
MIAP[R], 9, 7
MIRP[m&gt;RBl], 35, 69
MIAP[R], 18, 1
MIAP[R], 43, 14
MDRP[m&gt;RBl], 57
SHP[1], 58
MDRP[m&gt;RBl], 61
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="264">
      <instructions>
        <talk>/* uni0257 */

/* Y direction */
YAnchor(5,11)
YShift(5,0)
YDist(5,54)
YShift(5,49)
YDist(49,48)
YAnchor(14,7)
YLink(14,61,69)
YAnchor(26,1)
YDist(26,32)
YShift(26,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 264, char 0x257 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 0
MDRP[m&gt;RBl], 54
SHP[1], 49
SRP0[], 49
MDRP[m&gt;RBl], 48
MIAP[R], 14, 7
MIRP[m&gt;RBl], 61, 69
MIAP[R], 26, 1
MDRP[m&gt;RBl], 32
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="265">
      <instructions>
        <talk>/* uni0258 */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(25,7)	/* max */

/* YDir: Stroke #0 */
YDist(25,15) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(25,18,0)
YAnchor(18)
YDist(18,21) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,7) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 265, char 0x258 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 25, 7
MDRP[m&gt;RBl], 15
SRP2[], 0
IP[], 18
MDAP[R], 18
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="266">
      <instructions>
        <talk>/* uni025B */

/* Y direction */
YAnchor(0,11)
YDist(0,41)
YAnchor(12,7)
YLink(12,26,69)
YIPAnchor(12,32,0)
YLink(32,35,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 266, char 0x25b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 41
MIAP[R], 12, 7
MIRP[m&gt;RBl], 26, 69
SRP2[], 0
IP[], 32
MDAP[R], 32
MIRP[m&gt;RBl], 35, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="267">
      <instructions>
        <talk>/* uni025C */

/* Y direction */
YAnchor(0,11)
YDist(0,6)
YAnchor(35,7)
YLink(35,21,69)
YIPAnchor(35,14,0)
YLink(14,13,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 267, char 0x25c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 6
MIAP[R], 35, 7
MIRP[m&gt;RBl], 21, 69
SRP2[], 0
IP[], 14
MDAP[R], 14
MIRP[m&gt;RBl], 13, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="268">
      <instructions>
        <talk>/* 025D */

/* Y direction */
YAnchor(0,11)
YDist(0,6)
YAnchor(35,7)
YLink(35,21,69)
YIPAnchor(35,14,47,0)
YLink(14,13,88)
YDist(47,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 268, char 0x25d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 6
MIAP[R], 35, 7
MIRP[m&gt;RBl], 21, 69
SRP2[], 0
IP[], 14
IP[], 47
MDAP[R], 14
MDAP[R], 47
SRP0[], 14
MIRP[m&gt;RBl], 13, 88
SRP0[], 47
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="269">
      <instructions>
        <talk>/* 025E */

/* Y direction */
YAnchor(0,11)
YLink(0,24,69)
YAnchor(9,7)
YLink(9,39,69)
YIPAnchor(9,32,0)
YInterpolate(32,16,0)
YDist(32,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 269, char 0x25e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 24, 69
MIAP[R], 9, 7
MIRP[m&gt;RBl], 39, 69
SRP2[], 0
IP[], 32
MDAP[R], 32
IP[], 16
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="270">
      <instructions>
        <talk>/* 025F */

/* Y direction */
YAnchor(0,14)
YDist(0,15)
YAnchor(40,6)
YShift(40,26)
YDist(40,41)
YIPAnchor(0,24,40)
YDist(24,21)
YShift(24,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 270, char 0x25f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 15
MIAP[R], 40, 6
SHP[1], 26
MDRP[m&gt;RBl], 41
SRP2[], 0
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 21
SHP[1], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="271">
      <instructions>
        <talk>/* 0260 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YLink(0,13,69)
YAnchor(26)
YDist(26,33)
YDist(26,38)
YAnchor(47,11)
YLink(47,69,69)
YAnchor(55,7)
YLink(55,62,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 271, char 0x260 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MIRP[m&gt;RBl], 13, 69
MDAP[R], 26
MDRP[m&gt;RBl], 33
MDRP[m&lt;RGr], 38
MIAP[R], 47, 11
MIRP[m&gt;RBl], 69, 69
MIAP[R], 55, 7
MIRP[m&gt;RBl], 62, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="272">
      <instructions>
        <talk>/* 0261 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YLink(0,13,69)
YAnchor(28,11)
YLink(28,50,69)
YAnchor(36,7)
YLink(36,43,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 272, char 0x261 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MIRP[m&gt;RBl], 13, 69
MIAP[R], 28, 11
MIRP[m&gt;RBl], 50, 69
MIAP[R], 36, 7
MIRP[m&gt;RBl], 43, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="273">
      <instructions>
        <talk>/* 0262 */

/* Y direction */
YAnchor(0,11)
YLink(0,29,69)
YAnchor(8,7)
YShift(8,14)
YLink(8,21,69)
YInterpolate(0,37,8)
YShift(37,34)
YShift(37,41)
YLink(37,36,66)
YShift(36,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 273, char 0x262 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 29, 69
MIAP[R], 8, 7
SHP[1], 14
MIRP[m&gt;RBl], 21, 69
SRP2[], 0
IP[], 37
SRP1[], 37
SHP[1], 34
SHP[1], 41
SRP0[], 37
MIRP[m&gt;RBl], 36, 66
SHP[2], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="274">
      <instructions>
        <talk>/* 0263 */

/* Y direction */
YAnchor(0,14)
YDist(0,15)
YAnchor(34,6)
YShift(34,7)
YShift(34,23)
YShift(34,38)
YLink(34,35,88)
YShift(35,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 274, char 0x263 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 15
MIAP[R], 34, 6
SHP[1], 7
SHP[1], 23
SHP[1], 38
MIRP[m&gt;RBl], 35, 88
SHP[2], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="275">
      <instructions>
        <talk>/* 0264 */

/* Y direction */
YAnchor(0,11)
YLink(0,26,69)
YAnchor(43,7)
YShift(43,9)
YLink(43,34,69)
YShift(34,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 275, char 0x264 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 26, 69
MIAP[R], 43, 7
SHP[1], 9
MIRP[m&gt;RBl], 34, 69
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="276">
      <instructions>
        <talk>/* 0265 */

/* Y direction */
YAnchor(0,11)
YDist(0,19)
YAnchor(27,14)
YAnchor(41,6)
YShift(41,10)
YShift(41,32)
YLink(41,42,66)
YShift(41,45)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 276, char 0x265 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 19
MIAP[R], 27, 14
MIAP[R], 41, 6
SHP[1], 10
SHP[1], 32
MIRP[m&gt;RBl], 42, 66
SHP[1], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="277">
      <instructions>
        <talk>/* 0266 */

/* Y direction */
YAnchor(9)
YDist(9,16)
YDist(9,21)
YAnchor(44,7)
YDist(44,36)
YAnchor(58,10)
YShift(58,26)
YShift(58,27)
YShift(58,59)
YLink(58,57,66)
YShift(57,60)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 277, char 0x266 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RBl], 16
MDRP[m&lt;RGr], 21
MIAP[R], 44, 7
MDRP[m&gt;RBl], 36
MIAP[R], 58, 10
SHP[1], 26
SHP[1], 27
SHP[1], 59
MIRP[m&gt;RBl], 57, 66
SHP[2], 60
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="278">
      <instructions>
        <talk>/* 0267 */

/* Y direction */
YAnchor(0,14)
YDist(0,7)
YDist(0,12)
YAnchor(34,7)
YDist(34,25)
YAnchor(60,1)
YDist(60,72)
YAnchor(82,10)
YShift(82,77)
YLink(82,81,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 278, char 0x267 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 7
MDRP[m&lt;RGr], 12
MIAP[R], 34, 7
MDRP[m&gt;RBl], 25
MIAP[R], 60, 1
MDRP[m&lt;RGr], 72
MIAP[R], 82, 10
SHP[1], 77
MIRP[m&gt;RBl], 81, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="279">
      <instructions>
        <talk>/* 0268 */

/* Y direction */
YAnchor(9,7)
YAnchor(19,10)
YShift(19,14)
YLink(19,18,66)
YInterpolate(19,3,9)
YDist(3,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 279, char 0x268 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 7
MIAP[R], 19, 10
SHP[1], 14
MIRP[m&gt;RBl], 18, 66
SRP2[], 9
IP[], 3
SRP0[], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="280">
      <instructions>
        <talk>/* 026A */

/* Y direction */
YAnchor(4,10)
YShift(4,0)
YLink(4,5,88)
YAnchor(11,6)
YShift(11,1)
YLink(11,10,88)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 280, char 0x26a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 10
SHP[1], 0
MIRP[m&gt;RBl], 5, 88
MIAP[R], 11, 6
SHP[1], 1
MIRP[m&gt;RBl], 10, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="281">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OVERLAP[]
OFFSET[R], 806, 684, -453
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="282">
      <instructions>
        <talk>/* 026C */

/* Y direction */
YAnchor(5,1)
YAnchor(42,10)
YShift(42,0)
YLink(42,43,66)
YInterpolate(5,37,30,42)
YDist(37,16)
YDist(30,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 282, char 0x26c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 1
MIAP[R], 42, 10
SHP[1], 0
MIRP[m&gt;RBl], 43, 66
SRP2[], 5
IP[], 37
IP[], 30
SRP0[], 37
MDRP[m&gt;RBl], 16
SRP0[], 30
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="283">
      <instructions>
        <talk>/* 026D */

/* Min and Max */
YAnchor(0,14)	/* min */
YAnchor(12,1)	/* max */

/* YDir: Stroke #0 */
YDist(0,26) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,23)

Smooth()

</talk>
        <assembly>/* TT glyph 283, char 0x26d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 12, 1
SRP0[], 0
MDRP[m&gt;RBl], 26
SHP[1], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="284">
      <instructions>
        <talk>/* 026E */

/* Y direction */
YAnchor(5,1)
YAnchor(11,10)
YShift(11,0)
YLink(11,12,66)
YAnchor(20,6)
YDist(20,19)
YAnchor(24,14)
YDist(24,40)
YIPAnchor(20,49,24)
YDist(49,56)
YShift(56,16)
YShift(56,53)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 284, char 0x26e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 1
MIAP[R], 11, 10
SHP[1], 0
MIRP[m&gt;RBl], 12, 66
MIAP[R], 20, 6
MDRP[m&gt;RBl], 19
MIAP[R], 24, 14
MDRP[m&gt;RBl], 40
SRP2[], 20
IP[], 49
MDAP[R], 49
MDRP[m&gt;RBl], 56
SHP[2], 16
SHP[2], 53
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="285">
      <instructions>
        <talk>/* 026F */

/* Y direction */
YAnchor(29,11)
YShift(29,0)
YShift(29,53)
YDist(29,44)
YShift(44,20)
YAnchor(72,6)
YShift(72,10)
YShift(72,37)
YShift(72,58)
YShift(72,67)
YShift(72,76)
YLink(72,73,66)
YShift(73,68)
YShift(73,75)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 285, char 0x26f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 29, 11
SHP[1], 0
SHP[1], 53
MDRP[m&gt;RBl], 44
SHP[2], 20
MIAP[R], 72, 6
SHP[1], 10
SHP[1], 37
SHP[1], 58
SHP[1], 67
SHP[1], 76
MIRP[m&gt;RBl], 73, 66
SHP[2], 68
SHP[2], 75
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="286">
      <instructions>
        <talk>/* 0270 */

/* Y direction */
YAnchor(0,14)
YAnchor(40,11)
YShift(40,11)
YDist(40,55)
YShift(55,31)
YAnchor(72,6)
YShift(72,5)
YShift(72,21)
YShift(72,48)
YShift(72,67)
YShift(72,76)
YLink(72,73,66)
YShift(73,68)
YShift(73,75)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 286, char 0x270 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 40, 11
SHP[1], 11
MDRP[m&gt;RBl], 55
SHP[2], 31
MIAP[R], 72, 6
SHP[1], 5
SHP[1], 21
SHP[1], 48
SHP[1], 67
SHP[1], 76
MIRP[m&gt;RBl], 73, 66
SHP[2], 68
SHP[2], 75
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="287">
      <instructions>
        <talk>/* 0271 */

/* Y direction */
YAnchor(0,14)
YDist(0,7)
YDist(0,12)
YAnchor(78,7)
YShift(78,34)
YShift(78,56)
YDist(78,69)
YShift(69,25)
YAnchor(91,6)
YShift(91,61)
YShift(91,62)
YShift(91,90)
YLink(91,92,66)
YShift(92,89)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 287, char 0x271 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 7
MDRP[m&lt;RGr], 12
MIAP[R], 78, 7
SHP[1], 34
SHP[1], 56
MDRP[m&gt;RBl], 69
SHP[2], 25
MIAP[R], 91, 6
SHP[1], 61
SHP[1], 62
SHP[1], 90
MIRP[m&gt;RBl], 92, 66
SHP[2], 89
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="288">
      <instructions>
        <talk>/* uni0272 */

/* Y direction */
YAnchor(0,14)
YAnchor(51,7)
YShift(51,21)
YDist(51,42)
YAnchor(61,6)
YShift(61,33)
YLink(61,62,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 288, char 0x272 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 51, 7
SHP[1], 21
MDRP[m&gt;RBl], 42
MIAP[R], 61, 6
SHP[1], 33
MIRP[m&gt;RBl], 62, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="289">
      <instructions>
        <talk>/* 0273 */

/* Y direction */
YAnchor(0,14)
YDist(0,37)
YDist(0,42)
YAnchor(24,7)
YDist(24,16)
YShift(24,59)
YAnchor(53,6)
YLink(53,52,66)
YShift(53,64)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 289, char 0x273 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&lt;RGr], 37
MDRP[m&gt;RBl], 42
MIAP[R], 24, 7
MDRP[m&gt;RBl], 16
SHP[1], 59
MIAP[R], 53, 6
MIRP[m&gt;RBl], 52, 66
SHP[1], 64
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="290">
      <instructions>
        <talk>/* 0274 */

/* Y direction */
YAnchor(23,10)
YShift(23,0)
YShift(23,10)
YShift(23,18)
YLink(23,22,66)
YAnchor(26,6)
YShift(26,5)
YShift(26,12)
YShift(26,16)
YLink(26,25,66)
YShift(25,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 290, char 0x274 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 10
SHP[1], 0
SHP[1], 10
SHP[1], 18
MIRP[m&gt;RBl], 22, 66
MIAP[R], 26, 6
SHP[1], 5
SHP[1], 12
SHP[1], 16
MIRP[m&gt;RBl], 25, 66
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="291">
      <instructions>
        <talk>/* 0275 */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(8,7)	/* max */

/* YDir: Stroke #0 */
YDist(8,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YIPAnchor(8,32,0)
YDist(32,33) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,16) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 291, char 0x275 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 8, 7
MDRP[m&gt;RBl], 24
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 33
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="292">
      <instructions>
        <talk>/* 0276 */

/* Y direction */
YAnchor(33,6)
YLink(33,32,66)
YShift(33,8)
YLink(8,18,69)
YAnchor(36,10)
YLink(36,37,66)
YShift(36,0)
YLink(0,11,69)
YIPAnchor(36,45,33)
YShift(45,49)
YLink(45,46,66)
YShift(46,50)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 292, char 0x276 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 33, 6
MIRP[m&gt;RBl], 32, 66
SHP[1], 8
SRP0[], 8
MIRP[m&gt;RBl], 18, 69
MIAP[R], 36, 10
MIRP[m&gt;RBl], 37, 66
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 11, 69
SRP1[], 36
SRP2[], 33
IP[], 45
MDAP[R], 45
SHP[1], 49
MIRP[m&gt;RBl], 46, 66
SHP[2], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="293">
      <instructions>
        <talk>/* 0278 */

/* Y direction */
YAnchor(8)
YShift(8,3)
YLink(8,7,66)
YAnchor(12)
YShift(12,2)
YLink(12,13,66)
YInterpolate(8,14,31,39,23,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 293, char 0x278 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 3
MIRP[m&gt;RBl], 7, 66
MDAP[R], 12
SHP[1], 2
MIRP[m&gt;RBl], 13, 66
SRP2[], 8
SLOOP[], 4
IP[], 14, 31, 39, 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="294">
      <instructions>
        <talk>/* 0279 */

/* Y direction */
YAnchor(0,11)
YDist(0,9)
YDist(0,15)
YShift(0,32)
YAnchor(29,6)
YLink(29,28,66)
YShift(29,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 294, char 0x279 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 9
MDRP[m&gt;RBl], 15
SHP[1], 32
MIAP[R], 29, 6
MIRP[m&gt;RBl], 28, 66
SHP[1], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="295">
      <instructions>
        <talk>/* 027A */

/* Y direction */
YAnchor(11,11)
YShift(11,0)
YDist(11,20)
YDist(11,25)
YAnchor(40)
YShift(40,6)
YLink(40,41,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 295, char 0x27a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 11
SHP[1], 0
MDRP[m&gt;RBl], 20
MDRP[m&gt;RBl], 25
MDAP[R], 40
SHP[1], 6
MIRP[m&gt;RBl], 41, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="296">
      <instructions>
        <talk>/* 027B */

/* Y direction */
YAnchor(0,11)
YDist(0,9)
YDist(0,14)
YAnchor(28)
YLink(28,27,66)
YShift(28,39)
YAnchor(31,14)
YDist(31,45)
YDist(31,50)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 296, char 0x27b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 9
MDRP[m&gt;RBl], 14
MDAP[R], 28
MIRP[m&gt;RBl], 27, 66
SHP[1], 39
MIAP[R], 31, 14
MDRP[m&lt;RGr], 45
MDRP[m&gt;RBl], 50
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="297">
      <instructions>
        <talk>/* 027D */

/* Y direction */
YAnchor(9,7)
YDist(9,18)
YDist(9,24)
YShift(9,40)
YAnchor(28,14)
YDist(28,49)
YDist(28,54)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 297, char 0x27d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 7
MDRP[m&gt;RBl], 18
MDRP[m&gt;RBl], 24
SHP[1], 40
MIAP[R], 28, 14
MDRP[m&lt;RGr], 49
MDRP[m&gt;RBl], 54
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="298">
      <instructions>
        <talk>/* 027E */

/* Y direction */
YAnchor(6,7)
YDist(6,21)
YAnchor(27,10)
YShift(27,26)
YLink(27,28,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 298, char 0x27e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 7
MDRP[m&gt;RBl], 21
MIAP[R], 27, 10
SHP[1], 26
MIRP[m&gt;RBl], 28, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="299">
      <instructions>
        <talk>/* 027F */

/* Y direction */
YAnchor(0)
YLink(0,1,66)
YShift(0,31)
YAnchor(22,7)
YDist(22,11)
YDist(22,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 299, char 0x27f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 66
SHP[1], 31
MIAP[R], 22, 7
MDRP[m&gt;RBl], 11
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="300">
      <instructions>
        <talk>/* 0280 */

/* Y direction */
YAnchor(40,10)
YShift(40,20)
YLink(40,41,66)
YShift(40,39)
YDist(39,38)
YAnchor(47,6)
YShift(47,21)
YInterpolate(40,6,30,47)
YDist(6,11)
YLink(47,46,66)
YShift(46,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 300, char 0x280 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 40, 10
SHP[1], 20
MIRP[m&gt;RBl], 41, 66
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 38
MIAP[R], 47, 6
SHP[1], 21
SRP2[], 40
IP[], 6
IP[], 30
SRP0[], 6
MDRP[m&gt;RBl], 11
SRP0[], 47
MIRP[m&gt;RBl], 46, 66
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="301">
      <instructions>
        <talk>/* 0281 */

/* Y direction */
YAnchor(43,10)
YShift(43,39)
YLink(43,42,66)
YShift(42,36)
YAnchor(46,6)
YShift(46,37)
YLink(46,45,66)
YInterpolate(43,29,8,46)
YDist(29,24)
YShift(46,17)
YDist(17,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 301, char 0x281 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 43, 10
SHP[1], 39
MIRP[m&gt;RBl], 42, 66
SHP[2], 36
MIAP[R], 46, 6
SHP[1], 37
MIRP[m&gt;RBl], 45, 66
SRP2[], 43
IP[], 29
IP[], 8
SRP0[], 29
MDRP[m&gt;RBl], 24
SRP1[], 46
SHP[1], 17
SRP0[], 17
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="302">
      <instructions>
        <talk>/* 0282 */

/* Y direction */
YAnchor(0)
YDist(0,63)
YDist(0,67)
YAnchor(24,7)
YLink(24,40,69)
YAnchor(54,11)
YLink(54,10,69)
YInterpolate(54,16,48,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 302, char 0x282 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 63
MDRP[m&gt;RBl], 67
MIAP[R], 24, 7
MIRP[m&gt;RBl], 40, 69
MIAP[R], 54, 11
MIRP[m&gt;RBl], 10, 69
SRP2[], 24
IP[], 16
IP[], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="303">
      <instructions>
        <talk>/* 0283 */

/* Min and Max */
YAnchor(0,14)	/* min */
YAnchor(28,1)	/* max */

/* YDir: Stroke #0 */
YDist(28,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 303, char 0x283 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 28, 1
MDRP[m&gt;RBl], 41
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="304">
      <instructions>
        <talk>/* 0284 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YDist(0,9)
YAnchor(22,1)
YDist(22,29)
YDist(22,33)
YIPAnchor(22,45,0)
YDist(45,46)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 304, char 0x284 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 9
MIAP[R], 22, 1
MDRP[m&gt;RBl], 29
MDRP[m&gt;RBl], 33
SRP2[], 0
IP[], 45
MDAP[R], 45
MDRP[m&gt;RBl], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="305">
      <instructions>
        <talk>/* 0285 */

/* Y direction */
YAnchor(0,14)
YDist(0,45)
YDist(0,51)
YAnchor(29,7)
YDist(29,16)
YDist(29,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 305, char 0x285 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 45
MDRP[m&gt;RBl], 51
MIAP[R], 29, 7
MDRP[m&gt;RBl], 16
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="306">
      <instructions>
        <talk>/* 0286 */

/* Y direction */
YAnchor(0,14)
YShift(0,11)
YDist(0,22)
YAnchor(37,1)
YDist(37,44)
YDist(37,50)
YIPAnchor(37,15,0)
YDist(15,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 306, char 0x286 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 11
MDRP[m&gt;RBl], 22
MIAP[R], 37, 1
MDRP[m&gt;RBl], 44
MDRP[m&gt;RBl], 50
SRP2[], 0
IP[], 15
MDAP[R], 15
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="307">
      <instructions>
        <talk>/* 0287 */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(16,7)	/* max */

/* YDir: Stroke #0 */
YDist(16,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */

YAnchor(3,10)
YDist(3,4) /*perpendicular to the stroke*/
YShift(4,21) /*along top edge*/

Smooth()

</talk>
        <assembly>/* TT glyph 307, char 0x287 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 16, 7
MDRP[m&gt;RBl], 9
MIAP[R], 3, 10
MDRP[m&gt;RBl], 4
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="308">
      <instructions>
        <talk>/* 0288 */

/* Y direction */
YAnchor(0,14)
YDist(0,25)
YDist(0,29)
YAnchor(14)
YAnchor(16,6)
YDist(16,19)
YShift(19,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 308, char 0x288 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 25
MDRP[m&gt;RBl], 29
MDAP[R], 14
MIAP[R], 16, 6
MDRP[m&gt;RBl], 19
SHP[2], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="309">
      <instructions>
        <talk>/* 0289 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,22)
YAnchor(7,6)
YShift(7,4)
YShift(7,24)
YShift(7,27)
YLink(7,6,66)
YShift(6,26)
YIPAnchor(0,44,7)
YDist(44,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 309, char 0x289 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 22
MIAP[R], 7, 6
SHP[1], 4
SHP[1], 24
SHP[1], 27
MIRP[m&gt;RBl], 6, 66
SHP[2], 26
SRP2[], 0
IP[], 44
MDAP[R], 44
MDRP[m&gt;RBl], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="310">
      <instructions>
        <talk>/* 028A */

/* Y direction */
YAnchor(0,11)
YLink(0,22,69)
YAnchor(11,6)
YShift(11,8)
YShift(11,16)
YShift(11,28)
YShift(11,33)
YShift(11,36)
YLink(11,10,66)
YShift(10,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 310, char 0x28a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 22, 69
MIAP[R], 11, 6
SHP[1], 8
SHP[1], 16
SHP[1], 28
SHP[1], 33
SHP[1], 36
MIRP[m&gt;RBl], 10, 66
SHP[2], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="311">
      <instructions>
        <talk>/* 028B */

/* Y direction */
YAnchor(0,11)
YLink(0,18,69)
YAnchor(9,7)
YShift(9,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 311, char 0x28b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 18, 69
MIAP[R], 9, 7
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="312">
      <instructions>
        <talk>/* 028C */

/* Y direction */
YAnchor(1,7)
YShift(1,6)
YAnchor(8,10)
YShift(8,4)
YShift(8,7)
YShift(8,13)
YLink(8,9,88)
YShift(9,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 312, char 0x28c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 1, 7
SHP[1], 6
MIAP[R], 8, 10
SHP[1], 4
SHP[1], 7
SHP[1], 13
MIRP[m&gt;RBl], 9, 88
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="313">
      <instructions>
        <talk>/* 028D */

/* Y direction */
YAnchor(1,7)
YShift(1,5)
YShift(1,24)
YShift(1,28)
YAnchor(8,10)
YShift(8,4)
YShift(8,7)
YShift(8,13)
YShift(8,18)
YShift(8,23)
YShift(8,26)
YLink(8,9,66)
YShift(9,14)
YShift(9,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 313, char 0x28d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 1, 7
SHP[1], 5
SHP[1], 24
SHP[1], 28
MIAP[R], 8, 10
SHP[1], 4
SHP[1], 7
SHP[1], 13
SHP[1], 18
SHP[1], 23
SHP[1], 26
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="314">
      <instructions>
        <talk>/* 028E */

/* Y direction */
YAnchor(4)
YShift(4,27)
YAnchor(15,10)
YShift(15,14)
YShift(15,20)
YShift(15,25)
YLink(15,16,66)
YShift(16,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 314, char 0x28e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 27
MIAP[R], 15, 10
SHP[1], 14
SHP[1], 20
SHP[1], 25
MIRP[m&gt;RBl], 16, 66
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="315">
      <instructions>
        <talk>/* 028F */

/* Y direction */
YAnchor(12,10)
YShift(12,0)
YLink(12,13,66)
YAnchor(19,6)
YShift(19,3)
YShift(19,8)
YShift(19,24)
YInterpolate(19,9,2,12)
YShift(9,6)
YLink(19,18,66)
YShift(18,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 315, char 0x28f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 10
SHP[1], 0
MIRP[m&gt;RBl], 13, 66
MIAP[R], 19, 6
SHP[1], 3
SHP[1], 8
SHP[1], 24
SRP2[], 12
IP[], 9
IP[], 2
SRP1[], 9
SHP[1], 6
MIRP[m&gt;RBl], 18, 66
SHP[2], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="316">
      <instructions>
        <talk>/* 0290 */

/* Y direction */
YAnchor(0)
YDist(0,38)
YShift(0,39)
YDist(0,42)
YAnchor(7,10)
YDist(7,27)
YAnchor(23,6)
YShift(23,9)
YDist(23,11)
YShift(23,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 316, char 0x290 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 38
SHP[1], 39
MDRP[m&gt;RBl], 42
MIAP[R], 7, 10
MDRP[m&gt;RBl], 27
MIAP[R], 23, 6
SHP[1], 9
MDRP[m&gt;RBl], 11
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="317">
      <instructions>
        <talk>/* 0291 */

/* Y direction */
YAnchor(14,10)
YShift(14,0)
YDist(14,34)
YAnchor(30,6)
YShift(30,16)
YDist(30,18)
YShift(30,27)
YIPAnchor(14,6,30)
YDist(6,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 317, char 0x291 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 14, 10
SHP[1], 0
MDRP[m&gt;RBl], 34
MIAP[R], 30, 6
SHP[1], 16
MDRP[m&gt;RBl], 18
SHP[1], 27
SRP2[], 14
IP[], 6
MDAP[R], 6
MDRP[m&gt;RBl], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="318">
      <instructions>
        <talk>/* 0292 */

/* Y direction */
YAnchor(0,14)
YDist(0,16)
YAnchor(53,6)
YDist(53,43)
YShift(53,50)
YShift(53,55)
YIPAnchor(53,32,0)
YDist(32,25)
YShift(32,29)
YShift(32,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 318, char 0x292 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 16
MIAP[R], 53, 6
MDRP[m&gt;RBl], 43
SHP[1], 50
SHP[1], 55
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 25
SHP[1], 29
SHP[1], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="319">
      <instructions>
        <talk>/* 0293 */

/* Y direction */
YAnchor(34,14)
YShift(34,0)
YDist(34,10)
YAnchor(57,6)
YDist(57,47)
YShift(57,54)
YIPAnchor(57,26,40,34)
YDist(26,19)
YShift(26,23)
YShift(26,44)
YDist(40,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 319, char 0x293 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 14
SHP[1], 0
MDRP[m&gt;RBl], 10
MIAP[R], 57, 6
MDRP[m&gt;RBl], 47
SHP[1], 54
SRP2[], 34
IP[], 26
IP[], 40
MDAP[R], 26
MDAP[R], 40
SRP0[], 26
MDRP[m&gt;RBl], 19
SHP[1], 23
SHP[1], 44
SRP0[], 40
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="320">
      <instructions>
        <talk>/* 0294 */

/* Y direction */
YAnchor(28,1)
YDist(28,9)
YAnchor(39,10)
YShift(39,38)
YLink(39,40,66)
YInterpolate(39,2,21,28)
YDist(2,36)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 320, char 0x294 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 28, 1
MDRP[m&gt;RBl], 9
MIAP[R], 39, 10
SHP[1], 38
MIRP[m&gt;RBl], 40, 66
SRP2[], 28
IP[], 2
IP[], 21
SRP0[], 2
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="321">
      <instructions>
        <talk>/* 0295 */

/* Y direction */
YAnchor(10,11)
YDist(10,29)
YAnchor(39,6)
YShift(39,38)
YLink(39,40,66)
YInterpolate(39,36,17,10)
YDist(36,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 321, char 0x295 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 11
MDRP[m&gt;RBl], 29
MIAP[R], 39, 6
SHP[1], 38
MIRP[m&gt;RBl], 40, 66
SRP2[], 10
IP[], 36
IP[], 17
SRP0[], 36
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="322">
      <instructions>
        <talk>/* 0296 */

/* Y direction */
YAnchor(0,11)
YDist(0,19)
YAnchor(41)
YShift(41,29)
YLink(41,40,66)
YInterpolate(0,7,26,41)
YDist(26,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 322, char 0x296 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 19
MDAP[R], 41
SHP[1], 29
MIRP[m&gt;RBl], 40, 66
SRP2[], 0
IP[], 7
IP[], 26
SRP0[], 26
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="323">
      <instructions>
        <talk>/* 0297 */

/* Y direction */
YAnchor(0)
YDist(0,29)
YAnchor(6,7)
YLink(6,22,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 323, char 0x297 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 29
MIAP[R], 6, 7
MIRP[m&gt;RBl], 22, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="324">
      <instructions>
        <talk>/* 0298 */

/* Y direction */
YAnchor(0,11)
YLink(0,20,69)
YShift(0,39)
YAnchor(10)
YLink(10,29,69)
YShift(10,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 324, char 0x298 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 20, 69
SHP[1], 39
MDAP[R], 10
MIRP[m&gt;RBl], 29, 69
SHP[1], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="325">
      <instructions>
        <talk>/* 0299 */

/* Y direction */
YAnchor(16,10)
YShift(16,0)
YLink(16,17,66)
YShift(17,20)
YAnchor(33,6)
YShift(33,1)
YIPAnchor(16,30,33)
YInterpolate(30,8,33)
YDist(30,35)
YLink(33,32,66)
YShift(32,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 325, char 0x299 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 10
SHP[1], 0
MIRP[m&gt;RBl], 17, 66
SHP[2], 20
MIAP[R], 33, 6
SHP[1], 1
SRP2[], 16
IP[], 30
MDAP[R], 30
SRP2[], 33
IP[], 8
MDRP[m&gt;RBl], 35
SRP0[], 33
MIRP[m&gt;RBl], 32, 66
SHP[2], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="326">
      <instructions>
        <talk>/* 029B */

/* Y direction */
YAnchor(0,11)
YLink(0,50,69)
YShift(0,69)
YAnchor(8,7)
YLink(8,42,69)
YIPAnchor(0,58,8)
YLink(58,57,66)
YShift(57,60)
YAnchor(19)
YDist(19,26)
YShift(19,29)
YDist(19,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 326, char 0x29b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 50, 69
SHP[1], 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 42, 69
SRP2[], 0
IP[], 58
MDAP[R], 58
MIRP[m&gt;RBl], 57, 66
SHP[2], 60
MDAP[R], 19
MDRP[m&gt;RBl], 26
SHP[1], 29
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="327">
      <instructions>
        <talk>/* 029C */

/* Y direction */
YAnchor(12,10)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,66)
YShift(13,18)
YAnchor(24,6)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(24,8,12)
YDist(8,9)
YLink(24,23,66)
YShift(23,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 327, char 0x29c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 10
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 66
SHP[2], 18
MIAP[R], 24, 6
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
SRP0[], 24
MIRP[m&gt;RBl], 23, 66
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="328">
      <instructions>
        <talk>/* 029D */

/* Y direction */
YAnchor(0,14)
YShift(0,12)
YDist(0,23)
YAnchor(38,7)
YIPAnchor(0,7,38)
YDist(7,16)
YDist(38,44)
YDist(44,50)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 328, char 0x29d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 12
MDRP[m&gt;RBl], 23
MIAP[R], 38, 7
SRP2[], 0
IP[], 7
MDAP[R], 7
MDRP[m&gt;RBl], 16
SRP0[], 38
MDRP[M&lt;RWh], 44
MDRP[m&gt;RBl], 50
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="329">
      <instructions>
        <talk>/* 029F */

/* Y direction */
YAnchor(15,6)
YShift(15,1)
YLink(15,14,66)
YAnchor(18,10)
YShift(18,0)
YShift(18,4)
YLink(18,19,66)
YShift(19,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 329, char 0x29f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 6
SHP[1], 1
MIRP[m&gt;RBl], 14, 66
MIAP[R], 18, 10
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 66
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="330">
      <instructions>
        <talk>/* 02A0 */

/* Y direction */
YAnchor(6,11)
YLink(6,20,69)
YAnchor(14,7)
YLink(14,29,69)
YAnchor(37,14)
YShift(37,19)
YLink(37,38,66)
YAnchor(51)
YDist(51,58)
YShift(51,61)
YDist(51,62)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 330, char 0x2a0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 11
MIRP[m&gt;RBl], 20, 69
MIAP[R], 14, 7
MIRP[m&gt;RBl], 29, 69
MIAP[R], 37, 14
SHP[1], 19
MIRP[m&gt;RBl], 38, 66
MDAP[R], 51
MDRP[m&gt;RBl], 58
SHP[1], 61
MDRP[m&gt;RBl], 62
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="331">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 320, 0, 0
OVERLAP[]
OFFSET[R], 807, 443, 19
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="332">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 321, 0, 0
OVERLAP[]
OFFSET[R], 807, 454, 19
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="333">
      <instructions>
        <talk>/* 02A3 */

/* Y direction */
YAnchor(6,11)
YDist(6,57)
YAnchor(15,7)
YLink(15,64,69)
YAnchor(24,1)
YAnchor(34,6)
YShift(34,74)
YDist(34,76)
YAnchor(53,10)
YShift(53,0)
YShift(53,37)
YDist(53,38)
YShift(53,49)
YShift(53,73)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 333, char 0x2a3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 11
MDRP[m&gt;RBl], 57
MIAP[R], 15, 7
MIRP[m&gt;RBl], 64, 69
MIAP[R], 24, 1
MIAP[R], 34, 6
SHP[1], 74
MDRP[m&gt;RBl], 76
MIAP[R], 53, 10
SHP[1], 0
SHP[1], 37
MDRP[m&gt;RBl], 38
SHP[1], 49
SHP[1], 73
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="334">
      <instructions>
        <talk>/* 02A4 */

/* Y direction */
YAnchor(5,11)
YShift(5,0)
YDist(5,40)
YAnchor(14,7)
YLink(14,47,69)
YAnchor(23,1)
YAnchor(59,6)
YShift(59,56)
YDist(59,58)
YAnchor(63,14)
YDist(63,79)
YInterpolate(63,95,59)
YShift(95,55)
YDist(95,88)
YShift(95,92)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 334, char 0x2a4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 0
MDRP[m&gt;RBl], 40
MIAP[R], 14, 7
MIRP[m&gt;RBl], 47, 69
MIAP[R], 23, 1
MIAP[R], 59, 6
SHP[1], 56
MDRP[m&gt;RBl], 58
MIAP[R], 63, 14
MDRP[m&gt;RBl], 79
SRP2[], 59
IP[], 95
SRP1[], 95
SHP[1], 55
SRP0[], 95
MDRP[m&gt;RBl], 88
SHP[1], 92
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="335">
      <instructions>
        <talk>/* 02A5 */

/* Y direction */
YAnchor(14,10)
YShift(14,0)
YDist(14,56)
YShift(14,88)
YAnchor(24,11)
YShift(24,18)
YDist(24,72)
YAnchor(33,7)
YLink(33,79,69)
YAnchor(42,1)
YAnchor(52,6)
YShift(52,89)
YDist(52,91)
YInterpolate(14,6,52)
YDist(6,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 335, char 0x2a5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 14, 10
SHP[1], 0
MDRP[m&gt;RBl], 56
SHP[1], 88
MIAP[R], 24, 11
SHP[1], 18
MDRP[m&gt;RBl], 72
MIAP[R], 33, 7
MIRP[m&gt;RBl], 79, 69
MIAP[R], 42, 1
MIAP[R], 52, 6
SHP[1], 89
MDRP[m&gt;RBl], 91
SRP2[], 14
IP[], 6
SRP0[], 6
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="336">
      <instructions>
        <talk>/* 02A6 */

/* Y direction */
YAnchor(12)
YAnchor(37,7)
YLink(37,53,69)
YShift(37,14)
YAnchor(14)
YDist(14,17)
YShift(17,6)
YAnchor(67,11)
YLink(67,23,69)
YInterpolate(67,29,61,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 336, char 0x2a6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 12
MIAP[R], 37, 7
MIRP[m&gt;RBl], 53, 69
SHP[1], 14
MDAP[R], 14
MDRP[m&gt;RBl], 17
SHP[2], 6
MIAP[R], 67, 11
MIRP[m&gt;RBl], 23, 69
SRP2[], 37
IP[], 29
IP[], 61
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="337">
      <instructions>
        <talk>/* 02A7 */

/* Y direction */
YAnchor(0,11)
YDist(0,27)
YAnchor(14)
YAnchor(16,6)
YDist(16,19)
YShift(19,8)
YAnchor(35)
YDist(35,42)
YDist(35,48)
YAnchor(63)
YDist(63,70)
YDist(63,76)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 337, char 0x2a7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 27
MDAP[R], 14
MIAP[R], 16, 6
MDRP[m&gt;RBl], 19
SHP[2], 8
MDAP[R], 35
MDRP[m&gt;RBl], 42
MDRP[m&gt;RBl], 48
MDAP[R], 63
MDRP[m&gt;RBl], 70
MDRP[m&gt;RBl], 76
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="338">
      <instructions>
        <talk>/* 02A8 */

/* Y direction */
YAnchor(0,11)
YDist(0,21)
YShift(0,35)
YDist(35,68)
YAnchor(11)
YAnchor(13,6)
YDist(13,16)
YShift(16,5)
YAnchor(43,7)
YLink(43,59,69)
YIPAnchor(35,28,43)
YDist(28,74)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 338, char 0x2a8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 21
SHP[1], 35
SRP0[], 35
MDRP[m&gt;RBl], 68
MDAP[R], 11
MIAP[R], 13, 6
MDRP[m&gt;RBl], 16
SHP[2], 5
MIAP[R], 43, 7
MIRP[m&gt;RBl], 59, 69
SRP2[], 35
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 74
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="339">
      <instructions>
        <talk>/* 02A9 */

/* Y direction */
YAnchor(10,1)
YLink(10,26,69)
YAnchor(43,7)
YShift(43,32)
YAnchor(32)
YShift(43,40)
YAnchor(40)
YDist(40,39)
YShift(39,1)
YShift(39,33)
YShift(43,83)
YDist(83,74)
YAnchor(49,14)
YDist(49,56)
YShift(49,59)
YDist(49,60)
YAnchor(109,10)
YShift(109,35)
YShift(109,48)
YShift(109,104)
YLink(109,108,66)
YShift(108,103)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 339, char 0x2a9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MIRP[m&gt;RBl], 26, 69
MIAP[R], 43, 7
SHP[1], 32
MDAP[R], 32
SRP1[], 43
SHP[1], 40
MDAP[R], 40
MDRP[m&gt;RBl], 39
SHP[2], 1
SHP[2], 33
SRP1[], 43
SHP[1], 83
SRP0[], 83
MDRP[m&gt;RBl], 74
MIAP[R], 49, 14
MDRP[m&gt;RBl], 56
SHP[1], 59
MDRP[m&gt;RBl], 60
MIAP[R], 109, 10
SHP[1], 35
SHP[1], 48
SHP[1], 104
MIRP[m&gt;RBl], 108, 66
SHP[2], 103
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="340">
      <instructions>
        <talk>/* 02AA */

/* Y direction */
YAnchor(5,1)
YAnchor(11,10)
YShift(11,0)
YLink(11,12,66)
YAnchor(33,7)
YLink(33,49,69)
YInterpolate(33,57,24,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 340, char 0x2aa */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 1
MIAP[R], 11, 10
SHP[1], 0
MIRP[m&gt;RBl], 12, 66
MIAP[R], 33, 7
MIRP[m&gt;RBl], 49, 69
SRP2[], 11
IP[], 57
IP[], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="341">
      <instructions>
        <talk>/* 02AB */

/* Y direction */
YAnchor(9,1)
YAnchor(20,6)
YShift(20,39)
YDist(20,41)
YAnchor(34,10)
YShift(34,0)
YShift(34,4)
YShift(34,23)
YShift(34,38)
YLink(34,35,66)
YShift(35,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 341, char 0x2ab */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 1
MIAP[R], 20, 6
SHP[1], 39
MDRP[m&gt;RBl], 41
MIAP[R], 34, 10
SHP[1], 0
SHP[1], 4
SHP[1], 23
SHP[1], 38
MIRP[m&gt;RBl], 35, 66
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="342">
      <instructions>
        <talk>/* 02AC */

/* Y direction */
YAnchor(7)
YShift(7,8)
YDist(7,3)
YShift(3,12)
YAnchor(31)
YShift(31,39)
YDist(31,23,&gt;=)
YShift(23,2)
YShift(23,5)
YShift(23,10)
YShift(23,13)
YShift(23,19)
YShift(23,28)
YDist(23,22)
YShift(22,20)
YShift(22,27)
YDist(31,34)
YShift(34,43)
YAnchor(54)
YShift(54,33)
YShift(54,36)
YShift(54,41)
YShift(54,44)
YShift(54,50)
YShift(54,55)
YShift(54,59)
YDist(54,53)
YShift(53,51)
YShift(53,58)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 342, char 0x2ac */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 8
MDRP[m&gt;RBl], 3
SHP[2], 12
MDAP[R], 31
SHP[1], 39
MDRP[M&gt;RWh], 23
SHP[2], 2
SHP[2], 5
SHP[2], 10
SHP[2], 13
SHP[2], 19
SHP[2], 28
MDRP[m&gt;RBl], 22
SHP[2], 20
SHP[2], 27
SRP0[], 31
MDRP[m&gt;RBl], 34
SHP[2], 43
MDAP[R], 54
SHP[1], 33
SHP[1], 36
SHP[1], 41
SHP[1], 44
SHP[1], 50
SHP[1], 55
SHP[1], 59
MDRP[m&gt;RBl], 53
SHP[2], 51
SHP[2], 58
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="343">
      <instructions>
        <talk>/* 02AD */

/* Y direction */
YAnchor(1,6)
YDist(1,6)
YAnchor(7)
YShift(7,4)
YAnchor(8,10)
YShift(8,12)
YIPAnchor(1,14,8)
YDist(14,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 343, char 0x2ad */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 1, 6
MDRP[m&gt;RBl], 6
MDAP[R], 7
SHP[1], 4
MIAP[R], 8, 10
SHP[1], 12
SRP2[], 1
IP[], 14
MDAP[R], 14
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="344">
      <instructions>
        <talk>/* 02AE */

/* Y direction */
YAnchor(2,6)
YLink(2,1,66)
YShift(2,10)
YAnchor(5,14)
YAnchor(16,11)
YDist(16,51)
YAnchor(40,7)
YDist(40,29)
YShift(40,30)
YDist(40,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 344, char 0x2ae */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 2, 6
MIRP[m&gt;RBl], 1, 66
SHP[1], 10
MIAP[R], 5, 14
MIAP[R], 16, 11
MDRP[m&gt;RBl], 51
MIAP[R], 40, 7
MDRP[m&gt;RBl], 29
SHP[1], 30
MDRP[m&gt;RBl], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="345">
      <instructions>
        <talk>/* 02AF */

/* Y direction */
YAnchor(0,11)
YDist(0,35)
YAnchor(24,7)
YDist(24,13)
YShift(24,14)
YDist(24,17)
YAnchor(43,14)
YDist(43,56)
YShift(43,57)
YDist(43,60)
YAnchor(69,6)
YShift(69,49)
YLink(69,68,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 345, char 0x2af */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 35
MIAP[R], 24, 7
MDRP[m&gt;RBl], 13
SHP[1], 14
MDRP[m&gt;RBl], 17
MIAP[R], 43, 14
MDRP[m&gt;RBl], 56
SHP[1], 57
MDRP[m&gt;RBl], 60
MIAP[R], 69, 6
SHP[1], 49
MIRP[m&gt;RBl], 68, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="346">
      <instructions>
        <talk>/* 1d79 insular g */

/* Y direction */
YAnchor(0,14)
YLink(0,35,69)
YAnchor(57,6)
YShift(57,19)
YDist(57,51)
YShift(57,54)
YShift(57,61)
YInterpolate(0,43,57)
YShift(43,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 346, char 0x1d79 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 35, 69
MIAP[R], 57, 6
SHP[1], 19
MDRP[m&gt;RBl], 51
SHP[1], 54
SHP[1], 61
SRP2[], 0
IP[], 43
SRP1[], 43
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="347">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OVERLAP[]
OFFSET[R], 773, 942, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="348">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 237, 0, 0
OVERLAP[]
OFFSET[R], 808, 275, 178

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="349">
      <instructions>
        <talk>/* 2C71 */

/* Y direction */
YAnchor(0,11)
YAnchor(29,6)
YShift(29,2)
YLink(29,30,66)
YShift(29,9)
YAnchor(9)
YDist(9,15)
YShift(9,18)
YDist(9,19)

/* X direction */

Smooth()
XDelta(20,1/4@12..26)
XDelta(21,1/4@12..26)
XDelta(22,1/4@12..26)
XDelta(23,1/4@12..26)
XDelta(24,1/4@12..26)
XDelta(25,1/4@12..26)

</talk>
        <assembly>/* TT glyph 349, char 0x2c71 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 29, 6
SHP[1], 2
MIRP[m&gt;RBl], 30, 66
SHP[1], 9
MDAP[R], 9
MDRP[m&gt;RBl], 15
SHP[1], 18
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 20, 16, 12, 26, 72
CALL[], 21, 16, 12, 26, 72
CALL[], 22, 16, 12, 26, 72
CALL[], 23, 16, 12, 26, 72
CALL[], 24, 16, 12, 26, 72
CALL[], 25, 16, 12, 26, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="350">
      <instructions>
        <talk>/* A733 aa */

/* Y direction */
YAnchor(19,7)
YShift(19,71)
YDist(19,5)
YShift(5,63)
YAnchor(89,11)
YShift(89,26)
YInterpolate(89,34,19)
YShift(34,97)
YDist(34,35)
YShift(35,98)
YShift(89,51)
YLink(51,82,69)
YDist(89,106)
YShift(106,43)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 350, char 0xa733 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 19, 7
SHP[1], 71
MDRP[m&gt;RBl], 5
SHP[2], 63
MIAP[R], 89, 11
SHP[1], 26
SRP2[], 19
IP[], 34
SRP1[], 34
SHP[1], 97
SRP0[], 34
MDRP[m&gt;RBl], 35
SHP[2], 98
SRP1[], 89
SHP[1], 51
SRP0[], 51
MIRP[m&gt;RBl], 82, 69
SRP0[], 89
MDRP[m&gt;RBl], 106
SHP[2], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="351">
      <instructions>
        <talk>/* A735 ao */

/* Y direction */
YAnchor(0,11)
YDist(0,18)
YShift(0,51)
YLink(51,68,69)
YAnchor(46,7)
YDist(46,32)
YInterpolate(0,8,46)
YDist(8,9)
YShift(46,60)
YLink(60,76,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 351, char 0xa735 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 18
SHP[1], 51
SRP0[], 51
MIRP[m&gt;RBl], 68, 69
MIAP[R], 46, 7
MDRP[m&gt;RBl], 32
SRP2[], 0
IP[], 8
SRP0[], 8
MDRP[m&gt;RBl], 9
SRP1[], 46
SHP[1], 60
SRP0[], 60
MIRP[m&gt;RBl], 76, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="352">
      <instructions>
        <talk>/* A737 */

/* Y direction */
YAnchor(0,11)
YLink(0,30,69)
YShift(0,63)
YShift(0,39)
YDist(39,54)
YAnchor(68,6)
YLink(68,67,66)
YInterpolate(0,46,14,68)
YShift(46,47)
YShift(68,22)
YDist(22,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 352, char 0xa737 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 30, 69
SHP[1], 63
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 54
MIAP[R], 68, 6
MIRP[m&gt;RBl], 67, 66
SRP2[], 0
IP[], 46
IP[], 14
SRP1[], 46
SHP[1], 47
SRP1[], 68
SHP[1], 22
SRP0[], 22
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="353">
      <instructions>
        <talk>/* A739 */

/* Y direction */
YAnchor(26,11)
YShift(26,0)
YDist(26,44)
YShift(26,52)
YAnchor(58,6)
YShift(58,53)
YLink(58,57,66)
YShift(58,19)
YDist(19,5)
YInterpolate(26,34,11,19)
YShift(34,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 353, char 0xa739 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 26, 11
SHP[1], 0
MDRP[m&gt;RBl], 44
SHP[1], 52
MIAP[R], 58, 6
SHP[1], 53
MIRP[m&gt;RBl], 57, 66
SHP[1], 19
SRP0[], 19
MDRP[m&gt;RBl], 5
SRP2[], 26
IP[], 34
IP[], 11
SRP1[], 34
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="354">
      <instructions>
        <talk>/* A73B av with bar */

/* Y direction */
YAnchor(0,11)
YDist(0,19)
YShift(0,27)
YShift(0,53)
YAnchor(59,6)
YShift(59,54)
YLink(59,58,69)
YInterpolate(0,8,38,59)
YLink(8,11,66)
YShift(59,46)
YNoRound(32)
YDist(46,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 354, char 0xa73b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 19
SHP[1], 27
SHP[1], 53
MIAP[R], 59, 6
SHP[1], 54
MIRP[m&gt;RBl], 58, 69
SRP2[], 0
IP[], 8
IP[], 38
SRP0[], 8
MIRP[m&gt;RBl], 11, 66
SRP1[], 59
SHP[1], 46
SRP0[], 46
MDRP[m&lt;rBl], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="355">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OVERLAP[]
OFFSET[R], 807, 256, 608

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="356">
      <instructions>
        <talk>/* A74B obit */

/* Y direction */
YAnchor(0,11)
YLink(0,17,69)
YAnchor(9,7)
YLink(9,25,69)
YInterpolate(0,33,9)
YLink(33,34,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 356, char 0xa74b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 17, 69
MIAP[R], 9, 7
MIRP[m&gt;RBl], 25, 69
SRP2[], 0
IP[], 33
SRP0[], 33
MIRP[m&gt;RBl], 34, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="357">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 224, 0, 0
OVERLAP[]
OFFSET[R], 807, 261, -724
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="358">
      <instructions>
        <talk>/* A753 pro */

/* Y direction */
YAnchor(33,11)
YShift(33,54)
YLink(33,69,69)
YAnchor(42,6)
YShift(42,1)
YLink(42,60,66)
YShift(60,27)
YAnchor(44,14)
YShift(44,0)
YLink(44,45,66)
YInterpolate(44,18,42)
YLink(18,10,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 358, char 0xa753 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 33, 11
SHP[1], 54
MIRP[m&gt;RBl], 69, 69
MIAP[R], 42, 6
SHP[1], 1
MIRP[m&gt;RBl], 60, 66
SHP[2], 27
MIAP[R], 44, 14
SHP[1], 0
MIRP[m&gt;RBl], 45, 66
SRP2[], 42
IP[], 18
SRP0[], 18
MIRP[m&gt;RBl], 10, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="359">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 226, 0, 0
OVERLAP[]
OFFSET[R], 807, 835, -712
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="360">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 226, 0, 0
OVERLAP[]
OFFSET[R], 808, 851, -568
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="361">
      <instructions>
        <talk>/* A75D rum */

/* Y direction */
YAnchor(17,7)
YLink(17,9,69)
YAnchor(28,10)
YShift(28,29)
YDist(28,27)
YShift(27,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 361, char 0xa75d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 17, 7
MIRP[m&gt;RBl], 9, 69
MIAP[R], 28, 10
SHP[1], 29
MDRP[m&gt;RBl], 27
SHP[2], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="362">
      <instructions>
        <talk>/* A76F */

/* Y direction */
YAnchor(0)
YAnchor(37,7)
YLink(37,9,69)
YIPAnchor(0,28,37)
YDist(28,18)
YDist(28,22)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 362, char 0xa76f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 37, 7
MIRP[m&gt;RBl], 9, 69
SRP2[], 0
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 18
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="363">
      <instructions>
        <talk>/* A77A insular d */

/* Y direction */
YAnchor(0,11)
YLink(0,17,69)
YAnchor(41,7)
YShift(41,33)
YDist(41,25)
YInterpolate(25,9,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 363, char 0xa77a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 17, 69
MIAP[R], 41, 7
SHP[1], 33
MDRP[m&lt;RGr], 25
IP[], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="364">
      <instructions>
        <talk>/* A77C insular f */

/* Y direction */
YAnchor(0,14)
YAnchor(23,7)
YShift(23,8)
YDist(23,38)
YAnchor(45,10)
YLink(45,44,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 364, char 0xa77c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 23, 7
SHP[1], 8
MDRP[m&gt;RBl], 38
MIAP[R], 45, 10
MIRP[m&gt;RBl], 44, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="365">
      <instructions>
        <talk>/* A783 insular r */

/* Y direction */
YAnchor(19,7)
YDist(19,10)
YDelta(10,-1/4@12..19)
YDelta(10,-1/2@20..30)
YShift(19,37)
YAnchor(29,14)
YInterpolate(29,0,19)
YShift(0,44)
YShift(0,45)
YShift(0,46)
YShift(0,47)
YShift(0,48)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 365, char 0xa783 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 19, 7
MDRP[m&gt;RBl], 10
CALL[], 10, -16, 12, 19, 72
CALL[], 10, -32, 20, 30, 72
SHP[1], 37
MIAP[R], 29, 14
SRP2[], 19
IP[], 0
SRP1[], 0
SHP[1], 44
SHP[1], 45
SHP[1], 46
SHP[1], 47
SHP[1], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="366">
      <instructions>
        <talk>/* A785 insular s */

/* Y direction */
YAnchor(8,7)
YDist(8,22)
YShift(8,34)
YAnchor(26,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 366, char 0xa785 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 7
MDRP[m&gt;RBl], 22
SHP[1], 34
MIAP[R], 26, 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="367">
      <instructions>
        <talk>/* A787 insular t */

/* Y direction */
YAnchor(0,11)
YNoRound(15)
YDist(0,15)
YAnchor(29,6)
YShift(29,26)
YDist(29,23)
YInterpolate(23,7,29)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 367, char 0xa787 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&lt;rBl], 15
MIAP[R], 29, 6
SHP[1], 26
MDRP[m&gt;RBl], 23
IP[], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="368">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 800, 1329, -16
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="369">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 781, 983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="370">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OVERLAP[]
OFFSET[R], 782, 983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="371">
      <instructions>
        <talk>/* v */

/* Y direction */
YAnchor(0,11)
YShift(0,4)
YAnchor(10,6)
YShift(10,2)
YShift(10,6)
YShift(10,15)
YLink(10,9,66)
YShift(9,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 371, char 0x76 (v) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 4
MIAP[R], 10, 6
SHP[1], 2
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="372">
      <instructions>
        <talk>/* w */

/* Y direction */
YAnchor(0,11)
YShift(0,4)
YShift(0,8)
YShift(0,12)
YAnchor(18,6)
YShift(18,2)
YShift(18,9)
YShift(18,14)
YShift(18,23)
YShift(18,28)
YLink(18,17,66)
YShift(17,25)
YShift(17,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 372, char 0x77 (w) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 4
SHP[2], 8
SHP[2], 12
MIAP[R], 18, 6
SHP[1], 2
SHP[1], 9
SHP[1], 14
SHP[1], 23
SHP[1], 28
MIRP[m&gt;RBl], 17, 66
SHP[2], 25
SHP[2], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="373">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OVERLAP[]
OFFSET[R], 775, 1179, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="374">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OVERLAP[]
OFFSET[R], 778, 1178, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="375">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OVERLAP[]
OFFSET[R], 772, 1178, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="376">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OVERLAP[]
OFFSET[R], 774, 1178, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="377">
      <instructions>
        <talk>/* A761 wy */

/* Y direction */
YAnchor(7,11)
YShift(7,4)
YShift(7,8)
YShift(7,11)
YAnchor(20,6)
YShift(20,2)
YShift(20,10)
YShift(20,16)
YShift(20,25)
YShift(20,38)
YLink(20,19,88)
YShift(19,17)
YShift(19,24)
YAnchor(28,14)
YDist(28,34)

/* X direction */

Smooth()
XDelta(39,3/16@12..19,1/4@20..31)
XDelta(40,3/16@12..19,1/4@20..31)
</talk>
        <assembly>/* TT glyph 377, char 0xa761 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 11
SHP[1], 4
SHP[1], 8
SHP[1], 11
MIAP[R], 20, 6
SHP[1], 2
SHP[1], 10
SHP[1], 16
SHP[1], 25
SHP[1], 38
MIRP[m&gt;RBl], 19, 88
SHP[2], 17
SHP[2], 24
MIAP[R], 28, 14
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 39, 12, 12, 19, 72
CALL[], 39, 16, 20, 31, 72
CALL[], 40, 12, 12, 19, 72
CALL[], 40, 16, 20, 31, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="378">
      <instructions>
        <talk>/* 01BF wynn */

/* Y direction */
YAnchor(15,7)
YLink(15,8,69)
YShift(15,31)
YAnchor(23,14)
YInterpolate(23,0,15)
YLink(0,1,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 378, char 0x1bf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 7
MIRP[m&gt;RBl], 8, 69
SHP[1], 31
MIAP[R], 23, 14
SRP2[], 15
IP[], 0
SRP0[], 0
MIRP[m&gt;RBl], 1, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="379">
      <instructions>
        <talk>/* x */

/* Y direction */
YAnchor(8,10)
YShift(8,0)
YShift(8,4)
YShift(8,13)
YLink(8,9,66)
YShift(9,14)
YAnchor(20,6)
YShift(20,1)
YShift(20,5)
YShift(20,25)
YLink(20,19,66)
YShift(19,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 379, char 0x78 (x) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 0
SHP[1], 4
SHP[1], 13
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
MIAP[R], 20, 6
SHP[1], 1
SHP[1], 5
SHP[1], 25
MIRP[m&gt;RBl], 19, 66
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="380">
      <instructions>
        <talk>/* y */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YAnchor(21,6)
YShift(21,11)
YShift(21,17)
YShift(21,26)
YInterpolate(0,15,21)
YLink(21,20,66)
YShift(20,25)

/* X direction */

Smooth()

XDelta(11,1/2@12..18,1/4@19..25)
XDelta(12,1/2@12..18,1/4@19..25)
XDelta(13,1/2@12..18,1/4@19..25)
XDelta(14,1/2@12..18,1/4@19..25)
</talk>
        <assembly>/* TT glyph 380, char 0x79 (y) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MIAP[R], 21, 6
SHP[1], 11
SHP[1], 17
SHP[1], 26
SRP2[], 0
IP[], 15
MIRP[m&gt;RBl], 20, 66
SHP[2], 25
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 11, 32, 12, 18, 72
CALL[], 11, 16, 19, 25, 72
CALL[], 12, 32, 12, 18, 72
CALL[], 12, 16, 19, 25, 72
CALL[], 13, 32, 12, 18, 72
CALL[], 13, 16, 19, 25, 72
CALL[], 14, 32, 12, 18, 72
CALL[], 14, 16, 19, 25, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="381">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OVERLAP[]
OFFSET[R], 775, 943, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="382">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OVERLAP[]
OFFSET[R], 778, 942, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="383">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OVERLAP[]
OFFSET[R], 772, 942, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="384">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OVERLAP[]
OFFSET[R], 774, 942, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="385">
      <instructions>
        <talk>/* z */

/* Y direction */
YAnchor(4,10)
YShift(4,23)
YDist(4,24)
YShift(4,34)
YAnchor(20,6)
YShift(20,6)
YDist(20,8)
YShift(20,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 385, char 0x7a (z) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 10
SHP[1], 23
MDRP[m&gt;RBl], 24
SHP[1], 34
MIAP[R], 20, 6
SHP[1], 6
MDRP[m&gt;RBl], 8
SHP[1], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="386">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OVERLAP[]
OFFSET[R], 775, 867, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="387">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OVERLAP[]
OFFSET[R], 779, 866, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="388">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OVERLAP[]
OFFSET[R], 773, 866, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="389">
      <instructions>
        <talk>/* A77A medieval d */

/* Y direction */
YAnchor(0,11)
YLink(0,26,69)
YAnchor(8,7)
YLink(8,35,69)
YAnchor(13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 389, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 26, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 35, 69
MDAP[R], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="390">
      <instructions>
        <talk>/* f.alt */

/* Y direction */
YAnchor(11,1)
YLink(11,26,69)
YAnchor(41,10)
YShift(41,36)
YLink(41,40,66)
YIPAnchor(41,34,11)
YShift(34,1)
YDist(34,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 390, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 1
MIRP[m&gt;RBl], 26, 69
MIAP[R], 41, 10
SHP[1], 36
MIRP[m&gt;RBl], 40, 66
SRP2[], 11
IP[], 34
MDAP[R], 34
SHP[1], 1
MDRP[m&gt;RBl], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="391">
      <instructions>
        <talk>/* eth.loclENG.alt */

/* Y direction */
YAnchor(0,11)
YLink(0,25,69)
YAnchor(8,7)
YLink(8,35,69)
YAnchor(13)
YInterpolate(8,45,13)
YShift(45,49)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 391, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 25, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 35, 69
MDAP[R], 13
SRP2[], 8
IP[], 45
SRP1[], 45
SHP[1], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="392">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 231, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="393">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 237, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="394">
      <instructions>
        <talk>/* eth.loclENG */

/* Y direction */
YUpToGrid(0)
YAnchor(0,11)
YLink(0,26,69)
YAnchor(8,7)
YLink(8,35,69)
YAnchor(13)
YInterpolate(8,43,13)
YShift(43,47)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 394, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
RDTG[]
MIAP[R], 0, 11
RTG[]
MIRP[m&gt;RBl], 26, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 35, 69
MDAP[R], 13
SRP2[], 8
IP[], 43
SRP1[], 43
SHP[1], 47
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="395">
      <instructions>
        <talk>/* thorn.loclENG */

/* Y direction */
YAnchor(0,14)
YAnchor(8,0)
YAnchor(15,11)
YLink(15,16,69)
YAnchor(30,7)
YLink(30,23,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 395, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 8, 0
MIAP[R], 15, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 30, 7
MIRP[m&gt;RBl], 23, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="396">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 395, 0, 0
OVERLAP[]
OFFSET[R], 832, 248, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="397">
      <instructions>
        <talk>/* uni027602DE */

/* Y direction */
YAnchor(16,6)
YLink(16,15,66)
YShift(16,43)
YShift(16,42)
YLink(42,52,69)
YAnchor(61,10)
YShift(61,44)
YLink(61,62,66)
YIPAnchor(16,70,0,61)
YShift(70,74)
YDist(70,71)
YShift(71,75)
YDist(0,27)
YShift(61,34)
YLink(34,45,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 397, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 6
MIRP[m&gt;RBl], 15, 66
SHP[1], 43
SHP[1], 42
SRP0[], 42
MIRP[m&gt;RBl], 52, 69
MIAP[R], 61, 10
SHP[1], 44
MIRP[m&gt;RBl], 62, 66
SRP2[], 16
IP[], 70
IP[], 0
MDAP[R], 70
MDAP[R], 0
SRP1[], 70
SHP[1], 74
SRP0[], 70
MDRP[m&gt;RBl], 71
SHP[2], 75
SRP0[], 0
MDRP[m&gt;RBl], 27
SRP1[], 61
SHP[1], 34
SRP0[], 34
MIRP[m&gt;RBl], 45, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="398">
      <instructions>
        <talk>/* uni028F02DE */

/* Y direction */
YAnchor(43,10)
YShift(43,38)
YLink(43,42,66)
YAnchor(51,6)
YShift(51,4)
YShift(51,7)
YShift(51,47)
YIPAnchor(43,25,51)
YDist(25,18)
YLink(51,50,66)
YShift(50,48)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 398, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 43, 10
SHP[1], 38
MIRP[m&gt;RBl], 42, 66
MIAP[R], 51, 6
SHP[1], 4
SHP[1], 7
SHP[1], 47
SRP2[], 43
IP[], 25
MDAP[R], 25
MDRP[m&gt;RBl], 18
SRP0[], 51
MIRP[m&gt;RBl], 50, 66
SHP[2], 48
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="399">
      <instructions>
        <talk>/* uni006102DE */

/* Y direction */
YAnchor(0,11)
YLink(0,37,69)
YShift(0,46)
YDist(46,82)
YAnchor(71,7)
YLink(71,57,69)
YInterpolate(0,21,30,63,71)
YDist(21,14)
YShift(30,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 399, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 37, 69
SHP[1], 46
SRP0[], 46
MDRP[m&gt;RBl], 82
MIAP[R], 71, 7
MIRP[m&gt;RBl], 57, 69
SRP2[], 0
SLOOP[], 3
IP[], 21, 30, 63
SRP0[], 21
MDRP[m&gt;RBl], 14
SRP1[], 30
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="400">
      <instructions>
        <talk>/* uni00E602DE */

/* Y direction */
YAnchor(0,11)
YLink(0,37,69)
YShift(0,44)
YLink(44,90,69)
YAnchor(68,7)
YLink(68,54,69)
YInterpolate(0,21,30,60,7,68)
YDist(21,14)
YShift(30,6)
YShift(7,29)
YShift(7,78)
YShift(68,75)
YLink(75,82,69)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 400, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 37, 69
SHP[1], 44
SRP0[], 44
MIRP[m&gt;RBl], 90, 69
MIAP[R], 68, 7
MIRP[m&gt;RBl], 54, 69
SRP2[], 0
SLOOP[], 4
IP[], 21, 30, 60, 7
SRP0[], 21
MDRP[m&gt;RBl], 14
SRP1[], 30
SHP[1], 6
SRP1[], 7
SHP[1], 29
SHP[1], 78
SRP1[], 68
SHP[1], 75
SRP0[], 75
MIRP[m&gt;RBl], 82, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="401">
      <instructions>
        <talk>/* c_t */

/* Y direction */
YAnchor(0,11)
YLink(0,32,69)
YDelta(32,1/4@12..19)
YDelta(32,1/2@20..30)
YDelta(32,3/4@31..52)
YShift(0,40)
YDist(40,87)
YAnchor(8,7)
YLink(8,24,69,&gt;=)
YShift(8,76)
YDist(76,79)
YShift(79,48)
YAnchor(71)
YDist(71,58)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 401, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 32, 69
CALL[], 32, 16, 12, 19, 72
CALL[], 32, 32, 20, 30, 72
CALL[], 32, 48, 31, 52, 72
SHP[1], 40
SRP0[], 40
MDRP[m&gt;RBl], 87
MIAP[R], 8, 7
MIRP[m&gt;RGr], 24, 69
SHP[1], 76
SRP0[], 76
MDRP[m&gt;RBl], 79
SHP[2], 48
MDAP[R], 71
MDRP[m&gt;RBl], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="402">
      <instructions>
        <talk>/* uni006502DE */

/* Y direction */
YAnchor(0,11)
YLink(0,24,69)
YDelta(24,3/8@12..24)
YDelta(24,1/2@25..40)
YAnchor(8,7)
YLink(8,16,69)
YInterpolate(0,31,40,12,42,8)
YDist(31,49)
YShift(40,41)
YShift(42,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 402, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 24, 69
CALL[], 24, 24, 12, 24, 72
CALL[], 24, 32, 25, 40, 72
MIAP[R], 8, 7
MIRP[m&gt;RBl], 16, 69
SRP2[], 0
SLOOP[], 4
IP[], 31, 40, 12, 42
SRP0[], 31
MDRP[m&gt;RBl], 49
SRP1[], 40
SHP[1], 41
SRP1[], 42
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="403">
      <instructions>
        <talk>/* uni025B02DE */

/* VTTTalk glyph 403, char 0xffff */
/* GUI generated Fri Apr 17 06:34:45 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,37,69)
YAnchor(12,7)
YLink(12,22,69)
YIPAnchor(0,43,12)
YInterpolate(43,30,6,16,12)
YDist(43,61)
YNoRound(29)
YLink(30,29,66)
YShift(16,52)
YShift(52,54)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 403, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 37, 69
MIAP[R], 12, 7
MIRP[m&gt;RBl], 22, 69
SRP2[], 0
IP[], 43
MDAP[R], 43
SRP2[], 12
SLOOP[], 3
IP[], 30, 6, 16
MDRP[m&gt;RBl], 61
SRP0[], 30
MIRP[m&lt;rBl], 29, 66
SRP1[], 16
SHP[1], 52
SRP1[], 52
SHP[1], 54
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="404">
      <instructions>
        <talk>/* uni025802DE */

/* Y direction */
YAnchor(0,11)
YLink(0,7,69)
YAnchor(54,7)
YLink(54,15,69)
YIPAnchor(0,37,49,54)
YDist(37,30)
YStem(49,19)
YLink(49,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 404, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 7, 69
MIAP[R], 54, 7
MIRP[m&gt;RBl], 15, 69
SRP2[], 0
IP[], 37
IP[], 49
MDAP[R], 37
MDAP[R], 49
SRP0[], 37
MDRP[m&gt;RBl], 30
SRP0[], 49
MDRP[m&lt;RWh], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="405">
      <instructions>
        <talk>/* f_j */

/* Y direction */
YAnchor(4,10)
YLink(4,3,66)
YShift(4,73)
YAnchor(5,14)
YAnchor(48,1)
YLink(48,64,69)
YIPAnchor(4,72,48)
YShift(72,22)
YShift(72,39)
YDist(72,69)
YShift(69,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 405, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 10
MIRP[m&gt;RBl], 3, 66
SHP[1], 73
MIAP[R], 5, 14
MIAP[R], 48, 1
MIRP[m&gt;RBl], 64, 69
SRP2[], 4
IP[], 72
MDAP[R], 72
SHP[1], 22
SHP[1], 39
MDRP[m&gt;RBl], 69
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="406">
      <instructions>
        <talk>/* f_odieresis */

/* Y direction */
YAnchor(0,11)
YLink(0,59,69)
YAnchor(21,1)
YLink(21,36,69)
YAnchor(46,7)
YLink(46,67,69)
YShift(46,42)
YAnchor(42)
YLink(42,8,66)
YShift(8,11)
YInterpolate(46,75,21)
YShift(75,87)
YDist(75,81)
YShift(81,93)
YAnchor(58,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 406, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 59, 69
MIAP[R], 21, 1
MIRP[m&gt;RBl], 36, 69
MIAP[R], 46, 7
MIRP[m&gt;RBl], 67, 69
SHP[1], 42
MDAP[R], 42
MIRP[m&gt;RBl], 8, 66
SHP[2], 11
SRP1[], 46
SRP2[], 21
IP[], 75
SRP1[], 75
SHP[1], 87
SRP0[], 75
MDRP[m&gt;RBl], 81
SHP[2], 93
MIAP[R], 58, 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="407">
      <instructions>
        <talk>/* f_thorn */

/* Y direction */
YAnchor(10,7)
YLink(10,30,69)
YAnchor(18,11)
YLink(18,23,69)
YAnchor(40,14)
YShift(40,22)
YAnchor(51,1)
YShift(51,2)
YLink(51,59,69)
YAnchor(74,6)
YShift(74,65)
YLink(74,73,66)
YIPAnchor(74,42,51)
YShift(42,66)
YLink(66,67,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 407, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 7
MIRP[m&gt;RBl], 30, 69
MIAP[R], 18, 11
MIRP[m&gt;RBl], 23, 69
MIAP[R], 40, 14
SHP[1], 22
MIAP[R], 51, 1
SHP[1], 2
MIRP[m&gt;RBl], 59, 69
MIAP[R], 74, 6
SHP[1], 65
MIRP[m&gt;RBl], 73, 66
SRP2[], 51
IP[], 42
MDAP[R], 42
SHP[1], 66
SRP0[], 66
MIRP[m&gt;RBl], 67, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="408">
      <instructions>
        <talk>/* f_udieresis */

/* Y direction */
YAnchor(24,11)
YLink(24,38,69)
YShift(24,47)
YAnchor(31,6)
YShift(31,106)
YLink(31,28,66)
YShift(28,75)
YShift(28,107)
YShift(31,51)
YLink(51,50,66)
YAnchor(73,10)
YLink(73,72,66)
YShift(73,109)
YAnchor(84,1)
YLink(84,100,69)
YIPAnchor(31,0,84)
YShift(0,12)
YDist(0,6)
YShift(6,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 408, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 24, 11
MIRP[m&gt;RBl], 38, 69
SHP[1], 47
MIAP[R], 31, 6
SHP[1], 106
MIRP[m&gt;RBl], 28, 66
SHP[2], 75
SHP[2], 107
SHP[1], 51
SRP0[], 51
MIRP[m&gt;RBl], 50, 66
MIAP[R], 73, 10
MIRP[m&gt;RBl], 72, 66
SHP[1], 109
MIAP[R], 84, 1
MIRP[m&gt;RBl], 100, 69
SRP2[], 31
IP[], 0
MDAP[R], 0
SHP[1], 12
MDRP[m&gt;RBl], 6
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="409">
      <instructions>
        <talk>/* uni026802DE */

/* Y direction */
YAnchor(40,7)
YDist(40,49)
YDist(49,55)
YAnchor(48,10)
YShift(48,35)
YShift(48,45)
YInterpolate(48,0,11,40)
YDist(0,25)
YDist(11,14)
YLink(48,47,66)
YShift(47,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 409, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 40, 7
MDRP[M&lt;RWh], 49
MDRP[m&gt;RBl], 55
MIAP[R], 48, 10
SHP[1], 35
SHP[1], 45
SRP2[], 40
IP[], 0
IP[], 11
SRP0[], 0
MDRP[m&gt;RBl], 25
SRP0[], 11
MDRP[m&lt;RWh], 14
SRP0[], 48
MIRP[m&gt;RBl], 47, 66
SHP[2], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="410">
      <instructions>
        <talk>/* uni027502DE */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,24,69)
YIPAnchor(8,44,32,0)
YLink(44,45,66)
YDist(32,57)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 410, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
SRP2[], 0
IP[], 44
IP[], 32
MDAP[R], 44
MDAP[R], 32
SRP0[], 44
MIRP[m&gt;RBl], 45, 66
SRP0[], 32
MDRP[m&gt;RBl], 57
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="411">
      <instructions>
        <talk>/* uni015302DE */

/* Y direction */
YAnchor(0,11)
YLink(0,46,69)
YShift(0,39)
YDist(39,32)
YDelta(32,1/4@12..19,1/2@20..28)
YAnchor(8,7)
YLink(8,54,69)
YShift(8,15)
YLink(15,24,69)
YIPAnchor(0,62,8)
YInterpolate(62,71,19,73,8)
YDist(62,80)
YShift(71,72)
YShift(73,70)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 411, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 46, 69
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 32
CALL[], 32, 16, 12, 19, 72
CALL[], 32, 32, 20, 28, 72
MIAP[R], 8, 7
MIRP[m&gt;RBl], 54, 69
SHP[1], 15
SRP0[], 15
MIRP[m&gt;RBl], 24, 69
SRP1[], 0
SRP2[], 8
IP[], 62
MDAP[R], 62
SLOOP[], 3
IP[], 71, 19, 73
MDRP[m&gt;RBl], 80
SRP1[], 71
SHP[1], 72
SRP1[], 73
SHP[1], 70
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="412">
      <instructions>
        <talk>/* uni026402DE */

/* Y direction */
YAnchor(0,11)
YLink(0,41,69)
YAnchor(60,7)
YLink(60,50,69)
YShift(60,9)
YShift(9,31)
YIPAnchor(0,23,60)
YDist(23,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 412, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 41, 69
MIAP[R], 60, 7
MIRP[m&gt;RBl], 50, 69
SHP[1], 9
SRP1[], 9
SHP[1], 31
SRP1[], 0
SRP2[], 60
IP[], 23
MDAP[R], 23
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="413">
      <instructions>
        <talk>/* longs_b */

/* Y direction */
YAnchor(31,7)
YLink(31,23,69)
YAnchor(39,11)
YLink(39,15,69)
YAnchor(58,1)
YShift(58,6)
YLink(58,66,69)
YAnchor(77,10)
YShift(77,72)
YLink(77,76,66)
YIPAnchor(77,50,58)
YDist(50,51)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 413, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 31, 7
MIRP[m&gt;RBl], 23, 69
MIAP[R], 39, 11
MIRP[m&gt;RBl], 15, 69
MIAP[R], 58, 1
SHP[1], 6
MIRP[m&gt;RBl], 66, 69
MIAP[R], 77, 10
SHP[1], 72
MIRP[m&gt;RBl], 76, 66
SRP2[], 58
IP[], 50
MDAP[R], 50
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="414">
      <instructions>
        <talk>/* longs_h */

/* Y direction */
YAnchor(23,7)
YDist(23,15)
YAnchor(31,10)
YShift(31,0)
YShift(31,8)
YShift(31,36)
YShift(31,65)
YShift(31,70)
YLink(31,32,66)
YShift(32,37)
YShift(32,69)
YAnchor(51,1)
YShift(51,2)
YLink(51,59,69)
YInterpolate(51,43,31)
YDist(43,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 414, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 7
MDRP[m&gt;RBl], 15
MIAP[R], 31, 10
SHP[1], 0
SHP[1], 8
SHP[1], 36
SHP[1], 65
SHP[1], 70
MIRP[m&gt;RBl], 32, 66
SHP[2], 37
SHP[2], 69
MIAP[R], 51, 1
SHP[1], 2
MIRP[m&gt;RBl], 59, 69
SRP2[], 31
IP[], 43
SRP0[], 43
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="415">
      <instructions>
        <talk>/* longs_i */

/* Y direction */
YAnchor(10,1)
YLink(10,26,69)
YAnchor(37,10)
YShift(37,32)
YShift(37,38)
YShift(37,41)
YShift(37,51)
YIPAnchor(10,2,37)
YDist(2,3)
YLink(37,36,66)
YShift(36,39)
YShift(36,53)
YAnchor(46,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 415, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MIRP[m&gt;RBl], 26, 69
MIAP[R], 37, 10
SHP[1], 32
SHP[1], 38
SHP[1], 41
SHP[1], 51
SRP2[], 10
IP[], 2
MDAP[R], 2
MDRP[m&gt;RBl], 3
SRP0[], 37
MIRP[m&gt;RBl], 36, 66
SHP[2], 39
SHP[2], 53
MIAP[R], 46, 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="416">
      <instructions>
        <talk>/* longs_k */

/* Y direction */
YAnchor(25,6)
YShift(25,22)
YShift(25,29)
YLink(25,24,66)
YShift(24,27)
YAnchor(36,10)
YShift(36,0)
YShift(36,8)
YShift(36,11)
YShift(36,32)
YShift(36,65)
YShift(36,70)
YInterpolate(25,16,36)
YLink(16,17,66)
YLink(36,37,66)
YShift(37,9)
YShift(37,34)
YShift(37,69)
YAnchor(51,1)
YShift(51,2)
YLink(51,59,69)
YIPAnchor(36,43,51)
YDist(43,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 416, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 6
SHP[1], 22
SHP[1], 29
MIRP[m&gt;RBl], 24, 66
SHP[2], 27
MIAP[R], 36, 10
SHP[1], 0
SHP[1], 8
SHP[1], 11
SHP[1], 32
SHP[1], 65
SHP[1], 70
SRP2[], 25
IP[], 16
SRP0[], 16
MIRP[m&gt;RBl], 17, 66
SRP0[], 36
MIRP[m&gt;RBl], 37, 66
SHP[2], 9
SHP[2], 34
SHP[2], 69
MIAP[R], 51, 1
SHP[1], 2
MIRP[m&gt;RBl], 59, 69
SRP2[], 36
IP[], 43
MDAP[R], 43
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="417">
      <instructions>
        <talk>/* longs_l */

/* Y direction */
YAnchor(23,1)
YShift(23,2)
YLink(23,31,69)
YAnchor(42,10)
YShift(42,0)
YShift(42,8)
YShift(42,37)
YInterpolate(42,15,23)
YDist(15,16)
YLink(42,41,66)
YShift(41,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 417, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 1
SHP[1], 2
MIRP[m&gt;RBl], 31, 69
MIAP[R], 42, 10
SHP[1], 0
SHP[1], 8
SHP[1], 37
SRP2[], 23
IP[], 15
SRP0[], 15
MDRP[m&gt;RBl], 16
SRP0[], 42
MIRP[m&gt;RBl], 41, 66
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="418">
      <instructions>
        <talk>/* longs_longs */

/* Y direction */
YAnchor(34,1)
YLink(34,50,69)
YShift(34,10)
YAnchor(10)
YLink(10,17,69)
YAnchor(60,10)
YShift(60,23)
YShift(60,24)
YShift(60,61)
YInterpolate(60,2,34)
YShift(2,26)
YDist(2,3)
YShift(3,27)
YLink(60,59,66)
YShift(59,62)

/* X direction */
</talk>
        <assembly>/* TT glyph 418, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 1
MIRP[m&gt;RBl], 50, 69
SHP[1], 10
MDAP[R], 10
MIRP[m&gt;RBl], 17, 69
MIAP[R], 60, 10
SHP[1], 23
SHP[1], 24
SHP[1], 61
SRP2[], 34
IP[], 2
SRP1[], 2
SHP[1], 26
SRP0[], 2
MDRP[m&gt;RBl], 3
SHP[2], 27
SRP0[], 60
MIRP[m&gt;RBl], 59, 66
SHP[2], 62

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="419">
      <instructions>
        <talk>/* longs_longs_i */

/* Y direction */
YAnchor(34,1)
YLink(34,50,69)
YShift(34,10)
YAnchor(10)
YLink(10,17,69)
YAnchor(60,10)
YShift(60,23)
YShift(60,24)
YShift(60,61)
YShift(60,66)
YShift(60,69)
YShift(60,79)
YInterpolate(60,2,34)
YShift(2,26)
YDist(2,3)
YShift(3,27)
YLink(60,59,66)
YShift(59,62)
YShift(59,67)
YShift(59,81)
YAnchor(74,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 419, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 1
MIRP[m&gt;RBl], 50, 69
SHP[1], 10
MDAP[R], 10
MIRP[m&gt;RBl], 17, 69
MIAP[R], 60, 10
SHP[1], 23
SHP[1], 24
SHP[1], 61
SHP[1], 66
SHP[1], 69
SHP[1], 79
SRP2[], 34
IP[], 2
SRP1[], 2
SHP[1], 26
SRP0[], 2
MDRP[m&gt;RBl], 3
SHP[2], 27
SRP0[], 60
MIRP[m&gt;RBl], 59, 66
SHP[2], 62
SHP[2], 67
SHP[2], 81
MIAP[R], 74, 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="420">
      <instructions>
        <talk>/* longs_longs_l */

/* Y direction */
YAnchor(33,10)
YShift(33,23)
YShift(33,28)
YShift(33,34)
YShift(33,42)
YShift(33,71)
YLink(33,32,66)
YShift(32,27)
YShift(32,43)
YAnchor(57,1)
YShift(57,36)
YLink(57,65,69)
YShift(57,10)
YAnchor(10)
YLink(10,17,69)
YInterpolate(57,49,33)
YShift(49,1)
YDist(49,50)
YShift(50,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 420, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 33, 10
SHP[1], 23
SHP[1], 28
SHP[1], 34
SHP[1], 42
SHP[1], 71
MIRP[m&gt;RBl], 32, 66
SHP[2], 27
SHP[2], 43
MIAP[R], 57, 1
SHP[1], 36
MIRP[m&gt;RBl], 65, 69
SHP[1], 10
MDAP[R], 10
MIRP[m&gt;RBl], 17, 69
SRP1[], 57
SRP2[], 33
IP[], 49
SRP1[], 49
SHP[1], 1
SRP0[], 49
MDRP[m&gt;RBl], 50
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="421">
      <instructions>
        <talk>/* uni028902DE */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,22)
YAnchor(27,6)
YShift(27,7)
YLink(27,26,88)
YShift(26,6)
YIPAnchor(0,44,55,27)
YDist(44,69)
YDist(55,58)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 421, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 22
MIAP[R], 27, 6
SHP[1], 7
MIRP[m&gt;RBl], 26, 88
SHP[2], 6
SRP2[], 0
IP[], 44
IP[], 55
MDAP[R], 44
MDAP[R], 55
SRP0[], 44
MDRP[m&gt;RBl], 69
SRP0[], 55
MDRP[m&lt;RWh], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="422">
      <instructions>
        <talk>/* uniFB00 ff */

/* Y direction */
YAnchor(29,1)
YLink(29,45,69)
YShift(29,10)
YAnchor(10)
YLink(10,17,69)
YAnchor(60,10)
YShift(60,23)
YShift(60,24)
YShift(60,59)
YIPAnchor(60,51,29)
YShift(51,1)
YDist(51,52)
YLink(60,61,66)
YShift(61,58)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 422, char 0xfb00 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 29, 1
MIRP[m&gt;RBl], 45, 69
SHP[1], 10
MDAP[R], 10
MIRP[m&gt;RBl], 17, 69
MIAP[R], 60, 10
SHP[1], 23
SHP[1], 24
SHP[1], 59
SRP2[], 29
IP[], 51
MDAP[R], 51
SHP[1], 1
MDRP[m&gt;RBl], 52
SRP0[], 60
MIRP[m&gt;RBl], 61, 66
SHP[2], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="423">
      <instructions>
        <talk>/* uniFB01 fi */

/* Y direction */
YAnchor(12,7)
YShift(12,9)
YAnchor(9)
YShift(9,55)
YDist(9,8)
YShift(8,24)
YShift(8,56)
YAnchor(22,10)
YShift(22,0)
YShift(22,5)
YShift(22,58)
YLink(22,21,66)
YShift(21,1)
YAnchor(33,1)
YLink(33,49,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 423, char 0xfb01 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 7
SHP[1], 9
MDAP[R], 9
SHP[1], 55
MDRP[m&gt;RBl], 8
SHP[2], 24
SHP[2], 56
MIAP[R], 22, 10
SHP[1], 0
SHP[1], 5
SHP[1], 58
MIRP[m&gt;RBl], 21, 66
SHP[2], 1
MIAP[R], 33, 1
MIRP[m&gt;RBl], 49, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="424">
      <instructions>
        <talk>/* uniFB02 */

/* Y direction */
YAnchor(23,1)
YShift(23,7)
YLink(23,31,69)
YAnchor(46,10)
YShift(46,0)
YShift(46,5)
YShift(46,37)
YIPAnchor(46,38,23)
YShift(38,14)
YDist(38,39)
YLink(46,45,66)
YShift(45,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 424, char 0xfb02 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 1
SHP[1], 7
MIRP[m&gt;RBl], 31, 69
MIAP[R], 46, 10
SHP[1], 0
SHP[1], 5
SHP[1], 37
SRP2[], 23
IP[], 38
MDAP[R], 38
SHP[1], 14
MDRP[m&gt;RBl], 39
SRP0[], 46
MIRP[m&gt;RBl], 45, 66
SHP[2], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="425">
      <instructions>
        <talk>/* uniFB03 ffi */

/* Y direction */
YAnchor(9,7)
YShift(9,4)
YAnchor(4)
YShift(4,73)
YDist(4,3)
YShift(3,21)
YShift(3,74)
YAnchor(49,1)
YLink(49,65,69)
YShift(49,30)
YAnchor(30)
YLink(30,37,69)
YAnchor(80,10)
YShift(80,15)
YShift(80,43)
YShift(80,44)
YShift(80,79)
YLink(80,81,66)
YShift(81,16)
YShift(81,78)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 425, char 0xfb03 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 7
SHP[1], 4
MDAP[R], 4
SHP[1], 73
MDRP[m&gt;RBl], 3
SHP[2], 21
SHP[2], 74
MIAP[R], 49, 1
MIRP[m&gt;RBl], 65, 69
SHP[1], 30
MDAP[R], 30
MIRP[m&gt;RBl], 37, 69
MIAP[R], 80, 10
SHP[1], 15
SHP[1], 43
SHP[1], 44
SHP[1], 79
MIRP[m&gt;RBl], 81, 66
SHP[2], 16
SHP[2], 78
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="426">
      <instructions>
        <talk>/* uniFB04 ffl */

/* Y direction */
YAnchor(33,10)
YShift(33,23)
YShift(33,32)
YShift(33,38)
YShift(33,46)
YShift(33,51)
YLink(33,34,66)
YShift(34,31)
YShift(34,47)
YAnchor(56)
YShift(56,40)
YLink(56,64,69)
YShift(56,10)
YAnchor(10)
YLink(10,17,69)
YIPAnchor(33,24,56)
YShift(24,1)
YDist(24,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 426, char 0xfb04 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 33, 10
SHP[1], 23
SHP[1], 32
SHP[1], 38
SHP[1], 46
SHP[1], 51
MIRP[m&gt;RBl], 34, 66
SHP[2], 31
SHP[2], 47
MDAP[R], 56
SHP[1], 40
MIRP[m&gt;RBl], 64, 69
SHP[1], 10
MDAP[R], 10
MIRP[m&gt;RBl], 17, 69
SRP1[], 33
SRP2[], 56
IP[], 24
MDAP[R], 24
SHP[1], 1
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="427">
      <instructions>
        <talk>/* uniFB05 longs_t */

/* Y direction */
YAnchor(0,11)
YDist(0,47)
YAnchor(32,1)
YLink(32,17,69)
YIPAnchor(0,39,32)
YShift(39,8)
YShift(39,23)
YDist(39,36)
YAnchor(59,10)
YShift(59,21)
YLink(59,58,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 427, char 0xfb05 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 47
MIAP[R], 32, 1
MIRP[m&gt;RBl], 17, 69
SRP2[], 0
IP[], 39
MDAP[R], 39
SHP[1], 8
SHP[1], 23
MDRP[m&gt;RBl], 36
MIAP[R], 59, 10
SHP[1], 21
MIRP[m&gt;RBl], 58, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="428">
      <instructions>
        <talk>/* uniFB06 st */

/* Y direction */
YAnchor(0,11)
YLink(0,10,69)
YShift(0,57)
YDist(57,49)
YAnchor(24,7)
YLink(24,91,69)
YInterpolate(0,16,99,24)
YShift(24,38)
YAnchor(38)
YDist(38,41)
YShift(41,65)
YAnchor(34)
YDist(34,73)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 428, char 0xfb06 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 10, 69
SHP[1], 57
SRP0[], 57
MDRP[m&gt;RBl], 49
MIAP[R], 24, 7
MIRP[m&gt;RBl], 91, 69
SRP2[], 0
IP[], 16
IP[], 99
SHP[1], 38
MDAP[R], 38
MDRP[m&gt;RBl], 41
SHP[2], 65
MDAP[R], 34
MDRP[m&gt;RBl], 73
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="429">
      <instructions>
        <talk>/* uni007902DE */

/* Y direction */
YAnchor(0,14)
YAnchor(21,6)
YShift(21,11)
YShift(21,17)
YShift(21,26)
YInterpolate(0,15,29,21)
YDist(29,47)
YLink(21,20,66)
YShift(20,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 429, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 21, 6
SHP[1], 11
SHP[1], 17
SHP[1], 26
IP[], 15
IP[], 29
SRP0[], 29
MDRP[m&gt;RBl], 47
SRP0[], 21
MIRP[m&gt;RBl], 20, 66
SHP[2], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="430">
      <instructions>
        <talk>/* f_thorn.loclENG */

/* Y direction */
YAnchor(0,14)
YAnchor(22,1)
YLink(22,30,69)
YAnchor(45,10)
YShift(45,36)
YLink(45,44,66)
YIPAnchor(45,37,22)
YShift(37,13)
YDist(37,38)
YAnchor(46,11)
YLink(46,47,69)
YAnchor(61,7)
YLink(61,54,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 430, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 22, 1
MIRP[m&gt;RBl], 30, 69
MIAP[R], 45, 10
SHP[1], 36
MIRP[m&gt;RBl], 44, 66
SRP2[], 22
IP[], 37
MDAP[R], 37
SHP[1], 13
MDRP[m&gt;RBl], 38
MIAP[R], 46, 11
MIRP[m&gt;RBl], 47, 69
MIAP[R], 61, 7
MIRP[m&gt;RBl], 54, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="431">
      <instructions>
        <talk>/* uni1E9E.sc alternate germandbls.sc */

/* Y direction */
YAnchor(0,78)
YLink(0,10,80)
YAnchor(36,76)
YLink(36,23,80)
YInterpolate(0,17,36)
YShift(17,42)
YAnchor(53,77)
YShift(53,29)
YLink(53,52,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 431, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 10, 80
MIAP[R], 36, 76
MIRP[m&gt;RBl], 23, 80
SRP2[], 0
IP[], 17
SRP1[], 17
SHP[1], 42
MIAP[R], 53, 77
SHP[1], 29
MIRP[m&gt;RBl], 52, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="432">
      <instructions>
        <talk>/* a.sc */

/* Y direction */
YAnchor(11,76)
YAnchor(24,77)
YShift(24,0)
YShift(24,19)
YShift(24,33)
YIPAnchor(24,23,11)
YLink(23,22,79)
YLink(24,25,81)
YShift(25,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 432, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 76
MIAP[R], 24, 77
SHP[1], 0
SHP[1], 19
SHP[1], 33
SRP2[], 11
IP[], 23
MDAP[R], 23
MIRP[m&gt;RBl], 22, 79
SRP0[], 24
MIRP[m&gt;RBl], 25, 81
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="433">
      <instructions>
        <talk>/* uniA733.sc aa */

/* Y direction */
YAnchor(15,76)
YShift(15,35)
YAnchor(53,77)
YShift(53,3)
YShift(53,4)
YShift(53,24)
YShift(53,52)
YShift(53,58)
YIPAnchor(53,43,15)
YShift(43,44)
YLink(43,42,79)
YShift(42,45)
YLink(53,54,81)
YShift(54,51)
YShift(54,59)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 433, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 76
SHP[1], 35
MIAP[R], 53, 77
SHP[1], 3
SHP[1], 4
SHP[1], 24
SHP[1], 52
SHP[1], 58
SRP2[], 15
IP[], 43
MDAP[R], 43
SHP[1], 44
MIRP[m&gt;RBl], 42, 79
SHP[2], 45
SRP0[], 53
MIRP[m&gt;RBl], 54, 81
SHP[2], 51
SHP[2], 59
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="434">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 775, 945, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="435">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 780, 945, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="436">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 778, 944, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="437">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 772, 944, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="438">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 774, 944, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="439">
      <instructions>
        <talk>/* q.alt.sc */

/* Y direction */
YAnchor(13,76)
YLink(13,37,80)
YAnchor(25,77)
YDist(25,29,&gt;=)
YDist(25,0,&gt;=)
YDist(0,51,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 439, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 76
MIRP[m&gt;RBl], 37, 80
MIAP[R], 25, 77
MDRP[m&gt;RGr], 29
MDRP[M&gt;RBl], 0
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="440">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 783, 945, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="441">
      <instructions>
        <talk>/* uniA735.sc ao */

/* Y direction */
YAnchor(0,78)
YLink(0,53,80)
YAnchor(9,76)
YLink(9,61,80)
YShift(9,48)
YAnchor(24,77)
YShift(24,23)
YShift(24,33)
YShift(24,72)
YLink(24,25,81)
YShift(25,22)
YIPAnchor(24,29,48)
YLink(29,30,79)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 441, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 53, 80
MIAP[R], 9, 76
MIRP[m&gt;RBl], 61, 80
SHP[1], 48
MIAP[R], 24, 77
SHP[1], 23
SHP[1], 33
SHP[1], 72
MIRP[m&gt;RBl], 25, 81
SHP[2], 22
SRP2[], 48
IP[], 29
MDAP[R], 29
MIRP[m&gt;RBl], 30, 79
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="442">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 800, 1266, -33
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="443">
      <instructions>
        <talk>/* aring.sc */

/* Y direction */
YAnchor(7)
YDist(7,24)
YDist(24,18)
YDist(18,1)
YShift(1,13)
YShift(1,16)
YAnchor(38,77)
YShift(38,15)
YShift(38,17)
YShift(38,39)
YIPAnchor(38,33,7)
YLink(33,32,79)
YLink(38,37,81)
YShift(37,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 443, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 7
MDRP[M&gt;RBl], 24
MDRP[M&lt;RWh], 18
MDRP[m&gt;RBl], 1
SHP[2], 13
SHP[2], 16
MIAP[R], 38, 77
SHP[1], 15
SHP[1], 17
SHP[1], 39
SRP2[], 7
IP[], 33
MDAP[R], 33
MIRP[m&gt;RBl], 32, 79
SRP0[], 38
MIRP[m&gt;RBl], 37, 81
SHP[2], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="444">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 443, 0, 0
OVERLAP[]
OFFSET[R], 775, 1282, -35
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="445">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OVERLAP[]
OFFSET[R], 782, 944, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="446">
      <instructions>
        <talk>/* uniA737.sc au */

/* Y direction */
YAnchor(0,78)
YLink(0,14,81)
YAnchor(39,77)
YShift(39,30)
YLink(39,38,81)
YAnchor(48,75)
YShift(48,9)
YShift(48,19)
YShift(48,28)
YShift(48,42)
YIPAnchor(39,34,48)
YLink(34,33,79)
YLink(48,49,81)
YShift(49,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 446, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 14, 81
MIAP[R], 39, 77
SHP[1], 30
MIRP[m&gt;RBl], 38, 81
MIAP[R], 48, 75
SHP[1], 9
SHP[1], 19
SHP[1], 28
SHP[1], 42
SRP2[], 39
IP[], 34
MDAP[R], 34
MIRP[m&gt;RBl], 33, 79
SRP0[], 48
MIRP[m&gt;RBl], 49, 81
SHP[2], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="447">
      <instructions>
        <talk>/* uniA739.sc av */

/* Y direction */
YAnchor(29,75)
YShift(29,11)
YShift(29,16)
YShift(29,20)
YLink(29,28,81)
YAnchor(36,77)
YShift(36,0)
YShift(36,22)
YLink(36,35,81)
YIPAnchor(36,26,29)
YLink(26,25,79)

/* X direction */

Smooth()
XDelta(17,3/8@12..19)
XDelta(18,3/8@12..19)
XDelta(17,1/2@20..35)
XDelta(18,1/2@20..35)

</talk>
        <assembly>/* TT glyph 447, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 29, 75
SHP[1], 11
SHP[1], 16
SHP[1], 20
MIRP[m&gt;RBl], 28, 81
MIAP[R], 36, 77
SHP[1], 0
SHP[1], 22
MIRP[m&gt;RBl], 35, 81
SRP2[], 29
IP[], 26
MDAP[R], 26
MIRP[m&gt;RBl], 25, 79
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 17, 24, 12, 19, 72
CALL[], 18, 24, 12, 19, 72
CALL[], 17, 32, 20, 35, 72
CALL[], 18, 32, 20, 35, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="448">
      <instructions>
        <talk>/* uniA73B.sc av with bar */

/* Y direction */
YAnchor(29,75)
YShift(29,11)
YShift(29,16)
YShift(29,24)
YLink(29,28,81)
YAnchor(36,77)
YShift(36,0)
YShift(36,26)
YLink(36,35,81)
YIPAnchor(36,19,29)
YLink(19,20,79)

/* X direction */

Smooth()
XDelta(17,3/8@12..19)
XDelta(18,3/8@12..19)
XDelta(17,1/2@20..35)
XDelta(18,1/2@20..35)
</talk>
        <assembly>/* TT glyph 448, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 29, 75
SHP[1], 11
SHP[1], 16
SHP[1], 24
MIRP[m&gt;RBl], 28, 81
MIAP[R], 36, 77
SHP[1], 0
SHP[1], 26
MIRP[m&gt;RBl], 35, 81
SRP2[], 29
IP[], 19
MDAP[R], 19
MIRP[m&gt;RBl], 20, 79
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 17, 24, 12, 19, 72
CALL[], 18, 24, 12, 19, 72
CALL[], 17, 32, 20, 35, 72
CALL[], 18, 32, 20, 35, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="449">
      <instructions>
        <talk>/* uniA73D.sc ay */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,11)
YAnchor(26,77)
YLink(26,25,81)
YShift(26,30)
YShift(26,35)
YAnchor(53,75)
YShift(53,16)
YShift(53,28)
YShift(53,46)
YLink(53,52,81)
YIPAnchor(26,34,53)
YLink(34,33,79)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 449, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 11
MIAP[R], 26, 77
MIRP[m&gt;RBl], 25, 81
SHP[1], 30
SHP[1], 35
MIAP[R], 53, 75
SHP[1], 16
SHP[1], 28
SHP[1], 46
MIRP[m&gt;RBl], 52, 81
SRP2[], 26
IP[], 34
MDAP[R], 34
MIRP[m&gt;RBl], 33, 79
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="450">
      <instructions>
        <talk>/* ae.sc */

/* Y direction */
YAnchor(8,75)
YShift(8,32)
YLink(8,7,81)
YShift(7,16)
YAnchor(30,77)
YShift(30,0)
YShift(30,34)
YLink(30,29,81)
YShift(29,1)
YShift(29,18)
YIPAnchor(30,35,8)
YShift(35,39)
YLink(35,36,79)
YShift(36,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 450, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 75
SHP[1], 32
MIRP[m&gt;RBl], 7, 81
SHP[2], 16
MIAP[R], 30, 77
SHP[1], 0
SHP[1], 34
MIRP[m&gt;RBl], 29, 81
SHP[2], 1
SHP[2], 18
SRP2[], 8
IP[], 35
MDAP[R], 35
SHP[1], 39
MIRP[m&gt;RBl], 36, 79
SHP[2], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="451">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 450, 0, 0
OVERLAP[]
OFFSET[R], 775, 1473, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="452">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 450, 0, 0
OVERLAP[]
OFFSET[R], 783, 1473, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="453">
      <instructions>
        <talk>/* b.sc */

/* Y direction */
YAnchor(16,77)
YShift(16,0)
YLink(16,17,81)
YShift(17,20)
YAnchor(33,75)
YShift(33,1)
YIPAnchor(16,30,33)
YDist(30,35)
YLink(33,32,81)
YShift(32,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 453, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 77
SHP[1], 0
MIRP[m&gt;RBl], 17, 81
SHP[2], 20
MIAP[R], 33, 75
SHP[1], 1
SRP2[], 16
IP[], 30
MDAP[R], 30
MDRP[m&gt;RBl], 35
SRP0[], 33
MIRP[m&gt;RBl], 32, 81
SHP[2], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="454">
      <instructions>
        <talk>/* c.sc */

/* Y direction */
YAnchor(0,78)
YLink(0,30,80)
YShift(0,36)
YAnchor(8,76)
YShift(8,14)
YLink(8,21,80)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 454, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 30, 80
SHP[1], 36
MIAP[R], 8, 76
SHP[1], 14
MIRP[m&gt;RBl], 21, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="455">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OVERLAP[]
OFFSET[R], 775, 1097, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="456">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OVERLAP[]
OFFSET[R], 779, 1096, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="457">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OVERLAP[]
OFFSET[R], 799, 1019, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="458">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OVERLAP[]
OFFSET[R], 773, 1096, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="459">
      <instructions>
        <talk>/* d.sc */

/* Y direction */
YAnchor(11,77)
YShift(11,0)
YLink(11,12,81)
YShift(12,15)
YAnchor(27,75)
YShift(27,1)
YLink(27,26,81)
YShift(26,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 459, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 77
SHP[1], 0
MIRP[m&gt;RBl], 12, 81
SHP[2], 15
MIAP[R], 27, 75
SHP[1], 1
MIRP[m&gt;RBl], 26, 81
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="460">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 459, 0, 0
OVERLAP[]
OFFSET[R], 865, 276, 58
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="461">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 459, 0, 0
OVERLAP[]
OFFSET[R], 779, 1010, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="462">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 460, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="463">
      <instructions>
        <talk>/* e.sc */

/* Y direction */
YAnchor(32,75)
YShift(32,2)
YShift(32,19)
YLink(32,31,81)
YShift(31,18)
YAnchor(34,77)
YShift(34,0)
YShift(34,4)
YIPAnchor(34,22,32)
YShift(22,26)
YLink(22,23,79)
YShift(23,27)
YLink(34,35,81)
YShift(35,5)

/* X direction */
XAnchor(2)
XAnchor(21)
XIPAnchor(21,28,2)
XDist(28,27)

Smooth()
</talk>
        <assembly>/* TT glyph 463, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 32, 75
SHP[1], 2
SHP[1], 19
MIRP[m&gt;RBl], 31, 81
SHP[2], 18
MIAP[R], 34, 77
SHP[1], 0
SHP[1], 4
SRP2[], 32
IP[], 22
MDAP[R], 22
SHP[1], 26
MIRP[m&gt;RBl], 23, 79
SHP[2], 27
SRP0[], 34
MIRP[m&gt;RBl], 35, 81
SHP[2], 5
SVTCA[X]
MDAP[R], 2
MDAP[R], 21
SRP2[], 2
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="464">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 775, 986, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="465">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 780, 986, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="466">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 779, 985, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="467">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 778, 985, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="468">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 772, 985, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="469">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 773, 985, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="470">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 774, 985, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="471">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 783, 986, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="472">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OVERLAP[]
OFFSET[R], 838, 1393, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="473">
      <instructions>
        <talk>/* f.sc */

/* Y direction */
YAnchor(13,77)
YShift(13,0)
YLink(13,14,81)
YAnchor(28,75)
YShift(28,2)
YShift(28,10)
YIPAnchor(13,18,28)
YShift(18,22)
YLink(18,19,79)
YShift(19,23)
YLink(28,27,81)
YShift(27,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 473, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 77
SHP[1], 0
MIRP[m&gt;RBl], 14, 81
MIAP[R], 28, 75
SHP[1], 2
SHP[1], 10
SRP2[], 13
IP[], 18
MDAP[R], 18
SHP[1], 22
MIRP[m&gt;RBl], 19, 79
SHP[2], 23
SRP0[], 28
MIRP[m&gt;RBl], 27, 81
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="474">
      <instructions>
        <talk>/* g.sc */

/* Y direction */
YAnchor(0,78)
YLink(0,30,80)
YShift(0,50)
YAnchor(9,76)
YShift(9,15)
YLink(9,22,80)
YIPAnchor(0,38,9)
YShift(38,35)
YShift(38,42)
YLink(38,37,81)
YShift(37,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 474, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 30, 80
SHP[1], 50
MIAP[R], 9, 76
SHP[1], 15
MIRP[m&gt;RBl], 22, 80
SRP2[], 0
IP[], 38
MDAP[R], 38
SHP[1], 35
SHP[1], 42
MIRP[m&gt;RBl], 37, 81
SHP[2], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="475">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OVERLAP[]
OFFSET[R], 798, 1105, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="476">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OVERLAP[]
OFFSET[R], 773, 1095, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="477">
      <instructions>
        <talk>/* uni021D.sc yogh */

/* Y direction */
YAnchor(0)
YLink(0,1,80)
YAnchor(31,76)
YDist(31,19)
YDelta(19,-1/4@12..24)
YDelta(19,-1/2@25..43)
YShift(31,26)
YInterpolate(0,8,31)
YShift(8,39)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 477, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 80
MIAP[R], 31, 76
MDRP[m&gt;RBl], 19
CALL[], 19, -16, 12, 24, 72
CALL[], 19, -32, 25, 43, 72
SHP[1], 26
SRP2[], 0
IP[], 8
SRP1[], 8
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="478">
      <instructions>
        <talk>/* h.sc */

/* Y direction */
YAnchor(16,77)
YShift(16,3)
YShift(16,4)
YShift(16,17)
YLink(16,15,81)
YShift(15,18)
YAnchor(25,75)
YShift(25,2)
YShift(25,5)
YLink(25,26,81)
YShift(25,29)
YIPAnchor(16,8,25)
YLink(8,9,79)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 478, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 77
SHP[1], 3
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 15, 81
SHP[2], 18
MIAP[R], 25, 75
SHP[1], 2
SHP[1], 5
MIRP[m&gt;RBl], 26, 81
SHP[1], 29
SRP2[], 16
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 9, 79
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="479">
      <instructions>
        <talk>/* uni0127.sc hbar */

/* Y direction */
YAnchor(16,77)
YShift(16,3)
YShift(16,4)
YShift(16,17)
YLink(16,15,81)
YShift(15,18)
YAnchor(25,75)
YShift(25,2)
YShift(25,5)
YShift(25,29)
YIPAnchor(16,8,32,25)
YLink(8,9,79)
YLink(32,33,79)
YLink(25,26,81)
YShift(26,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 479, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 77
SHP[1], 3
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 15, 81
SHP[2], 18
MIAP[R], 25, 75
SHP[1], 2
SHP[1], 5
SHP[1], 29
SRP2[], 16
IP[], 8
IP[], 32
MDAP[R], 8
MDAP[R], 32
SRP0[], 8
MIRP[m&gt;RBl], 9, 79
SRP0[], 32
MIRP[m&gt;RBl], 33, 79
SRP0[], 25
MIRP[m&gt;RBl], 26, 81
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="480">
      <instructions>
        <talk>/* uni0195.sc hwair */

/* Y direction */
YAnchor(0,78)
YLink(0,9,80)
YAnchor(19)
YAnchor(39,77)
YShift(39,30)
YLink(39,38,81)
YAnchor(43,75)
YShift(43,4)
YShift(43,29)
YShift(43,47)
YIPAnchor(39,31,43)
YLink(31,32,79)
YLink(43,44,81)
YShift(44,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 480, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 9, 80
MDAP[R], 19
MIAP[R], 39, 77
SHP[1], 30
MIRP[m&gt;RBl], 38, 81
MIAP[R], 43, 75
SHP[1], 4
SHP[1], 29
SHP[1], 47
SRP2[], 39
IP[], 31
MDAP[R], 31
MIRP[m&gt;RBl], 32, 79
SRP0[], 43
MIRP[m&gt;RBl], 44, 81
SHP[2], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="481">
      <instructions>
        <talk>/* i.sc */

/* Y direction */
YAnchor(4,77)
YShift(4,0)
YLink(4,5,81)
YAnchor(11,75)
YShift(11,1)
YLink(11,10,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 481, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 77
SHP[1], 0
MIRP[m&gt;RBl], 5, 81
MIAP[R], 11, 75
SHP[1], 1
MIRP[m&gt;RBl], 10, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="482">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 775, 722, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="483">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 780, 722, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="484">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 778, 721, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="485">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 772, 721, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="486">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 774, 721, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="487">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 490, 586, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="488">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 783, 722, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="489">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OVERLAP[]
OFFSET[R], 800, 777, -30

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="490">
      <instructions>
        <talk>/* j.sc */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,11)
YAnchor(32,75)
YShift(32,18)
YLink(32,31,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 490, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 11
MIAP[R], 32, 75
SHP[1], 18
MIRP[m&gt;RBl], 31, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="491">
      <instructions>
        <talk>/* k.sc */

/* Y direction */
YAnchor(34,77)
YShift(34,3)
YLink(34,33,81)
YShift(34,4)
YDist(4,28)
YAnchor(38,75)
YShift(38,2)
YShift(38,18)
YShift(38,42)
YInterpolate(34,12,38)
YDist(12,13)
YShift(12,20)
YLink(38,39,81)
YShift(39,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 491, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 77
SHP[1], 3
MIRP[m&gt;RBl], 33, 81
SHP[1], 4
SRP0[], 4
MDRP[m&gt;RBl], 28
MIAP[R], 38, 75
SHP[1], 2
SHP[1], 18
SHP[1], 42
SRP2[], 34
IP[], 12
SRP0[], 12
MDRP[m&gt;RBl], 13
SHP[1], 20
SRP0[], 38
MIRP[m&gt;RBl], 39, 81
SHP[2], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="492">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 491, 0, 0
OVERLAP[]
OFFSET[R], 798, 1005, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="493">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 491, 0, 0
OVERLAP[]
OFFSET[R], 865, 268, 351

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="494">
      <instructions>
        <talk>/* l.sc */

/* Y direction */
YAnchor(16,75)
YShift(16,2)
YLink(16,17,81)
YAnchor(18,77)
YShift(18,0)
YShift(18,4)
YLink(18,19,81)
YShift(19,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 494, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 75
SHP[1], 2
MIRP[m&gt;RBl], 17, 81
MIAP[R], 18, 77
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 81
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="495">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 494, 0, 0
OVERLAP[]
OFFSET[R], 775, 771, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="496">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 494, 0, 0
OVERLAP[]
OFFSET[R], 865, 266, 63
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="497">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 494, 0, 0
OVERLAP[]
OFFSET[R], 777, 934, -381
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="498">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 494, 0, 0
OVERLAP[]
OFFSET[R], 798, 976, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="499">
      <instructions>
        <talk>/* uni026B.sc l with tilde */

/* Y direction */
YAnchor(16,75)
YShift(16,2)
YLink(16,17,81)
YAnchor(18,77)
YShift(18,4)
YLink(18,19,81)
YShift(19,5)
YInterpolate(18,22,16)
YShift(22,26)
YDist(22,38)
YShift(38,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 499, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 75
SHP[1], 2
MIRP[m&gt;RBl], 17, 81
MIAP[R], 18, 77
SHP[1], 4
MIRP[m&gt;RBl], 19, 81
SHP[2], 5
SRP2[], 16
IP[], 22
SRP1[], 22
SHP[1], 26
SRP0[], 22
MDRP[m&gt;RBl], 38
SHP[2], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="500">
      <instructions>
        <talk>/* thorn.loclENG.sc */

/* Y direction */
YAnchor(24)
YDist(24,12)
YShift(24,43)
YAnchor(35)
YInterpolate(35,0,24)
YDist(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 500, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 24
MDRP[m&gt;RBl], 12
SHP[1], 43
MDAP[R], 35
SRP2[], 24
IP[], 0
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="501">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 494, 0, 0
OVERLAP[]
OFFSET[R], 808, 294, 85
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="502">
      <instructions>
        <talk>/* m.sc */

/* Y direction */
YAnchor(30,77)
YShift(30,0)
YShift(30,4)
YShift(30,15)
YShift(30,25)
YLink(30,29,81)
YShift(30,31)
YAnchor(38,75)
YShift(38,2)
YShift(38,9)
YShift(38,20)
YShift(38,23)
YLink(38,39,81)
YShift(39,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 502, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 30, 77
SHP[1], 0
SHP[1], 4
SHP[1], 15
SHP[1], 25
MIRP[m&gt;RBl], 29, 81
SHP[1], 31
MIAP[R], 38, 75
SHP[1], 2
SHP[1], 9
SHP[1], 20
SHP[1], 23
MIRP[m&gt;RBl], 39, 81
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="503">
      <instructions>
        <talk>/* n.sc */

/* Y direction */
YAnchor(22,75)
YShift(22,6)
YShift(22,13)
YShift(22,18)
YLink(22,21,81)
YShift(21,5)
YAnchor(29,77)
YShift(29,0)
YShift(29,11)
YShift(29,19)
YLink(29,28,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 503, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 22, 75
SHP[1], 6
SHP[1], 13
SHP[1], 18
MIRP[m&gt;RBl], 21, 81
SHP[2], 5
MIAP[R], 29, 77
SHP[1], 0
SHP[1], 11
SHP[1], 19
MIRP[m&gt;RBl], 28, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="504">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OVERLAP[]
OFFSET[R], 775, 1074, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="505">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OVERLAP[]
OFFSET[R], 779, 1073, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="506">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OVERLAP[]
OFFSET[R], 798, 1087, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="507">
      <instructions>
        <talk>/* eng.sc */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,11)
YAnchor(43,75)
YShift(43,22)
YShift(43,29)
YShift(43,38)
YLink(43,42,81)
YShift(42,21)
YAnchor(50,77)
YShift(50,16)
YShift(50,27)
YShift(50,40)
YLink(50,49,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 507, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 11
MIAP[R], 43, 75
SHP[1], 22
SHP[1], 29
SHP[1], 38
MIRP[m&gt;RBl], 42, 81
SHP[2], 21
MIAP[R], 50, 77
SHP[1], 16
SHP[1], 27
SHP[1], 40
MIRP[m&gt;RBl], 49, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="508">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OVERLAP[]
OFFSET[R], 782, 1073, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="509">
      <instructions>
        <talk>/* o.sc */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YAnchor(9,76)
YLink(9,26,80)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 509, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
MIAP[R], 9, 76
MIRP[m&gt;RBl], 26, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="510">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 775, 1056, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="511">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 780, 1056, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="512">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 778, 1055, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="513">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 772, 1055, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="514">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 774, 1055, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="515">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 776, 1093, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="516">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 783, 1056, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="517">
      <instructions>
        <talk>/* uniA74F.sc oo */

/* Y direction */
YAnchor(0,78)
YShift(0,24)
YLink(0,30,80)
YShift(30,46)
YAnchor(9,76)
YShift(9,15)
YLink(9,37,80)
YShift(37,54)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 517, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
SHP[2], 24
MIRP[m&gt;RBl], 30, 80
SHP[2], 46
MIAP[R], 9, 76
SHP[1], 15
MIRP[m&gt;RBl], 37, 80
SHP[2], 54
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="518">
      <instructions>
        <talk>/* uni01EB oogonek */

/* Y direction */
YAnchor(0)
YDist(0,33)
YAnchor(9,78)
YLink(9,40,80)
YAnchor(18,76)
YLink(18,48,80)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 518, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 33
MIAP[R], 9, 78
MIRP[m&gt;RBl], 40, 80
MIAP[R], 18, 76
MIRP[m&gt;RBl], 48, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="519">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 866, 628, -198
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="520">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 519, 0, 0
OVERLAP[]
OFFSET[R], 775, 1056, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="521">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OVERLAP[]
OFFSET[R], 782, 1055, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="522">
      <instructions>
        <talk>/* oe.sc */

/* Y direction */
YAnchor(35,77)
YLink(35,36,81)
YShift(35,0)
YLink(0,11,80)
YAnchor(50,75)
YLink(50,49,81)
YShift(50,8)
YLink(8,18,80)
YIPAnchor(35,27,50)
YShift(27,31)
YLink(27,28,79)
YShift(28,32)

/* X direction */
XAnchor(9)
XAnchor(52)
XIPAnchor(52,33,9)
XDist(33,32)

Smooth()

</talk>
        <assembly>/* TT glyph 522, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 35, 77
MIRP[m&gt;RBl], 36, 81
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 11, 80
MIAP[R], 50, 75
MIRP[m&gt;RBl], 49, 81
SHP[1], 8
SRP0[], 8
MIRP[m&gt;RBl], 18, 80
SRP1[], 35
SRP2[], 50
IP[], 27
MDAP[R], 27
SHP[1], 31
MIRP[m&gt;RBl], 28, 79
SHP[2], 32
SVTCA[X]
MDAP[R], 9
MDAP[R], 52
SRP2[], 9
IP[], 33
MDAP[R], 33
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="523">
      <instructions>
        <talk>/* p.sc */

/* Y direction */
YAnchor(14,77)
YShift(14,0)
YLink(14,15,81)
YAnchor(21,75)
YShift(21,1)
YIPAnchor(14,8,21)
YDist(8,23)
YLink(21,20,81)
YShift(20,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 523, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 14, 77
SHP[1], 0
MIRP[m&gt;RBl], 15, 81
MIAP[R], 21, 75
SHP[1], 1
SRP2[], 14
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 23
SRP0[], 21
MIRP[m&gt;RBl], 20, 81
SHP[2], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="524">
      <instructions>
        <talk>/* thorn.sc */

/* VTTTalk glyph 524, char 0xffff */
/* GUI generated Fri Apr 17 07:24:50 2020 */

/* Y direction */
YAnchor(34,77)
YShift(34,17)
YLink(34,33,81)
YAnchor(38,75)
YShift(38,2)
YLink(38,39,81)
YIPAnchor(34,12,4,38)
YLink(12,22,80)
YLink(4,28,79)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 524, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 77
SHP[1], 17
MIRP[m&gt;RBl], 33, 81
MIAP[R], 38, 75
SHP[1], 2
MIRP[m&gt;RBl], 39, 81
SRP2[], 34
IP[], 12
IP[], 4
MDAP[R], 12
MDAP[R], 4
SRP0[], 12
MIRP[m&gt;RBl], 22, 80
SRP0[], 4
MIRP[m&gt;RBl], 28, 79
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="525">
      <instructions>
        <talk>/* q.sc */

/* Y direction */
YAnchor(10,76)
YLink(10,34,80)
YAnchor(19,78)
YLink(19,26,80,&gt;=)
YShift(19,42)
YDist(19,0)
YDist(0,47)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 525, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 76
MIRP[m&gt;RBl], 34, 80
MIAP[R], 19, 78
MIRP[m&gt;RGr], 26, 80
SHP[1], 42
MDRP[M&gt;RBl], 0
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="526">
      <instructions>
        <talk>/* r.sc */

/* Y direction */
YAnchor(39,77)
YShift(39,21)
YLink(39,40,81)
YShift(39,0)
YDist(0,37)
YAnchor(46,75)
YShift(46,22)
YIPAnchor(39,7,46)
YDist(7,12)
YShift(7,30)
YLink(46,45,81)
YShift(45,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 526, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 39, 77
SHP[1], 21
MIRP[m&gt;RBl], 40, 81
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 37
MIAP[R], 46, 75
SHP[1], 22
SRP2[], 39
IP[], 7
MDAP[R], 7
MDRP[m&gt;RBl], 12
SHP[1], 30
SRP0[], 46
MIRP[m&gt;RBl], 45, 81
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="527">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 526, 0, 0
OVERLAP[]
OFFSET[R], 775, 957, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="528">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 526, 0, 0
OVERLAP[]
OFFSET[R], 779, 956, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="529">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 526, 0, 0
OVERLAP[]
OFFSET[R], 798, 1021, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="530">
      <instructions>
        <talk>/* s.sc */

/* Y direction */
YAnchor(0,78)
YLink(0,10,80)
YAnchor(25,76)
YShift(25,30)
YLink(25,37,80)
YInterpolate(0,17,44,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 530, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 10, 80
MIAP[R], 25, 76
SHP[1], 30
MIRP[m&gt;RBl], 37, 80
SRP2[], 0
IP[], 17
IP[], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="531">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 530, 0, 0
OVERLAP[]
OFFSET[R], 775, 894, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="532">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 530, 0, 0
OVERLAP[]
OFFSET[R], 779, 893, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="533">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 530, 0, 0
OVERLAP[]
OFFSET[R], 799, 821, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="534">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 530, 0, 0
OVERLAP[]
OFFSET[R], 530, 890, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="535">
      <instructions>
        <talk>/* t.sc */

/* Y direction */
YAnchor(7,75)
YShift(7,3)
YShift(7,10)
YLink(7,23,79)
YShift(7,35)
YAnchor(28,77)
YLink(28,29,81)
YShift(28,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 535, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 75
SHP[1], 3
SHP[1], 10
MIRP[m&gt;RBl], 23, 79
SHP[1], 35
MIAP[R], 28, 77
MIRP[m&gt;RBl], 29, 81
SHP[1], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="536">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 535, 0, 0
OVERLAP[]
OFFSET[R], 865, 599, 63
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="537">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 535, 0, 0
OVERLAP[]
OFFSET[R], 779, 1051, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="538">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 535, 0, 0
OVERLAP[]
OFFSET[R], 799, 1012, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="539">
      <instructions>
        <talk>/* u.sc */

/* Y direction */
YAnchor(0,78)
YLink(0,13,80)
YAnchor(29,75)
YShift(29,9)
YShift(29,17)
YShift(29,33)
YLink(29,30,81)
YShift(30,32)

/* X direction */

Smooth()
XDelta(14,-1/4@12..19)
XDelta(15,-1/4@12..19)
XDelta(16,-1/4@12..19)
XDelta(17,-1/4@12..19)
XDelta(14,-1/2@20..52)
XDelta(15,-1/2@20..52)
XDelta(16,-1/2@20..52)
XDelta(17,-1/2@20..52)
</talk>
        <assembly>/* TT glyph 539, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 13, 80
MIAP[R], 29, 75
SHP[1], 9
SHP[1], 17
SHP[1], 33
MIRP[m&gt;RBl], 30, 81
SHP[2], 32
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 14, -16, 12, 19, 72
CALL[], 15, -16, 12, 19, 72
CALL[], 16, -16, 12, 19, 72
CALL[], 17, -16, 12, 19, 72
CALL[], 14, -32, 20, 52, 72
CALL[], 15, -32, 20, 52, 72
CALL[], 16, -32, 20, 52, 72
CALL[], 17, -32, 20, 52, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="540">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 775, 1082, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="541">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 780, 1082, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="542">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 778, 1081, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="543">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 772, 1081, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="544">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 774, 1081, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="545">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 776, 1119, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="546">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 783, 1082, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="547">
      <instructions>
        <talk>/* uogonek.sc */

/* Y direction */
YAnchor(0,78)
YDist(0,13)
YShift(0,23)
YShift(0,43)
YAnchor(29,75)
YShift(29,9)
YShift(29,17)
YShift(29,33)
YLink(29,30,81)
YShift(30,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 547, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MDRP[m&gt;RBl], 13
SHP[1], 23
SHP[1], 43
MIAP[R], 29, 75
SHP[1], 9
SHP[1], 17
SHP[1], 33
MIRP[m&gt;RBl], 30, 81
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="548">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 781, 1081, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="549">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OVERLAP[]
OFFSET[R], 782, 1081, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="550">
      <instructions>
        <talk>/* v.sc */

/* Y direction */
YAnchor(0,78)
YShift(0,4)
YAnchor(11,75)
YShift(11,2)
YShift(11,5)
YShift(11,15)
YLink(11,12,81)
YShift(12,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 550, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
SHP[2], 4
MIAP[R], 11, 75
SHP[1], 2
SHP[1], 5
SHP[1], 15
MIRP[m&gt;RBl], 12, 81
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="551">
      <instructions>
        <talk>/* w.sc */

/* Y direction */
YAnchor(7,78)
YShift(7,4)
YShift(7,12)
YShift(7,15)
YAnchor(24,75)
YShift(24,2)
YShift(24,10)
YShift(24,13)
YShift(24,19)
YShift(24,28)
YLink(24,25,81)
YShift(25,20)
YShift(25,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 551, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 78
SHP[1], 4
SHP[1], 12
SHP[1], 15
MIAP[R], 24, 75
SHP[1], 2
SHP[1], 10
SHP[1], 13
SHP[1], 19
SHP[1], 28
MIRP[m&gt;RBl], 25, 81
SHP[2], 20
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="552">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OVERLAP[]
OFFSET[R], 775, 1222, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="553">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OVERLAP[]
OFFSET[R], 778, 1221, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="554">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OVERLAP[]
OFFSET[R], 772, 1221, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="555">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OVERLAP[]
OFFSET[R], 774, 1221, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="556">
      <instructions>
        <talk>/* uni01BF.sc wynn */

/* VTTTalk glyph 556, char 0xffff */
/* GUI generated Fri Apr 17 07:50:33 2020 */

/* Y direction */
YAnchor(30,77)
YShift(30,3)
YLink(30,29,81)
YAnchor(33,75)
YShift(33,1)
YShift(33,15)
YIPAnchor(30,4,33)
YDist(4,5)
YLink(33,32,81)
YShift(32,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 556, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 30, 77
SHP[1], 3
MIRP[m&gt;RBl], 29, 81
MIAP[R], 33, 75
SHP[1], 1
SHP[1], 15
SRP2[], 30
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
SRP0[], 33
MIRP[m&gt;RBl], 32, 81
SHP[2], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="557">
      <instructions>
        <talk>/* s.sc */

/* Y direction */
YAnchor(11,75)
YShift(11,1)
YShift(11,6)
YShift(11,15)
YLink(11,12,81)
YShift(12,14)
YAnchor(27,77)
YShift(27,3)
YShift(27,4)
YShift(27,18)
YLink(27,26,81)
YShift(26,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 557, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 75
SHP[1], 1
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 12, 81
SHP[2], 14
MIAP[R], 27, 77
SHP[1], 3
SHP[1], 4
SHP[1], 18
MIRP[m&gt;RBl], 26, 81
SHP[2], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="558">
      <instructions>
        <talk>/* y.sc */

/* Y direction */
YAnchor(20,75)
YShift(20,4)
YShift(20,7)
YShift(20,14)
YLink(20,21,81)
YShift(21,13)
YAnchor(22,77)
YShift(22,0)
YLink(22,23,81)

/* X direction */

Smooth()

XDelta(7,-1/8@12..32)
XDelta(6,-1/8@12..32)
XDelta(8,1/8@12..32)
XDelta(9,1/8@12..32)

</talk>
        <assembly>/* TT glyph 558, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 20, 75
SHP[1], 4
SHP[1], 7
SHP[1], 14
MIRP[m&gt;RBl], 21, 81
SHP[2], 13
MIAP[R], 22, 77
SHP[1], 0
MIRP[m&gt;RBl], 23, 81
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 7, -8, 12, 32, 72
CALL[], 6, -8, 12, 32, 72
CALL[], 8, 8, 12, 32, 72
CALL[], 9, 8, 12, 32, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="559">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OVERLAP[]
OFFSET[R], 775, 1062, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="560">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OVERLAP[]
OFFSET[R], 778, 1061, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="561">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OVERLAP[]
OFFSET[R], 772, 1061, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="562">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OVERLAP[]
OFFSET[R], 773, 1061, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="563">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OVERLAP[]
OFFSET[R], 774, 1061, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="564">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OVERLAP[]
OFFSET[R], 783, 1062, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="565">
      <instructions>
        <talk>/* z.sc */

/* Y direction */
YAnchor(5,77)
YShift(5,0)
YLink(5,28,81)
YAnchor(24,75)
YLink(24,9,81)
YShift(24,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 565, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 77
SHP[1], 0
MIRP[m&gt;RBl], 28, 81
MIAP[R], 24, 75
MIRP[m&gt;RBl], 9, 81
SHP[1], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="566">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OVERLAP[]
OFFSET[R], 775, 928, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="567">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OVERLAP[]
OFFSET[R], 779, 927, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="568">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OVERLAP[]
OFFSET[R], 773, 927, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="569">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OVERLAP[]
OFFSET[R], 865, 489, 58
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="570">
      <instructions>
        <talk>/* uniA761.sc wy */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,11)
YAnchor(22,78)
YShift(22,26)
YShift(22,30)
YAnchor(43,75)
YShift(43,16)
YShift(43,24)
YShift(43,32)
YShift(43,38)
YShift(43,47)
YLink(43,44,81)
YShift(44,39)
YShift(44,46)

/* X direction */

Smooth()
XDelta(17,1/4@12..19)
XDelta(18,1/4@12..19)
XDelta(17,1/2@20..40)
XDelta(18,1/2@20..40)
</talk>
        <assembly>/* TT glyph 570, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 11
MIAP[R], 22, 78
SHP[1], 26
SHP[1], 30
MIAP[R], 43, 75
SHP[1], 16
SHP[1], 24
SHP[1], 32
SHP[1], 38
SHP[1], 47
MIRP[m&gt;RBl], 44, 81
SHP[2], 39
SHP[2], 46
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 17, 16, 12, 19, 72
CALL[], 18, 16, 12, 19, 72
CALL[], 17, 32, 20, 40, 72
CALL[], 18, 32, 20, 40, 72
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="571">
      <instructions>
        <talk>/* ordfeminine */

/* Y direction */
YAnchor(0)
YDist(0,49)
YShift(0,41)
YDist(41,35)
YAnchor(28)
YDist(28,11)
YInterpolate(0,53,20,28)
YDist(53,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 571, char 0xaa */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 49
SHP[1], 41
SRP0[], 41
MDRP[m&gt;RBl], 35
MDAP[R], 28
MDRP[m&gt;RBl], 11
SRP2[], 0
IP[], 53
IP[], 20
SRP0[], 53
MDRP[m&lt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="572">
      <instructions>
        <talk>/* ordmasculine */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YDist(8,22) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,15) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 572, char 0xba */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
MDRP[m&gt;RBl], 22
SRP0[], 0
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="573">
      <instructions>
        <talk>/* 02B0 superscript h */

/* Y direction */
YAnchor(5)
YAnchor(38)
YShift(38,10)
YShift(38,37)
YShift(38,43)
YIPAnchor(5,28,38)
YDist(28,21)
YDist(38,39)
YShift(39,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 573, char 0x2b0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 38
SHP[1], 10
SHP[1], 37
SHP[1], 43
SRP2[], 5
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 21
SRP0[], 38
MDRP[m&gt;RBl], 39
SHP[2], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="574">
      <instructions>
        <talk>/* 02B1 superscript h with hook */

/* Y direction */
YAnchor(28)
YShift(28,0)
YShift(28,33)
YShift(28,38)
YDist(28,29)
YShift(29,34)
YAnchor(46)
YDist(46,52)
YDist(46,58)
YIPAnchor(46,18,28)
YDist(18,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 574, char 0x2b1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 28
SHP[1], 0
SHP[1], 33
SHP[1], 38
MDRP[m&gt;RBl], 29
SHP[2], 34
MDAP[R], 46
MDRP[m&gt;RBl], 52
MDRP[m&gt;RBl], 58
SRP2[], 28
IP[], 18
MDAP[R], 18
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="575">
      <instructions>
        <talk>/* 02B2 superscript j */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(0,12)
YAnchor(35)
YDist(35,29)
YDist(29,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 575, char 0x2b2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
MDRP[m&gt;RBl], 12
MDAP[R], 35
MDRP[M&gt;RBl], 29
MDRP[m&lt;RWh], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="576">
      <instructions>
        <talk>/* 02B7 superscript w */

/* Y direction */
YAnchor(0)
YShift(0,4)
YShift(0,8)
YShift(0,12)
YAnchor(24)
YShift(24,2)
YShift(24,10)
YShift(24,13)
YShift(24,19)
YShift(24,28)
YDist(24,25)
YShift(25,20)
YShift(25,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 576, char 0x2b7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SHP[2], 8
SHP[2], 12
MDAP[R], 24
SHP[1], 2
SHP[1], 10
SHP[1], 13
SHP[1], 19
SHP[1], 28
MDRP[m&gt;RBl], 25
SHP[2], 20
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="577">
      <instructions>
        <talk>/* 02E1 superscript l */

/* Y direction */
YAnchor(5)
YAnchor(11)
YShift(11,10)
YDist(11,12)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 577, char 0x2e1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 11
SHP[1], 10
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="578">
      <instructions>
        <talk>/* 207F superscript n */

/* Y direction */
YAnchor(16)
YDist(16,9)
YShift(16,41)
YShift(41,40)
YAnchor(40)
YDist(40,39)
YAnchor(30)
YShift(30,0)
YShift(30,31)
YShift(30,46)
YDist(30,29)
YShift(29,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 578, char 0x207f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 16
MDRP[m&gt;RBl], 9
SHP[1], 41
SRP1[], 41
SHP[1], 40
MDAP[R], 40
MDRP[m&gt;RBl], 39
MDAP[R], 30
SHP[1], 0
SHP[1], 31
SHP[1], 46
MDRP[m&gt;RBl], 29
SHP[2], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="579">
      <instructions>
        <talk>/* beta */

/* Y direction */
YAnchor(4)
YLink(4,48,69)
YAnchor(22,11)
YLink(22,29,69)
YAnchor(53)
YShift(53,52)
YLink(53,54,66)
YIPAnchor(4,41,53)
YDist(41,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 579, char 0x3b2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
MIRP[m&gt;RBl], 48, 69
MIAP[R], 22, 11
MIRP[m&gt;RBl], 29, 69
MDAP[R], 53
SHP[1], 52
MIRP[m&gt;RBl], 54, 66
SRP2[], 4
IP[], 41
MDAP[R], 41
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="580">
      <instructions>
        <talk>/* theta */

/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(8,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(8,17,0)
YAnchor(17)
YDist(17,18) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,21) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 580, char 0x3b8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 8
MDRP[m&gt;RBl], 31
SRP2[], 0
IP[], 17
MDAP[R], 17
MDRP[m&gt;RBl], 18
SRP0[], 0
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="581">
      <instructions>
        <talk>/* chi */

/* Y direction */
YAnchor(0)
YLink(0,1,69)
YShift(0,10)
YAnchor(5)
YLink(5,6,69)
YShift(5,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 581, char 0x3c7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 69
SHP[1], 10
MDAP[R], 5
MIRP[m&gt;RBl], 6, 69
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="582">
      <instructions>
        <talk>/* 037C */

/* Y direction */
YAnchor(0,11)
YDist(0,27)
YAnchor(9,7)
YDist(9,18)
YInterpolate(0,36,9)
YDist(36,42)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 582, char 0x37c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 27
MIAP[R], 9, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 36
SRP0[], 36
MDRP[m&gt;RBl], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="583">
      <instructions>
        <talk>/* A770 spacing us */

/* Y direction */
YAnchor(0)
YAnchor(27)
YDist(27,9)
YInterpolate(0,20,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 583, char 0xa770 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 27
MDRP[m&gt;RBl], 9
SRP2[], 0
IP[], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="584">
      <instructions>
        <talk>/* zero */

/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(8,5)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(8,27) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,17) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 584, char 0x30 (0) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 8, 5
MDRP[m&gt;RBl], 27
SRP0[], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="585">
      <instructions>
        <talk>/* one */

/* Y direction */
YAnchor(8,5)
YAnchor(14,12)
YShift(14,13)
YStem(14,15)
YLink(14,15,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 585, char 0x31 (1) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 5
MIAP[R], 14, 12
SHP[1], 13
MIRP[m&gt;RBl], 15, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="586">
      <instructions>
        <talk>/* two */

/* Min and Max */
YAnchor(0,12)	/* min, CVT */
YAnchor(19,5)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(19,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 586, char 0x32 (2) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 19, 5
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="587">
      <instructions>
        <talk>/* three */

/* VTTTalk glyph 587, char 0x33 (3) */
/* GUI generated Fri Apr 17 12:06:23 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,13)
YAnchor(39,5)
YDist(39,32)
YIPAnchor(0,21,39)
YDist(21,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 587, char 0x33 (3) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 13
MIAP[R], 39, 5
MDRP[m&gt;RBl], 32
SRP2[], 0
IP[], 21
MDAP[R], 21
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="588">
      <instructions>
        <talk>/* four */

/* Y direction */
YAnchor(9)
YShift(9,11)
YAnchor(22,12)
YShift(22,21)
YStem(22,23)
YLink(22,23,66)
YIPAnchor(9,20,22)
YShift(20,2)
YDist(20,17)
YShift(17,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 588, char 0x34 (4) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 11
MIAP[R], 22, 12
SHP[1], 21
MIRP[m&gt;RBl], 23, 66
SRP2[], 9
IP[], 20
MDAP[R], 20
SHP[1], 2
MDRP[m&gt;RBl], 17
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="589">
      <instructions>
        <talk>/* five */

/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(26,4)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(26,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(26,36,0)
YAnchor(36)
YDist(36,21) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 589, char 0x35 (5) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 26, 4
MDRP[m&gt;RBl], 29
SRP2[], 0
IP[], 36
MDAP[R], 36
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="590">
      <instructions>
        <talk>/* six */

/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(9,5)	/* max, CVT */

/* YDir: Stroke #0 */
YInterpolate(9,26,0)
YAnchor(26)
YDist(26,34) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,19) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 590, char 0x36 (6) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 9, 5
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 34
SRP0[], 0
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="591">
      <instructions>
        <talk>/* seven */

/* Min and Max */
YAnchor(0,12)	/* min, CVT */
YAnchor(13,4)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(13,6) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(13,15)

Smooth()</talk>
        <assembly>/* TT glyph 591, char 0x37 (7) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 13, 4
MDRP[m&gt;RBl], 6
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="592">
      <instructions>
        <talk>/* eight */

/* Y direction */
YAnchor(0,13)
YDist(0,30)
YAnchor(43,5)
YDist(43,15)
YInterpolate(0,36,51,8,22,43)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 592, char 0x38 (8) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 30
MIAP[R], 43, 5
MDRP[m&gt;RBl], 15
SRP2[], 0
SLOOP[], 4
IP[], 36, 51, 8, 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="593">
      <instructions>
        <talk>/* nine */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(33,5)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(33,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(33,25,0)
YAnchor(25)
YDist(25,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 593, char 0x39 (9) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 33, 5
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 25
MDAP[R], 25
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="594">
      <instructions>
        <talk>/* zero.zero */

/* Min and Max */
YAnchor(4,13)	/* min */
YAnchor(12,5)	/* max */

/* YDir: Stroke #0 */
YDist(12,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,21) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(12,2) /* max */
YShift(4,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 594, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 13
MIAP[R], 12, 5
MDRP[m&gt;RBl], 31
SRP0[], 4
MDRP[m&gt;RBl], 21
SRP1[], 12
SHP[1], 2
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="595">
      <instructions>
        <talk>/* zero.lf */

/* Min and Max */
YAnchor(0,13)	/* min */
YAnchor(8,5)	/* max */

/* YDir: Stroke #0 */
YDist(8,27) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 595, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 8, 5
MDRP[m&gt;RBl], 27
SRP0[], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="596">
      <instructions>
        <talk>/* one.lf */

/* Y direction */
YAnchor(8,5)
YAnchor(14,12)
YShift(14,13)
YLink(14,15,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 596, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 5
MIAP[R], 14, 12
SHP[1], 13
MIRP[m&gt;RBl], 15, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="597">
      <instructions>
        <talk>/* two.lf */

/* Min and Max */
YAnchor(0,12)	/* min */
YAnchor(19,13)	/* max */

/* YDir: Stroke #0 */
YDist(19,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 597, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 19, 13
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="598">
      <instructions>
        <talk>/* three.lf */

/* VTTTalk glyph 598, char 0xffff */
/* GUI generated Fri Apr 17 12:12:48 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,13)
YAnchor(39,5)
YDist(39,32)
YIPAnchor(0,21,39)
YDist(21,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 598, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 13
MIAP[R], 39, 5
MDRP[m&gt;RBl], 32
SRP2[], 0
IP[], 21
MDAP[R], 21
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="599">
      <instructions>
        <talk>/* four.lf */

/* Y direction */
YAnchor(9)
YShift(9,11)
YAnchor(22,12)
YShift(22,21)
YLink(22,23,66)
YIPAnchor(9,20,22)
YShift(20,2)
YDist(20,17)
YShift(17,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 599, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 11
MIAP[R], 22, 12
SHP[1], 21
MIRP[m&gt;RBl], 23, 66
SRP2[], 9
IP[], 20
MDAP[R], 20
SHP[1], 2
MDRP[m&gt;RBl], 17
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="600">
      <instructions>
        <talk>/* five.lf */

/* Min and Max */
YAnchor(0,13)	/* min */
YAnchor(26,4)	/* max */

/* YDir: Stroke #0 */
YDist(26,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(26,36,0)
YAnchor(36)
YDist(36,21) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 600, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 26, 4
MDRP[m&gt;RBl], 29
SRP2[], 0
IP[], 36
MDAP[R], 36
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="601">
      <instructions>
        <talk>/* six.lf */

/* Min and Max */
YAnchor(0,13)	/* min */
YAnchor(9)	/* max */

/* YDir: Stroke #0 */
YInterpolate(9,26,0)
YAnchor(26)
YDist(26,34) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,19) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 601, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 9
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 34
SRP0[], 0
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="602">
      <instructions>
        <talk>/* seven.lf */

/* Y direction */
YAnchor(0,12)
YAnchor(13,4)
YShift(13,4)
YDist(13,6)
YShift(13,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 602, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 13, 4
SHP[1], 4
MDRP[m&gt;RBl], 6
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="603">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 592, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="604">
      <instructions>
        <talk>/* nine.lf */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(33,5)	/* max */

/* YDir: Stroke #0 */
YDist(33,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(33,25,0)
YAnchor(25)
YDist(25,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 604, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 33, 5
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 25
MDAP[R], 25
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="605">
      <instructions>
        <talk>/* zero.lfzero */

/* Min and Max */
YAnchor(4,13)	/* min */
YAnchor(12,5)	/* max */

/* YDir: Stroke #0 */
YDist(12,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,21) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(12,2) /* max */
YShift(4,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 605, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 13
MIAP[R], 12, 5
MDRP[m&gt;RBl], 31
SRP0[], 4
MDRP[m&gt;RBl], 21
SRP1[], 12
SHP[1], 2
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="606">
      <instructions>
        <talk>/* zero.osf */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,24,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 606, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="607">
      <instructions>
        <talk>/* one.osf */

/* Y direction */
YAnchor(4,6)
YShift(4,0)
YLink(4,5,66)
YAnchor(11,10)
YShift(11,1)
YLink(11,10,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 607, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 6
SHP[1], 0
MIRP[m&gt;RBl], 5, 66
MIAP[R], 11, 10
SHP[1], 1
MIRP[m&gt;RBl], 10, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="608">
      <instructions>
        <talk>/* two.osf */

/* Min and Max */
YAnchor(0,10)	/* min */
YAnchor(18,7)	/* max */

/* YDir: Stroke #0 */
YDist(18,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 608, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 18, 7
MDRP[m&gt;RBl], 9
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="609">
      <instructions>
        <talk>/* three.osf */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(25,7)
YDist(25,18)
YInterpolate(0,9,35,25)
YDist(9,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 609, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MIAP[R], 25, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 9
IP[], 35
SRP0[], 9
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="610">
      <instructions>
        <talk>/* four.osf */

/* Y direction */
YAnchor(4)
YShift(4,15)
YAnchor(9,10)
YShift(9,2)
YShift(9,16)
YDist(9,6)
YShift(6,12)
YShift(6,18)
YAnchor(10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 610, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 15
MIAP[R], 9, 10
SHP[1], 2
SHP[1], 16
MDRP[m&gt;RBl], 6
SHP[2], 12
SHP[2], 18
MDAP[R], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="611">
      <instructions>
        <talk>/* five.osf */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 611, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="612">
      <instructions>
        <talk>/* six.osf */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YInterpolate(10,37,0)
YAnchor(37)
YDist(37,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,21) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 612, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 10
IP[], 37
MDAP[R], 37
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="613">
      <instructions>
        <talk>/* seven.osf */

/* Y direction */
YAnchor(0)
YAnchor(5,6)
YShift(5,10)
YDist(5,4)
YShift(4,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 613, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 5, 6
SHP[1], 10
MDRP[m&gt;RBl], 4
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="614">
      <instructions>
        <talk>/* eight.osf */

/* Y direction */
YAnchor(0,11)
YDist(0,29)
YAnchor(42)
YDist(42,14)
YInterpolate(0,35,50,8,21,42)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 614, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 29
MDAP[R], 42
MDRP[m&gt;RBl], 14
SRP2[], 0
SLOOP[], 4
IP[], 35, 50, 8, 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="615">
      <instructions>
        <talk>/* nine.osf */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(35,7)	/* max */

/* YDir: Stroke #0 */
YDist(35,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(35,27,0)
YAnchor(27)
YDist(27,19) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 615, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 35, 7
MDRP[m&gt;RBl], 11
SRP2[], 0
IP[], 27
MDAP[R], 27
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="616">
      <instructions>
        <talk>/* zero.osfzero */

/* Y direction */
YAnchor(4,11)
YShift(4,0)
YLink(4,20,69)
YAnchor(12,7)
YShift(12,2)
YLink(12,28,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 616, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 0
MIRP[m&gt;RBl], 20, 69
MIAP[R], 12, 7
SHP[1], 2
MIRP[m&gt;RBl], 28, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="617">
      <instructions>
        <talk>/* zero.tosf */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,24,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 617, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="618">
      <instructions>
        <talk>/* one.tosf */

/* Min and Max */
YAnchor(4,10)	/* min */
YAnchor(11,6)	/* max */

/* YDir: Stroke #0 */
YDist(11,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,5) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(11,1) /* max */
YShift(4,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 618, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 10
MIAP[R], 11, 6
MDRP[m&gt;RBl], 10
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP1[], 11
SHP[1], 1
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="619">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 608, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="620">
      <instructions>
        <talk>/* three.tosf */

/* Y direction */
YAnchor(0)
YAnchor(25,7)
YDist(25,18)
YInterpolate(0,9,25)
YDist(9,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 620, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 25, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 9
SRP0[], 9
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="621">
      <instructions>
        <talk>/* four.tosf */

/* Y direction */
YAnchor(0)
YAnchor(4)
YAnchor(9,10)
YShift(9,2)
YShift(9,16)
YDist(9,6)
YShift(6,12)
YShift(6,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 621, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
MIAP[R], 9, 10
SHP[1], 2
SHP[1], 16
MDRP[m&gt;RBl], 6
SHP[2], 12
SHP[2], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="622">
      <instructions>
        <talk>/* five.tosf */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(14)
YShift(14,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 622, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 14
SHP[1], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="623">
      <instructions>
        <talk>/* six.tosf */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YInterpolate(10,37,0)
YAnchor(37)
YDist(37,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,21) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 623, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 10
IP[], 37
MDAP[R], 37
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="624">
      <instructions>
        <talk>/* seven.tosf */

/* Y direction */
YAnchor(5,6)
YShift(5,2)
YShift(5,10)
YDist(5,4)
YShift(4,8)

/* X direction */

Smooth()
XDelta(0,1/2@12..25)
XDelta(7,1/2@12..25)
</talk>
        <assembly>/* TT glyph 624, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 6
SHP[1], 2
SHP[1], 10
MDRP[m&gt;RBl], 4
SHP[2], 8
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 0, 32, 12, 25, 72
CALL[], 7, 32, 12, 25, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="625">
      <instructions>
        <talk>/* eight.tosf */

/* Y direction */
YAnchor(0,11)
YDist(0,31)
YAnchor(44)
YDist(44,16)
YInterpolate(0,37,52,8,23,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 625, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 31
MDAP[R], 44
MDRP[m&gt;RBl], 16
SRP2[], 0
SLOOP[], 4
IP[], 37, 52, 8, 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="626">
      <instructions>
        <talk>/* nine.tosf */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(35,7)	/* max */

/* YDir: Stroke #0 */
YDist(35,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(35,27,0)
YAnchor(27)
YDist(27,19) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 626, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 35, 7
MDRP[m&gt;RBl], 11
SRP2[], 0
IP[], 27
MDAP[R], 27
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="627">
      <instructions>
        <talk>/* zero.tosfzero */

/* Y direction */
YAnchor(4,11)
YShift(4,0)
YLink(4,20,69)
YAnchor(12,7)
YShift(12,2)
YLink(12,28,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 627, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 0
MIRP[m&gt;RBl], 20, 69
MIAP[R], 12, 7
SHP[1], 2
MIRP[m&gt;RBl], 28, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="628">
      <instructions>
        <talk>/* 00B9 superscript one */

/* Y direction */
YAnchor(8)
YAnchor(14)
YShift(14,13)
YDist(14,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 628, char 0xb9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 8
MDAP[R], 14
SHP[1], 13
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="629">
      <instructions>
        <talk>/* 00B2 superscript two */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(18)	/* max */

/* YDir: Stroke #0 */
YDist(18,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,26) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 629, char 0xb2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 18
MDRP[m&gt;RBl], 11
SRP0[], 0
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="630">
      <instructions>
        <talk>/* 00B3 superscript three */

/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(36)
YDist(36,29)
YInterpolate(0,19,36)
YDist(19,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 630, char 0xb3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MDAP[R], 36
MDRP[m&gt;RBl], 29
SRP2[], 0
IP[], 19
SRP0[], 19
MDRP[m&gt;RBl], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="631">
      <instructions>
        <talk>/* 2074 superscript four */

/* Y direction */
YAnchor(9,16)
YAnchor(22)
YShift(22,21)
YDist(22,23)
YIPAnchor(9,20,22)
YInterpolate(9,16,20)
YShift(20,2)
YDist(20,17)
YShift(17,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 631, char 0x2074 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 16
MDAP[R], 22
SHP[1], 21
MDRP[m&gt;RBl], 23
SRP2[], 9
IP[], 20
MDAP[R], 20
IP[], 16
SHP[1], 2
MDRP[m&gt;RBl], 17
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="632">
      <instructions>
        <talk>/* fraction */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()
</talk>
        <assembly>/* TT glyph 632, char 0x2044 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 3, 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="633">
      <instructions>
        <talk>/* onehalf */

/* Y direction */
YAnchor(0)
YAnchor(3,17)
YIPAnchor(3,22,0)
YDist(22,15)
YShift(3,44)
YShift(44,39)
YAnchor(4,18)
YDist(4,29)
YShift(4,50)
YShift(50,37)
YDist(50,51)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 633, char 0xbd */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 3, 17
IP[], 22
MDAP[R], 22
MDRP[m&gt;RBl], 15
SRP1[], 3
SHP[1], 44
SRP1[], 44
SHP[1], 39
MIAP[R], 4, 18
MDRP[m&gt;RBl], 29
SHP[1], 50
SRP1[], 50
SHP[1], 37
SRP0[], 50
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="634">
      <instructions>
        <talk>/* onequarter */

/* Y direction */
YAnchor(3,17)
YShift(3,11)
YShift(11,6)
YAnchor(22,18)
YShift(22,0)
YDist(22,23)
YShift(22,27)
YIPAnchor(3,47,22)
YShift(47,4)
YShift(47,29)
YShift(47,17)
YDist(17,18)
YDist(47,44)
YShift(44,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 634, char 0xbc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 3, 17
SHP[1], 11
SRP1[], 11
SHP[1], 6
MIAP[R], 22, 18
SHP[1], 0
MDRP[m&gt;RBl], 23
SHP[1], 27
SRP2[], 3
IP[], 47
MDAP[R], 47
SHP[1], 4
SHP[1], 29
SHP[1], 17
SRP0[], 17
MDRP[m&gt;RBl], 18
SRP0[], 47
MDRP[m&gt;RBl], 44
SHP[2], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="635">
      <instructions>
        <talk>/* threequarters */

/* Y direction */
YAnchor(0)
YAnchor(3,17)
YAnchor(76,18)
YIPAnchor(3,40,4,74,76)
YInterpolate(40,23,69,4)
YDist(40,33)
YDist(4,16)
YShift(74,56)
YDist(74,71)
YShift(71,67)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 635, char 0xbe */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 3, 17
MIAP[R], 76, 18
SRP2[], 3
SLOOP[], 3
IP[], 40, 4, 74
MDAP[R], 40
MDAP[R], 4
MDAP[R], 74
SRP1[], 40
SRP2[], 4
IP[], 23
IP[], 69
SRP0[], 40
MDRP[m&gt;RBl], 33
SRP0[], 4
MDRP[m&gt;RBl], 16
SRP1[], 74
SHP[1], 56
SRP0[], 74
MDRP[m&gt;RBl], 71
SHP[2], 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="636">
      <instructions>
        <talk>/* period */

/* Y direction */
YAnchor(0,19)
YDist(0,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 636, char 0x2e (.) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="637">
      <instructions>
        <talk>/* comma */

/* Y direction */
YAnchor(6,19)
YDist(6,0)
YDist(6,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 637, char 0x2c (,) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 19
MDRP[m&lt;RGr], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="638">
      <instructions>
        <talk>/* colon */

/* Y direction */
YAnchor(12,19)
YDist(12,18)
YDist(18,0)
YDist(0,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 638, char 0x3a (:) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 19
MDRP[M&gt;RBl], 18
MDRP[M&lt;RWh], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="639">
      <instructions>
        <talk>/* semicolon */

/* Y direction */
YAnchor(6,19)
YDist(6,0)
YDist(6,12)
YDist(12,19)
YDist(19,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 639, char 0x3b (;) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 19
MDRP[m&lt;RGr], 0
MDRP[M&gt;RBl], 12
MDRP[M&lt;RWh], 19
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="640">
      <instructions>
        <talk>/* ellipsis */

/* Y direction */
YAnchor(0,19)
YShift(0,12)
YShift(0,24)
YDist(0,6)
YShift(6,18)
YShift(6,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 640, char 0x2026 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 19
SHP[2], 12
SHP[2], 24
MDRP[m&gt;RBl], 6
SHP[2], 18
SHP[2], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="641">
      <instructions>
        <talk>/* exclam */

/* Y direction */
YAnchor(21,19)
YDist(21,27)
YDist(27,20)
YDist(20,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 641, char 0x21 (!) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 19
MDRP[M&gt;RBl], 27
MDRP[M&lt;RWh], 20
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="642">
      <instructions>
        <talk>/* exclamdown */

/* Y direction */
YAnchor(27)
YDist(27,21)
YDist(21,11)
YDist(11,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 642, char 0xa1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 27
MDRP[M&gt;RBl], 21
MDRP[M&lt;RWh], 11
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="643">
      <instructions>
        <talk>/* question */

/* Y direction */
YAnchor(21,16)
YAnchor(36,19)
YDist(36,42)
YDist(42,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 643, char 0x3f (?) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 16
MIAP[R], 36, 19
MDRP[M&gt;RBl], 42
MDRP[m&lt;RWh], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="644">
      <instructions>
        <talk>/* questiondown */

/* Y direction */
YAnchor(0)
YAnchor(42)
YDist(42,36)
YDist(36,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 644, char 0xbf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 42
MDRP[M&gt;RBl], 36
MDRP[m&lt;RWh], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="645">
      <instructions>
        <talk>/* periodcentered */

/* Y direction */
YAnchor(0)
YDist(0,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 645, char 0xb7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="646">
      <instructions>
        <talk>/* bullet */

/* Y direction */
YAnchor(0)
YDist(0,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 646, char 0x2022 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="647">
      <instructions>
        <talk>/* asterisk */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8,16)	/* max, CVT */

Smooth()
</talk>
        <assembly>/* TT glyph 647, char 0x2a (*) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="648">
      <instructions>
        <talk>/* numbersign */

/* VTTTalk Unicode 0x23 (#) */
/* ACT generated Sun Feb 16 14:16:11 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18 */
/* Min and Max */
YAnchor(4,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(5,13,4)
YAnchor(13)
YDist(13,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(5,0,4)
YAnchor(0)
YDist(0,1) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(5,9) /* max */
YShift(4,8) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 648, char 0x23 (#) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 18
MDAP[R], 5
SRP2[], 4
IP[], 13
MDAP[R], 13
MDRP[m&gt;RBl], 12
SRP1[], 5
SRP2[], 4
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 1
SRP1[], 5
SHP[1], 9
SRP1[], 4
SHP[1], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="649">
      <instructions>
        <talk>/* slash */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 649, char 0x2f (/) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="650">
      <instructions>
        <talk>/* backslash */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 650, char 0x5c (\) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="651">
      <instructions>
        <talk>/* 2016 double bar */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,5) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 651, char 0x2016 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 5
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="652">
      <instructions>
        <talk>/* 204A Tironian nota */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YAnchor(24,6)
YShift(24,21)
YShift(24,31)
YDist(24,12)
YShift(12,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 652, char 0x204a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MIAP[R], 24, 6
SHP[1], 21
SHP[1], 31
MDRP[m&gt;RBl], 12
SHP[2], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="653">
      <instructions>
        <talk>/* uni204A.alt1 alternate Tironian nota */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(10,6)	/* max */

/* YDir: Stroke #0 */
YDist(10,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,20) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 653, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 10, 6
MDRP[m&gt;RBl], 9
SRP0[], 0
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="654">
      <instructions>
        <talk>/* uni204A.alt2 another alt Tironian nota */

/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(10,6)	/* max */

/* YDir: Stroke #0 */
YDist(10,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,28,0)
YAnchor(28)
YDist(28,29) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,20) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 654, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 10, 6
MDRP[m&gt;RBl], 9
SRP2[], 0
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="655">
      <instructions>
        <talk>/* parenleft */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 655, char 0x28 (() */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="656">
      <instructions>
        <talk>/* parenright */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 656, char 0x29 ()) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="657">
      <instructions>
        <talk>/* braceleft */

/* Y direction */
YAnchor(0)
YDist(0,42)
YAnchor(18)
YDist(18,19)
YIPAnchor(18,8,0)
YDist(8,9)
YInterpolate(8,31,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 657, char 0x7b ({) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 42
MDAP[R], 18
MDRP[m&gt;RBl], 19
SRP2[], 0
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
IP[], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="658">
      <instructions>
        <talk>/* braceright */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(25)	/* max */
YIPAnchor(0,35,25)
YDist(35,34)
YInterpolate(34,12,35)

Smooth()
</talk>
        <assembly>/* TT glyph 658, char 0x7d (}) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 25
IP[], 35
MDAP[R], 35
MDRP[m&gt;RBl], 34
IP[], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="659">
      <instructions>
        <talk>/* bracketleft */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,5) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 659, char 0x5b ([) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="660">
      <instructions>
        <talk>/* bracketright */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(5,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,1) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 660, char 0x5d (]) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="661">
      <instructions>
        <talk>/* 2329 left angle bracket */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 661, char 0x2329 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="662">
      <instructions>
        <talk>/* 232A right angle bracket */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 662, char 0x232a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="663">
      <instructions>
        <talk>/* hyphen */

/* Y direction */
YAnchor(0)
YDist(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 663, char 0x2d (-) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="664">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 663, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="665">
      <instructions>
        <talk>/* endash */

/* VTTTalk glyph 665, char 0x2013 */
/* GUI generated Fri Apr 17 15:18:25 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 665, char 0x2013 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="666">
      <instructions>
        <talk>/* emdash */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 666, char 0x2014 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="667">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 665, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="668">
      <instructions>
        <talk>/* underscore */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 668, char 0x5f (_) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="669">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 668, 0, 0
OVERLAP[]
OFFSET[R], 668, 0, -229
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="670">
      <instructions>
        <talk>/* 2010 */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 670, char 0x2010 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="671">
      <instructions>
        <talk>/* 2011 */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 671, char 0x2011 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="672">
      <instructions>
        <talk>/* 2015 */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 672, char 0x2015 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="673">
      <instructions>
        <talk>/* hyphen.cap */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 673, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="674">
      <instructions>
        <talk>/* quotesinglbase */

/* Y direction */
YAnchor(7,19)
YDist(7,0)
YDist(7,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 674, char 0x201a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 19
MDRP[m&lt;RGr], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="675">
      <instructions>
        <talk>/* quotedblbase */

/* Y direction */
YAnchor(7,19)
YShift(7,28)
YDist(7,0)
YShift(0,21)
YDist(7,14)
YShift(14,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 675, char 0x201e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 19
SHP[1], 28
MDRP[m&lt;RGr], 0
SHP[2], 21
MDRP[m&gt;RBl], 14
SHP[2], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="676">
      <instructions>
        <talk>/* quotedblleft */

/* Y direction */
YAnchor(0)
YShift(0,21)
YAnchor(7,17)
YShift(7,28)
YInterpolate(0,14,7)
YShift(14,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 676, char 0x201c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 21
MIAP[R], 7, 17
SHP[1], 28
IP[], 14
SRP1[], 14
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="677">
      <instructions>
        <talk>/* quotedblright */

/* Y direction */
YAnchor(0)
YShift(0,21)
YAnchor(14,17)
YShift(14,35)
YInterpolate(0,7,14)
YShift(7,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 677, char 0x201d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 21
MIAP[R], 14, 17
SHP[1], 35
IP[], 7
SRP1[], 7
SHP[1], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="678">
      <instructions>
        <talk>/* quoteleft */

/* Y direction */
YAnchor(0)
YAnchor(7,17)
YInterpolate(0,14,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 678, char 0x2018 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 17
IP[], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="679">
      <instructions>
        <talk>/* quoteright */

/* Y direction */
YAnchor(0)
YAnchor(14,17)
YInterpolate(0,7,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 679, char 0x2019 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 14, 17
IP[], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="680">
      <instructions>
        <talk>/* quotereversed */

/* Y direction */
YAnchor(0)
YAnchor(7,17)
YInterpolate(0,14,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 680, char 0x201b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 17
IP[], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="681">
      <instructions>
        <talk>/* 201F */

/* Y direction */
YAnchor(0)
YShift(0,21)
YAnchor(7)
YShift(7,28)
YInterpolate(0,14,7)
YShift(14,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 681, char 0x201f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 21
MDAP[R], 7
SHP[1], 28
IP[], 14
SRP1[], 14
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="682">
      <instructions>
        <talk>/* guillemotleft */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* Contour #1 */
YShift(3,11) /* max */
YShift(0,8) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 682, char 0xab */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
SHP[1], 11
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="683">
      <instructions>
        <talk>/* guillemotright */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Contour #1 */
YShift(5,13) /* max */
YShift(0,8) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 683, char 0xbb */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 13
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="684">
      <instructions>
        <talk>/* guilsinglleft */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 684, char 0x2039 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="685">
      <instructions>
        <talk>/* guilsinglright */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 685, char 0x203a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="686">
      <instructions>
        <talk>/* quotedbl */

/* Y direction */
YAnchor(0)
YShift(0,17)
YDist(0,8)
YShift(8,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 686, char 0x22 (") */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 17
MDRP[m&gt;RBl], 8
SHP[2], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="687">
      <instructions>
        <talk>/* quotesingle */

/* Y direction */
YAnchor(0)
YDist(0,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 687, char 0x27 (') */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="688">
      <instructions>
        <talk>/* parenleft.sc */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 688, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="689">
      <instructions>
        <talk>/* parenright.sc */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 689, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="690">
      <instructions>
        <talk>/* exclam.sc */

/* Y direction */
YAnchor(21)
YDist(21,27)
YDist(27,20)
YDist(20,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 690, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 21
MDRP[M&gt;RBl], 27
MDRP[M&lt;RWh], 20
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="691">
      <instructions>
        <talk>/* exclamdown.sc */

/* Y direction */
YAnchor(28)
YDist(28,22)
YDist(22,11)
YDist(11,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 691, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 28
MDRP[M&gt;RBl], 22
MDRP[M&lt;RWh], 11
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="692">
      <instructions>
        <talk>/* question.sc */

/* Y direction */
YAnchor(20)
YAnchor(34)
YDist(34,40)
YDist(40,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 692, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 20
MDAP[R], 34
MDRP[M&gt;RBl], 40
MDRP[m&lt;RWh], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="693">
      <instructions>
        <talk>/* questiondown.sc */

/* Y direction */
YAnchor(0)
YAnchor(40)
YDist(40,34)
YDist(34,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 693, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 40
MDRP[M&gt;RBl], 34
MDRP[m&lt;RWh], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="694">
      <instructions>
        <talk>/* numbersign.sc */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(9)	/* max */

/* YDir: Stroke #0 */
YInterpolate(9,11,0)
YAnchor(11)
YDist(11,31) /*perpendicular to the stroke*/
YShift(31,6) /*along bottom edge*/
YShift(31,18) /*along bottom edge*/
YShift(11,7) /*along top edge*/
YShift(11,15) /*along top edge*/

/* YDir: Stroke #1 */
YInterpolate(9,26,0)
YAnchor(26)
YDist(26,28) /*perpendicular to the stroke*/
YShift(26,2) /*along bottom edge*/
YShift(26,22) /*along bottom edge*/
YShift(28,3) /*along top edge*/
YShift(28,19) /*along top edge*/

/* Extreme Max */
YShift(9,14)

/* Extreme Min */
YShift(0,24)

Smooth()

</talk>
        <assembly>/* TT glyph 694, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 9
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 31
SHP[2], 6
SHP[2], 18
SHP[1], 7
SHP[1], 15
SRP1[], 9
SRP2[], 0
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 28
SHP[1], 2
SHP[1], 22
SHP[2], 3
SHP[2], 19
SRP1[], 9
SHP[1], 14
SRP1[], 0
SHP[1], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="695">
      <instructions>
        <talk>/* 27E8 left angle bracket alt */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 695, char 0x27e8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="696">
      <instructions>
        <talk>/* 27E9 right angle bracket alt */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 696, char 0x27e9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="697">
      <instructions>
        <talk>/* 2E4A dotted solidus */

/* Min and Max */
YAnchor(12)	/* min */
YAnchor(14)	/* max */

/* Contour #0 */
YShift(14,6) /* max */
YShift(12,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 697, char 0x2e4a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 12
MDAP[R], 14
SHP[1], 6
SRP1[], 12
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="698">
      <instructions>
        <talk>/* 2e4c medieval comma */

/* Y direction */
YAnchor(0)
YDist(0,6)
YDist(6,12)
YDist(12,13)
YDist(13,19)
YDist(19,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 698, char 0x2e4c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 6
MDRP[M&lt;RWh], 12
MDRP[M&gt;RBl], 13
MDRP[M&lt;RWh], 19
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="699">
      <instructions>
        <talk>/* 2e4d paragraph mark */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,4) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(1,8) /* max */
YShift(0,6) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 699, char 0x2e4d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 4
SHP[1], 8
SRP1[], 0
SHP[1], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="700">
      <instructions>
        <talk>/* 2e4e punctus elevatus */

/* Y direction */
YAnchor(15)
YAnchor(20)
YDist(20,26)
YIPAnchor(15,11,20)
YDist(11,0)
YDist(11,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 700, char 0x2e4e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 15
MDAP[R], 20
MDRP[m&gt;RBl], 26
SRP2[], 15
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="701">
      <instructions>
        <talk>/* punctus interrogativus */

/* Y direction */
YAnchor(19)
YAnchor(44)
YIPAnchor(19,8,14,44)
YDist(8,32)
YDist(14,25)
YDist(44,50)
YDist(50,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 701, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 19
MDAP[R], 44
SRP2[], 19
IP[], 8
IP[], 14
MDAP[R], 8
MDAP[R], 14
SRP0[], 8
MDRP[m&gt;RBl], 32
SRP0[], 14
MDRP[m&gt;RBl], 25
SRP0[], 44
MDRP[M&gt;RBl], 50
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="702">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 702, char 0x20 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="703">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 703, char 0xa0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="704">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 704, char 0x2000 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="705">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 705, char 0x2001 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="706">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 706, char 0x2002 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="707">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 707, char 0x2003 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="708">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 708, char 0x2004 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="709">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 709, char 0x2005 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="710">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 710, char 0x2006 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="711">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 711, char 0x2007 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="712">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 712, char 0x2008 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="713">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 713, char 0x2009 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="714">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 714, char 0x200a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="715">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 715, char 0x200b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="716">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 716, char 0x202f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="717">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 717, char 0x200c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="718">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 718, char 0xd */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="719">
      <instructions>
        <talk>/* Euro */

/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(10)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(10,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,49,0)
YAnchor(49)
YDist(49,48) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(10,44,0)
YAnchor(44)
YDist(44,45) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(0,34) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 719, char 0x20ac */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 10
MDRP[m&gt;RBl], 26
SRP2[], 0
IP[], 49
MDAP[R], 49
MDRP[m&gt;RBl], 48
SRP1[], 10
SRP2[], 0
IP[], 44
MDAP[R], 44
MDRP[m&gt;RBl], 45
SRP0[], 0
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="720">
      <instructions>
        <talk>/* cent */

/* Y direction */
YAnchor(38)
YShift(38,0)
YAnchor(0)
YDist(0,31)
YAnchor(40,4)
YShift(40,8)
YAnchor(8)
YDist(8,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 720, char 0xa2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 38
SHP[1], 0
MDAP[R], 0
MDRP[m&lt;RGr], 31
MIAP[R], 40, 4
SHP[1], 8
MDAP[R], 8
MDRP[m&lt;RWh], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="721">
      <instructions>
        <talk>/* currency */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(17)	/* max */

/* YDir: Stroke #0 */
YDist(17,42) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,34) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(17,20)

/* Extreme Max */
YShift(17,13)

/* Extreme Min */
YShift(0,30)

/* Extreme Min */
YShift(0,3)

Smooth()

</talk>
        <assembly>/* TT glyph 721, char 0xa4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 17
MDRP[m&gt;RBl], 42
SRP0[], 0
MDRP[m&gt;RBl], 34
SRP1[], 17
SHP[1], 20
SHP[1], 13
SRP1[], 0
SHP[1], 30
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="722">
      <instructions>
        <talk>/* dollar */

/* Y direction */
YAnchor(20)
YAnchor(44)
YInterpolate(44,1,45,12,37,53,22,20)
YShift(1,43)
YShift(12,51)
YShift(37,52)
YShift(53,36)
YShift(22,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 722, char 0x24 ($) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 20
MDAP[R], 44
SRP2[], 20
SLOOP[], 6
IP[], 1, 45, 12, 37, 53, 22
SRP1[], 1
SHP[1], 43
SRP1[], 12
SHP[1], 51
SRP1[], 37
SHP[1], 52
SRP1[], 53
SHP[1], 36
SRP1[], 22
SHP[1], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="723">
      <instructions>
        <talk>/* sterling */

/* Y direction */
YAnchor(0)
YShift(0,6)
YDist(0,64)
YDist(0,12)
YShift(12,15)
YShift(12,60)
YAnchor(28,5)
YDist(28,47)
YIPAnchor(28,73,0)
YDist(73,74)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 723, char 0xa3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDRP[m&gt;RBl], 64
MDRP[m&gt;RBl], 12
SHP[2], 15
SHP[2], 60
MIAP[R], 28, 5
MDRP[m&gt;RBl], 47
SRP2[], 0
IP[], 73
MDAP[R], 73
MDRP[m&gt;RBl], 74
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="724">
      <instructions>
        <talk>/* yen */

/* Y direction */
YAnchor(12,8)
YShift(12,0)
YLink(12,13,67)
YAnchor(24,2)
YShift(24,3)
YShift(24,7)
YShift(24,19)
YLink(24,23,67)
YShift(23,18)
YIPAnchor(12,27,31,24)
YDist(27,28)
YShift(31,38)
YDist(31,32)
YShift(32,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 724, char 0xa5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 12, 8
SHP[1], 0
MIRP[m&gt;RBl], 13, 67
MIAP[R], 24, 2
SHP[1], 3
SHP[1], 7
SHP[1], 19
MIRP[m&gt;RBl], 23, 67
SHP[2], 18
SRP2[], 12
IP[], 27
IP[], 31
MDAP[R], 27
MDAP[R], 31
SRP0[], 27
MDRP[m&gt;RBl], 28
SRP1[], 31
SHP[1], 38
SRP0[], 31
MDRP[m&gt;RBl], 32
SHP[2], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="725">
      <instructions>
        <talk>/* dollar.lf */

/* Y direction */
YAnchor(19)
YShift(19,21)
YShift(19,22)
YDist(19,52,&gt;=)
YShift(52,35)
YAnchor(42)
YShift(42,0)
YShift(42,1)
YDist(42,44,&gt;=)
YShift(44,11)
YInterpolate(19,51,50,42)
YShift(51,36)
YShift(50,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 725, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 19
SHP[1], 21
SHP[1], 22
MDRP[m&gt;RBl], 52
SHP[2], 35
MDAP[R], 42
SHP[1], 0
SHP[1], 1
MDRP[m&gt;RBl], 44
SHP[2], 11
SRP2[], 19
IP[], 51
IP[], 50
SRP1[], 51
SHP[1], 36
SRP1[], 50
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="726">
      <instructions>
        <talk>/* dollar.osf */

/* Y direction */
YAnchor(0,11)
YLink(0,10,69,&gt;=)
YDist(0,54)
YAnchor(24,7)
YLink(24,40,69,&gt;=)
YDist(24,56)
YInterpolate(24,48,16,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 726, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 10, 69
MDRP[m&lt;RWh], 54
MIAP[R], 24, 7
MIRP[m&gt;RBl], 40, 69
MDRP[m&lt;RWh], 56
SRP2[], 0
IP[], 48
IP[], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="727">
      <instructions>
        <talk>/* dollar.tosf */

YAnchor(0,11)
YLink(0,10,69,&gt;=)
YDist(0,54)
YAnchor(24,7)
YLink(24,40,69,&gt;=)
YDist(24,56)
YInterpolate(24,48,16,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 727, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 10, 69
MDRP[m&lt;RWh], 54
MIAP[R], 24, 7
MIRP[m&gt;RBl], 40, 69
MDRP[m&lt;RWh], 56
SRP2[], 0
IP[], 48
IP[], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="728">
      <instructions>
        <talk>/* 2215 division slash */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 728, char 0x2215 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="729">
      <instructions>
        <talk>/* plus */

/* Y direction */
YAnchor(5)
YAnchor(11,18)
YIPAnchor(5,2,11)
YShift(2,10)
YDist(2,3,&gt;=)
YShift(3,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 729, char 0x2b (+) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MIAP[R], 11, 18
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 10
MDRP[m&gt;RBl], 3
SHP[2], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="730">
      <instructions>
        <talk>/* minus */

/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 730, char 0x2212 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="731">
      <instructions>
        <talk>/* multiply */

/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(4)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* Extreme Max */
YShift(4,6)

/* Extreme Min */
YShift(0,10)

Smooth()

</talk>
        <assembly>/* TT glyph 731, char 0xd7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 4
SHP[1], 6
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="732">
      <instructions>
        <talk>/* divide */

/* Y direction */
YAnchor(4)
YDist(4,10,&gt;=)
YAnchor(22)
YDist(22,16,&gt;=)
YIPAnchor(22,0,4)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 732, char 0xf7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RBl], 10
MDAP[R], 22
MDRP[m&gt;RBl], 16
SRP2[], 4
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="733">
      <instructions>
        <talk>/* equal */

/* Y direction */
YAnchor(4)
YDist(4,5,&gt;=)
YNoRound(0)
YDist(5,0,&gt;=)
YDist(0,1,&gt;=)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 733, char 0x3d (=) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[M&gt;RBl], 5
MDRP[M&gt;rWh], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="734">
      <instructions>
        <talk>/* greater */

/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(4)	/* max */

Smooth()</talk>
        <assembly>/* TT glyph 734, char 0x3e (&gt;) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="735">
      <instructions>
        <talk>/* less */

YAnchor(0,18)	/* min, CVT */
YAnchor(3)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 735, char 0x3c (&lt;) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="736">
      <instructions>
        <talk>/* plusminus */

/* Y direction */
YAnchor(5)
YAnchor(12,18)
YDist(12,13,&gt;=)
YIPAnchor(5,3,12)
YShift(3,7)
YDist(3,2,&gt;=)
YShift(2,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 736, char 0xb1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MIAP[R], 12, 18
MDRP[m&gt;RBl], 13
SRP2[], 5
IP[], 3
MDAP[R], 3
SHP[1], 7
MDRP[m&gt;RBl], 2
SHP[2], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="737">
      <instructions>
        <talk>/* asciitilde */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,15)
YMove(1/4,15)
YShift(15,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 737, char 0x7e (~) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDRP[m&gt;RBl], 15
SHPIX[], 15, 16
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="738">
      <instructions>
        <talk>/* logicalnot */

/* Y direction */
YAnchor(3)
YDist(3,2,&gt;=)
YAnchor(5,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 738, char 0xac */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RBl], 2
MIAP[R], 5, 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="739">
      <instructions>
        <talk>/* asciicircum */

YAnchor(0)	/* min */
YAnchor(1,16)	/* max, CVT */

YShift(0,4)

Smooth()
</talk>
        <assembly>/* TT glyph 739, char 0x5e (^) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 1, 16
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="740">
      <instructions>
        <talk>/* 03BC mu */

/* Y direction */
YAnchor(0)
YAnchor(22,19)
YDist(22,37)
YShift(22,46)
YAnchor(29)
YShift(29,26)
YShift(29,48)
YShift(29,51)
YDist(29,28)
YShift(28,50)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 740, char 0xb5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 22, 19
MDRP[m&gt;RBl], 37
SHP[1], 46
MDAP[R], 29
SHP[1], 26
SHP[1], 48
SHP[1], 51
MDRP[m&gt;RBl], 28
SHP[2], 50
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="741">
      <instructions>
        <talk>/* percent */

/* Y direction */
YAnchor(8,17)
YDist(8,24)
YShift(8,35)
YAnchor(37,19)
YShift(37,33)
YDist(37,53)
YIPAnchor(8,45,0,37)
YDist(45,61)
YDist(0,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 741, char 0x25 (%) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 17
MDRP[m&gt;RBl], 24
SHP[1], 35
MIAP[R], 37, 19
SHP[1], 33
MDRP[m&gt;RBl], 53
SRP2[], 8
IP[], 45
IP[], 0
MDAP[R], 45
MDAP[R], 0
SRP0[], 45
MDRP[m&gt;RBl], 61
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="742">
      <instructions>
        <talk>/* therefore */

/* Y direction */
YAnchor(12)
YShift(12,24)
YDist(12,18)
YShift(18,30)
YDist(18,0,&gt;=)
YDist(0,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 742, char 0x2234 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 12
SHP[1], 24
MDRP[M&gt;RBl], 18
SHP[2], 30
MDRP[M&gt;RWh], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="743">
      <instructions>
        <talk>/* 25CC dotted circle */

/* Min and Max */
YAnchor(60)	/* min */
YAnchor(162)	/* max */

/* Contour #0 */
YShift(162,6) /* max */
YShift(60,0) /* min */

/* Contour #1 */
YShift(162,18) /* max */
YShift(60,12) /* min */

/* Contour #2 */
YShift(162,30) /* max */
YShift(60,24) /* min */

/* Contour #3 */
YShift(162,42) /* max */
YShift(60,36) /* min */

/* Contour #4 */
YShift(162,54) /* max */
YShift(60,48) /* min */

/* Contour #6 */
YShift(162,78) /* max */
YShift(60,72) /* min */

/* Contour #7 */
YShift(162,90) /* max */
YShift(60,84) /* min */

/* Contour #8 */
YShift(162,102) /* max */
YShift(60,96) /* min */

/* Contour #9 */
YShift(162,114) /* max */
YShift(60,108) /* min */

/* Contour #10 */
YShift(162,126) /* max */
YShift(60,120) /* min */

/* Contour #11 */
YShift(162,138) /* max */
YShift(60,132) /* min */

/* Contour #12 */
YShift(162,150) /* max */
YShift(60,144) /* min */

/* Contour #14 */
YShift(162,174) /* max */
YShift(60,168) /* min */

/* Contour #15 */
YShift(162,186) /* max */
YShift(60,180) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 743, char 0x25cc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 60
MDAP[R], 162
SHP[1], 6
SRP1[], 60
SHP[1], 0
SRP1[], 162
SHP[1], 18
SRP1[], 60
SHP[1], 12
SRP1[], 162
SHP[1], 30
SRP1[], 60
SHP[1], 24
SRP1[], 162
SHP[1], 42
SRP1[], 60
SHP[1], 36
SRP1[], 162
SHP[1], 54
SRP1[], 60
SHP[1], 48
SRP1[], 162
SHP[1], 78
SRP1[], 60
SHP[1], 72
SRP1[], 162
SHP[1], 90
SRP1[], 60
SHP[1], 84
SRP1[], 162
SHP[1], 102
SRP1[], 60
SHP[1], 96
SRP1[], 162
SHP[1], 114
SRP1[], 60
SHP[1], 108
SRP1[], 162
SHP[1], 126
SRP1[], 60
SHP[1], 120
SRP1[], 162
SHP[1], 138
SRP1[], 60
SHP[1], 132
SRP1[], 162
SHP[1], 150
SRP1[], 60
SHP[1], 144
SRP1[], 162
SHP[1], 174
SRP1[], 60
SHP[1], 168
SRP1[], 162
SHP[1], 186
SRP1[], 60
SHP[1], 180
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="744">
      <instructions>
        <talk>/* at */

/* Y direction */
YAnchor(0,19)
YDist(0,65)
YAnchor(10,16)
YDist(10,55)
YIPAnchor(10,35,27,0)
YDist(35,82)
YShift(27,18)
YDist(27,72)
YShift(72,47)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 744, char 0x40 (@) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[m&gt;RBl], 65
MIAP[R], 10, 16
MDRP[m&gt;RBl], 55
SRP2[], 0
IP[], 35
IP[], 27
MDAP[R], 35
MDAP[R], 27
SRP0[], 35
MDRP[m&gt;RBl], 82
SRP1[], 27
SHP[1], 18
SRP0[], 27
MDRP[m&gt;RBl], 72
SHP[2], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="745">
      <instructions>
        <talk>/* ampersand */

/* Y direction */
YAnchor(0,19)
YDist(0,64)
YShift(0,36)
YDist(36,29)
YAnchor(49,16)
YDist(49,15)
YIPAnchor(0,86,49)
YShift(86,73)
YDist(86,85)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 745, char 0x26 (&amp;) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[m&gt;RBl], 64
SHP[1], 36
SRP0[], 36
MDRP[m&gt;RBl], 29
MIAP[R], 49, 16
MDRP[m&gt;RBl], 15
SRP2[], 0
IP[], 86
MDAP[R], 86
SHP[1], 73
MDRP[m&gt;RBl], 85
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="746">
      <instructions>
        <talk>/* paragraph */

/* Y direction */
YAnchor(12)
YShift(12,0)
YDist(12,13)
YShift(12,18)
YAnchor(23)
YShift(23,10)
YShift(23,19)
YDist(23,22)
YInterpolate(12,2,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 746, char 0xb6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 12
SHP[1], 0
MDRP[m&gt;RBl], 13
SHP[1], 18
MDAP[R], 23
SHP[1], 10
SHP[1], 19
MDRP[m&gt;RBl], 22
SRP2[], 12
IP[], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="747">
      <instructions>
        <talk>/* section */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(63,16)	/* max, CVT */

/* YDir: Stroke #0 */
YDist(63,79) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,16) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 747, char 0xa7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 63, 16
MDRP[m&gt;RBl], 79
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="748">
      <instructions>
        <talk>/* copyright */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YDist(10,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,48,0)
YAnchor(48)
YDist(48,60) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(10,40,0)
YAnchor(40)
YDist(40,68) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(0,20) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 748, char 0xa9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
MDRP[m&gt;RBl], 30
SRP2[], 0
IP[], 48
MDAP[R], 48
MDRP[m&gt;RBl], 60
SRP1[], 10
SRP2[], 0
IP[], 40
MDAP[R], 40
MDRP[m&gt;RBl], 68
SRP0[], 0
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="749">
      <instructions>
        <talk>/* registered */

/* Y direction */
YAnchor(0)
YDist(0,20)
YAnchor(10)
YDist(10,30)
YInterpolate(20,93,53,95,30)
YShift(93,40)
YShift(93,67)
YDist(93,92)
YDist(53,59)
YShift(95,69)
YDist(95,94)
YShift(94,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 749, char 0xae */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 20
MDAP[R], 10
MDRP[m&gt;RBl], 30
SRP1[], 20
SLOOP[], 3
IP[], 93, 53, 95
SRP1[], 93
SHP[1], 40
SHP[1], 67
SRP0[], 93
MDRP[m&gt;RBl], 92
SRP0[], 53
MDRP[m&gt;RBl], 59
SRP1[], 95
SHP[1], 69
SRP0[], 95
MDRP[m&gt;RBl], 94
SHP[2], 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="750">
      <instructions>
        <talk>/* trademark */

/* Y direction */
YAnchor(13)
YShift(13,38)
YShift(13,47)
YShift(13,57)
YShift(13,75)
YDist(13,29)
YShift(29,1)
YShift(29,46)
YShift(29,76)
YAnchor(67)
YShift(67,31)
YShift(67,36)
YShift(67,37)
YShift(67,41)
YShift(67,62)
YShift(67,68)
YDist(67,66)
YShift(66,35)
YShift(66,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 750, char 0x2122 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 13
SHP[1], 38
SHP[1], 47
SHP[1], 57
SHP[1], 75
MDRP[m&gt;RBl], 29
SHP[2], 1
SHP[2], 46
SHP[2], 76
MDAP[R], 67
SHP[1], 31
SHP[1], 36
SHP[1], 37
SHP[1], 41
SHP[1], 62
SHP[1], 68
MDRP[m&gt;RBl], 66
SHP[2], 35
SHP[2], 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="751">
      <instructions>
        <talk>/* degree */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YDist(6,21) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 751, char 0xb0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="752">
      <instructions>
        <talk>/* bar */

YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 752, char 0x7c (|) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="753">
      <instructions>
        <talk>/* brokenbar */

/* Y direction */
YAnchor(1,16)
YDist(1,3)
YDist(3,5)
YDist(5,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 753, char 0xa6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 1, 16
MDRP[M&gt;RBl], 3
MDRP[M&lt;RWh], 5
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="754">
      <instructions>
        <talk>/* dagger */

/* Y direction */
YAnchor(0)
YAnchor(45,17)
YIPAnchor(0,11,45)
YShift(11,79)
YDist(11,35)
YShift(35,57)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 754, char 0x2020 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 45, 17
IP[], 11
MDAP[R], 11
SHP[1], 79
MDRP[m&gt;RBl], 35
SHP[2], 57
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="755">
      <instructions>
        <talk>/* daggerdbl */

/* Y direction */
YAnchor(0)
YAnchor(74,17)
YIPAnchor(0,11,63,74)
YShift(11,137)
YDist(11,32)
YShift(32,115)
YShift(63,86)
YDist(63,41)
YShift(41,107)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 755, char 0x2021 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 74, 17
IP[], 11
IP[], 63
MDAP[R], 11
MDAP[R], 63
SRP1[], 11
SHP[1], 137
SRP0[], 11
MDRP[m&gt;RBl], 32
SHP[2], 115
SRP1[], 63
SHP[1], 86
SRP0[], 63
MDRP[m&gt;RBl], 41
SHP[2], 107
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="756">
      <instructions>
        <talk>/* 02DE rhotic hook */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(11)	/* max */

/* YDir: Stroke #0 */
YDist(0,18) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 756, char 0x2de */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
SRP0[], 0
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="757">
      <instructions>
        <talk>/* 02E5 */

/* Y direction */
YAnchor(0)
YAnchor(5)
YShift(5,1)
YDist(5,4,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 757, char 0x2e5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 1
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="758">
      <instructions>
        <talk>/* 02E6 */

/* Y direction */
YAnchor(0)
YAnchor(1)
YIPAnchor(1,5,0)
YDist(5,4,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 758, char 0x2e6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 5
MDAP[R], 5
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="759">
      <instructions>
        <talk>/* 02E7 */

/* Y direction */
YAnchor(0)
YAnchor(1)
YIPAnchor(1,4,0)
YDist(4,5,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 759, char 0x2e7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="760">
      <instructions>
        <talk>/* 02E8 */

/* Y direction */
YAnchor(0)
YAnchor(1)
YIPAnchor(1,4,0)
YDist(4,5,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 760, char 0x2e8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="761">
      <instructions>
        <talk>/* 02E9 */

/* Y direction */
YAnchor(1)
YAnchor(4)
YShift(4,0)
YDist(4,5,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 761, char 0x2e9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 4
SHP[1], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="762">
      <instructions>
        <talk>/* ampersand.sc */

/* Y direction */
YAnchor(0)
YDist(0,55)
YShift(0,51)
YAnchor(51)
YDist(51,46)
YAnchor(14)
YDist(14,75)
YInterpolate(0,64,70,33,14)
YShift(64,7)
YShift(70,20)
YDist(33,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 762, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 55
SHP[1], 51
MDAP[R], 51
MDRP[m&gt;RBl], 46
MDAP[R], 14
MDRP[m&gt;RBl], 75
SRP2[], 0
SLOOP[], 3
IP[], 64, 70, 33
SRP1[], 64
SHP[1], 7
SRP1[], 70
SHP[1], 20
SRP0[], 33
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="763">
      <instructions>
        <talk>/* percent.sc */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* YDir: Stroke #0 */
YInterpolate(2,11,0)
YAnchor(11)
YDist(11,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(2,37,0)
YAnchor(37)
YDist(37,50) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(2,4,0)
YAnchor(4)
YDist(4,18) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YInterpolate(2,30,0)
YAnchor(30)
YDist(30,44) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 763, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 24
SRP1[], 2
SRP2[], 0
IP[], 37
MDAP[R], 37
MDRP[m&gt;RBl], 50
SRP1[], 2
SRP2[], 0
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 18
SRP1[], 2
SRP2[], 0
IP[], 30
MDAP[R], 30
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="764">
      <instructions>
        <talk>/* 02E0 superscript gamma */

/* Y direction */
YAnchor(0)
YDist(0,20)
YAnchor(36)
YShift(36,9)
YShift(36,12)
YShift(36,41)
YDist(36,35)
YShift(35,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 764, char 0x2e0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 20
MDAP[R], 36
SHP[1], 9
SHP[1], 12
SHP[1], 41
MDRP[m&gt;RBl], 35
SHP[2], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="765">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 679, 11, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="766">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 680, 105, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="767">
      <instructions>
        <talk>/* 02C1 */

/* Y direction */
YAnchor(8)
YDist(8,23)
YAnchor(32)
YShift(32,0)
YDist(32,33)
YInterpolate(8,29,32)
YDist(29,2,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 767, char 0x2c1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RBl], 23
MDAP[R], 32
SHP[1], 0
MDRP[m&gt;RBl], 33
SRP2[], 8
IP[], 29
SRP0[], 29
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="768">
      <instructions>
        <talk>/* 02C8 */

YAnchor(0)
YDist(0,1,&gt;=)

Smooth()

</talk>
        <assembly>/* TT glyph 768, char 0x2c8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="769">
      <instructions>
        <talk>/* 02CC */

YAnchor(0)
YDist(0,1,&gt;=)

Smooth()</talk>
        <assembly>/* TT glyph 769, char 0x2cc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="770">
      <instructions>
        <talk>/* 02D0 IPA length */

YAnchor(4)
YDist(4,5)
YDist(5,0)
YDist(0,1)

Smooth()

</talk>
        <assembly>/* TT glyph 770, char 0x2d0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[M&gt;RBl], 5
MDRP[M&lt;RWh], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="771">
      <instructions>
        <talk>/* 02D1 */

YAnchor(0)
YDist(0,1)

Smooth()
</talk>
        <assembly>/* TT glyph 771, char 0x2d1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="772">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 818, -741, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="773">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 819, -750, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="774">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 820, -789, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="775">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 821, -715, -18
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="776">
      <instructions>
        <talk>/* 030B hungarumlaut */

YAnchor(3)
YShift(3,7)
YDist(3,1)
YShift(1,5)

Smooth()

</talk>
        <assembly>/* TT glyph 776, char 0x30b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 7
MDRP[m&gt;RBl], 1
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="777">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 837, -747, -60
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="778">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 822, -734, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="779">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 823, -833, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="780">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 824, -807, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="781">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 825, -806, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="782">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 826, -727, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="783">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 827, -733, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="784">
      <instructions>
        <talk>/* 0305 combining bar */

YAnchor(0)
YDist(0,1,&gt;=)

Smooth()

</talk>
        <assembly>/* TT glyph 784, char 0x305 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="785">
      <instructions>
        <talk>/* 0312 */

YAnchor(0)
YDist(0,16)
YDist(16,7)

Smooth()

</talk>
        <assembly>/* TT glyph 785, char 0x312 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 16
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="786">
      <instructions>
        <talk>/* 0315 */

YAnchor(13)
YDist(13,6)
YDist(6,0)

Smooth()

</talk>
        <assembly>/* TT glyph 786, char 0x315 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 13
MDRP[M&gt;RBl], 6
MDRP[m&lt;RGr], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="787">
      <instructions>
        <talk>/* 0318 */

/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,5,&gt;=)
YShift(5,1)

Smooth()

</talk>
        <assembly>/* TT glyph 787, char 0x318 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="788">
      <instructions>
        <talk>/* 0319 */

/* Y direction */
YAnchor(4)
YShift(4,3)
YDist(4,5,&gt;=)
YShift(5,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 788, char 0x319 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 3
MDRP[m&gt;RBl], 5
SHP[2], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="789">
      <instructions>
        <talk>/* 031A */

/* Y direction */
YAnchor(0)
YAnchor(3)
YDist(3,2,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 789, char 0x31a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="790">
      <instructions>
        <talk>/* 031C */

YAnchor(0)
YDist(0,15)
YAnchor(8)
YDist(8,9)

Smooth()</talk>
        <assembly>/* TT glyph 790, char 0x31c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 15
MDAP[R], 8
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="791">
      <instructions>
        <talk>/* 031D */

YAnchor(4)
YDist(4,5,&gt;=)
YShift(5,1)

Smooth()</talk>
        <assembly>/* TT glyph 791, char 0x31d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="792">
      <instructions>
        <talk>/* 031E */

YAnchor(5)
YDist(5,4,&gt;=)
YShift(4,0)

Smooth()

</talk>
        <assembly>/* TT glyph 792, char 0x31e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RBl], 4
SHP[2], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="793">
      <instructions>
        <talk>/* 031F */

YAnchor(4)
YShift(4,0)
YDist(4,5,&gt;=)
YShift(5,1)

Smooth()

</talk>
        <assembly>/* TT glyph 793, char 0x31f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="794">
      <instructions>
        <talk>/* 0320 */

YAnchor(1)
YShift(1,6)
YShift(1,11)
YDist(1,0,&gt;=)
YShift(0,8)
YShift(0,9)

Smooth()
</talk>
        <assembly>/* TT glyph 794, char 0x320 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 6
SHP[1], 11
MDRP[m&gt;RBl], 0
SHP[2], 8
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="795">
      <instructions>
        <talk>/* dotbelowcomb */

YAnchor(6)
YDist(6,0)

Smooth()
</talk>
        <assembly>/* TT glyph 795, char 0x323 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="796">
      <instructions>
        <talk>/* 0324 */

YAnchor(6)
YShift(6,18)
YDist(6,0)
YShift(0,12)

Smooth()
</talk>
        <assembly>/* TT glyph 796, char 0x324 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 6
SHP[1], 18
MDRP[m&gt;RBl], 0
SHP[2], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="797">
      <instructions>
        <talk>/* 0325 */

YAnchor(7)
YDist(7,20)
YDist(20,14)
YDist(14,0)

Smooth()
</talk>
        <assembly>/* TT glyph 797, char 0x325 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 7
MDRP[M&gt;RBl], 20
MDRP[M&lt;RWh], 14
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="798">
      <instructions>
        <talk>/* 0326 */

YAnchor(14)
YDist(14,7)
YDist(7,0)

Smooth()

</talk>
        <assembly>/* TT glyph 798, char 0x326 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 14
MDRP[M&gt;RBl], 7
MDRP[m&lt;RGr], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="799">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 828, -801, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="800">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 829, -816, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="801">
      <instructions>
        <talk>/* 0329 */

YAnchor(1)
YDist(1,0)

Smooth()
</talk>
        <assembly>/* TT glyph 801, char 0x329 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="802">
      <instructions>
        <talk>/* 032A */

YAnchor(1)
YDist(1,6)
YDist(6,7)
YShift(7,4)

Smooth()

</talk>
        <assembly>/* TT glyph 802, char 0x32a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[M&gt;RBl], 6
MDRP[m&gt;RBl], 7
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="803">
      <instructions>
        <talk>/* 032C */

YAnchor(0)	/* min */
YAnchor(5)	/* max */

YShift(5,2)

Smooth()

</talk>
        <assembly>/* TT glyph 803, char 0x32c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="804">
      <instructions>
        <talk>/* 032F */

YAnchor(0)	/* min */
YAnchor(2)	/* max */
YDist(2,8)
YShift(0,5)

Smooth()</talk>
        <assembly>/* TT glyph 804, char 0x32f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
MDRP[m&gt;RBl], 8
SRP1[], 0
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="805">
      <instructions>
        <talk>/* VTTTalk glyph 805, char 0x330 */
/* GUI generated Sat Apr 25 07:37:42 2020 */

/* Y direction */
YAnchor(0)
YShift(0,19)
YDist(0,6,&gt;=)
YShift(6,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 805, char 0x330 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 19
MDRP[m&gt;RGr], 6
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="806">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 826, -727, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="807">
      <instructions>
        <talk>/* 0335 */

YAnchor(0)
YLink(0,1,88,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 807, char 0x335 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="808">
      <instructions>
        <talk>/* 0337 */

YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 808, char 0x337 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="809">
      <instructions>
        <talk>/* 0338 */

YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 809, char 0x338 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="810">
      <instructions>
        <talk>/* 0339 */

YAnchor(0)
YDist(0,1)
YAnchor(8)
YDist(8,7)

Smooth()
</talk>
        <assembly>/* TT glyph 810, char 0x339 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 8
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="811">
      <instructions>
        <talk>/* 033A */

YAnchor(0)
YDist(0,3)
YDist(3,1)
YShift(1,6)

Smooth()

</talk>
        <assembly>/* TT glyph 811, char 0x33a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 3
MDRP[m&gt;RBl], 1
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="812">
      <instructions>
        <talk>/* 033B */

YAnchor(1)
YDist(1,7)
YDist(7,4)
YDist(4,0)

Smooth()
</talk>
        <assembly>/* TT glyph 812, char 0x33b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[M&gt;RBl], 7
MDRP[M&lt;RWh], 4
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="813">
      <instructions>
        <talk>/* 033C */

YAnchor(9)
YShift(9,3)
YDist(9,17)
YShift(17,24)
YDist(17,20)
YShift(20,14)
YShift(20,27)

Smooth()
</talk>
        <assembly>/* TT glyph 813, char 0x33c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
MDRP[M&gt;RBl], 17
SHP[2], 24
MDRP[m&lt;RWh], 20
SHP[2], 14
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="814">
      <instructions>
        <talk>/* 033D */

YAnchor(0)	/* min */
YAnchor(1)	/* max */

YShift(1,6) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 814, char 0x33d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="815">
      <instructions>
        <talk>/* 035B */

YAnchor(3)
YShift(3,11)
YDist(3,8)
YShift(8,5)

Smooth()</talk>
        <assembly>/* TT glyph 815, char 0x35b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 11
MDRP[m&gt;RBl], 8
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="816">
      <instructions>
        <talk>/* 035C */

YAnchor(0)
YAnchor(5)
YDist(0,8)
YShift(5,11)

Smooth()
</talk>
        <assembly>/* TT glyph 816, char 0x35c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SRP0[], 0
MDRP[m&gt;RBl], 8
SRP1[], 5
SHP[1], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="817">
      <instructions>
        <talk>/* 0361 */

YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()
</talk>
        <assembly>/* TT glyph 817, char 0x361 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="818">
      <instructions>
        <talk>/* dieresis */

YAnchor(6,16)
YShift(6,18)
YDist(6,0)
YShift(0,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 818, char 0xa8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 16
SHP[1], 18
MDRP[m&gt;RBl], 0
SHP[2], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="819">
      <instructions>
        <talk>/* dotaccent */

YAnchor(6,16)
YDist(6,0)

Smooth()
</talk>
        <assembly>/* TT glyph 819, char 0x2d9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 16
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="820">
      <instructions>
        <talk>/* grave */

YAnchor(0)
YDist(0,2)

Smooth()

</talk>
        <assembly>/* TT glyph 820, char 0x60 (`) */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="821">
      <instructions>
        <talk>/* acute */

YAnchor(0)
YDist(0,2)

Smooth()

</talk>
        <assembly>/* TT glyph 821, char 0xb4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="822">
      <instructions>
        <talk>/* circumflex */

YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Min */
YShift(0,5)

Smooth()

</talk>
        <assembly>/* TT glyph 822, char 0x2c6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="823">
      <instructions>
        <talk>/* caron */

YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Max */
YShift(2,5)

Smooth()
</talk>
        <assembly>/* TT glyph 823, char 0x2c7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="824">
      <instructions>
        <talk>/* breve */

YAnchor(0)
YDist(0,6,&gt;=)
YDist(6,2,&gt;=)
YShift(2,10)

Smooth()

</talk>
        <assembly>/* TT glyph 824, char 0x2d8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 6
MDRP[m&gt;RGr], 2
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="825">
      <instructions>
        <talk>/* ring */

YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,20) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 825, char 0x2da */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 20
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="826">
      <instructions>
        <talk>/* VTTTalk glyph 826, char 0x2dc tilde */
/* GUI generated Sat Apr 25 07:38:47 2020 */

/* Y direction */
YAnchor(0)
YShift(0,19)
YDist(0,6,&gt;=)
YShift(6,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 826, char 0x2dc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 19
MDRP[m&gt;RGr], 6
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="827">
      <instructions>
        <talk>/* macron */

YAnchor(0)
YLink(0,1,88,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 827, char 0xaf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="828">
      <instructions>
        <talk>/* cedilla */

YAnchor(0)	/* min */
YAnchor(20,18)	/* max, CVT */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 828, char 0xb8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 20, 18
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="829">
      <instructions>
        <talk>/* ogonek */

YAnchor(0)	/* min */
YAnchor(6)	/* max */
YDist(0,11)

Smooth()
</talk>
        <assembly>/* TT glyph 829, char 0x2db */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SRP0[], 0
MDRP[m&gt;RBl], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="830">
      <instructions>
        <talk>/* 1DCE */

YAnchor(0)	/* min */
YAnchor(13)	/* max */
YDist(13,6)

Smooth()

</talk>
        <assembly>/* TT glyph 830, char 0x1dce */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="831">
      <instructions>
        <talk>/* runedot */

YAnchor(0)
YDist(0,6)

Smooth()

</talk>
        <assembly>/* TT glyph 831, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="832">
      <instructions>
        <talk>/* thorncross */

YAnchor(0)	/* min */
YAnchor(4)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 832, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="833">
      <instructions>
        <talk>/* 1DCF */

YAnchor(3)
YShift(3,0)
YDist(3,8)
YShift(8,5)

Smooth()
</talk>
        <assembly>/* TT glyph 833, char 0x1dcf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
MDRP[m&gt;RBl], 8
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="834">
      <instructions>
        <talk>/* 1DD1 */

YAnchor(0)
YDist(0,1)
YDist(0,22)
YAnchor(14)
YDist(14,7)
YShift(14,36)
YAnchor(36)

Smooth()
</talk>
        <assembly>/* TT glyph 834, char 0x1dd1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDRP[m&gt;RBl], 22
MDAP[R], 14
MDRP[m&gt;RBl], 7
SHP[1], 36
MDAP[R], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="835">
      <instructions>
        <talk>/* 1DD2 */

YAnchor(0)
YAnchor(23)
YDist(23,7)
YInterpolate(0,17,23)

Smooth()

</talk>
        <assembly>/* TT glyph 835, char 0x1dd2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 23
MDRP[m&gt;RBl], 7
SRP2[], 0
IP[], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="836">
      <instructions>
        <talk>/* uni0328.alt alternate ogonek */

YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 836, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="837">
      <instructions>
        <talk>/* caron.alt */

YAnchor(10)
YDist(10,6)

Smooth()

</talk>
        <assembly>/* TT glyph 837, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 10
MDRP[m&lt;RGr], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="838">
      <instructions>
        <talk>/* uni0328.case.alt */

YAnchor(0)
YDist(0,15)
YAnchor(9,18)
YDist(9,8)

Smooth()
</talk>
        <assembly>/* TT glyph 838, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 15
MIAP[R], 9, 18
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="839">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 852, -1041, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="840">
      <instructions>
        <talk>/* uni0307.case dotaccentcomb.case */

YAnchor(0)
YDist(0,6)

Smooth()

</talk>
        <assembly>/* TT glyph 840, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="841">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 853, -1079, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="842">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 854, -926, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="843">
      <instructions>
        <talk>/* uni030B.case */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,2)
YShift(2,6)

Smooth()
</talk>
        <assembly>/* TT glyph 843, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDRP[m&gt;RBl], 2
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="844">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 855, -1010, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="845">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 856, -905, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="846">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 824, -988, 460
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="847">
      <instructions>
        <talk>/* uni030A.case */

YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,20) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 847, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 20
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="848">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 857, -1012, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="849">
      <instructions>
        <talk></talk>
        <assembly>OVERLAP[]
OFFSET[R], 858, -983, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="850">
      <instructions>
        <talk>/* uni0337.case */

YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 850, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="851">
      <instructions>
        <talk>/* uni0338.case */

YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 851, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="852">
      <instructions>
        <talk>/* dieresis.case */

YAnchor(0)
YShift(0,12)
YDist(0,6)
YShift(6,18)

Smooth()

</talk>
        <assembly>/* TT glyph 852, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
MDRP[m&gt;RBl], 6
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="853">
      <instructions>
        <talk>/* grave.case */

YAnchor(0)
YDist(0,2)

Smooth()
</talk>
        <assembly>/* TT glyph 853, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="854">
      <instructions>
        <talk>/* acute.case */

YAnchor(0)
YDist(0,2)

Smooth()
</talk>
        <assembly>/* TT glyph 854, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="855">
      <instructions>
        <talk>/* circumflex.case */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Min */
YShift(0,5)

Smooth()
</talk>
        <assembly>/* TT glyph 855, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="856">
      <instructions>
        <talk>/* caron.case */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Max */
YShift(2,4)

Smooth()

</talk>
        <assembly>/* TT glyph 856, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="857">
      <instructions>
        <talk>/* tilde.case */

/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,17)
YShift(17,11)

Smooth()

</talk>
        <assembly>/* TT glyph 857, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDRP[m&gt;RBl], 17
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="858">
      <instructions>
        <talk>/* macron.case */

YAnchor(0)
YLink(0,1,88,&gt;=)


Smooth()
</talk>
        <assembly>/* TT glyph 858, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="859">
      <instructions>
        <talk>/* uni1DCE.case */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(13)	/* max */

/* YDir: Stroke #0 */
YDist(13,6) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 859, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="860">
      <instructions>
        <talk>/* uni0305.high */

YAnchor(0)
YLink(0,1,88,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 860, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="861">
      <instructions>
        <talk>/* uni0361.high */

/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()
</talk>
        <assembly>/* TT glyph 861, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="862">
      <instructions>
        <talk>/* uni035C.low */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(0,8) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,11)

Smooth()

</talk>
        <assembly>/* TT glyph 862, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SRP0[], 0
MDRP[m&gt;RBl], 8
SRP1[], 5
SHP[1], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="863">
      <instructions>
        <talk>/* uni0305.med */

YAnchor(0)
YLink(0,1,88,&gt;=)

Smooth()

</talk>
        <assembly>/* TT glyph 863, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="864">
      <instructions>
        <talk>/* uni0361.med */

/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()

</talk>
        <assembly>/* TT glyph 864, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="865">
      <instructions>
        <talk>/* uni0335.sc */

YAnchor(0)
YLink(0,1,88,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 865, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="866">
      <instructions>
        <talk>/* uni0338.sc */

YAnchor(0)
YAnchor(2)

Smooth()
</talk>
        <assembly>/* TT glyph 866, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="867">
      <instructions>
        <talk>/* uni0335.wide */

YAnchor(0)
YLink(0,1,88,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 867, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="868">
      <instructions>
        <talk>/* 1DD5 */

YAnchor(0)
YDist(0,16)
YAnchor(39)
YDist(39,27)
YInterpolate(0,7,39)
YShift(7,8)
YAnchor(43)
YDist(43,59)
YAnchor(51)
YDist(51,65)

Smooth()

</talk>
        <assembly>/* TT glyph 868, char 0x1dd5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 16
MDAP[R], 39
MDRP[m&gt;RBl], 27
SRP2[], 0
IP[], 7
SRP1[], 7
SHP[1], 8
MDAP[R], 43
MDRP[m&gt;RBl], 59
MDAP[R], 51
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="869">
      <instructions>
        <talk>/* 1DD6 */

YAnchor(17)
YDist(17,4)
YShift(17,47)
YShift(17,52)
YDist(52,51)
YAnchor(23)
YShift(23,0)
YDist(23,38)
YShift(23,46)
YInterpolate(23,30,17)
YDist(30,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 869, char 0x1dd6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 17
MDRP[m&gt;RBl], 4
SHP[1], 47
SHP[1], 52
SRP0[], 52
MDRP[m&gt;RBl], 51
MDAP[R], 23
SHP[1], 0
MDRP[m&gt;RBl], 38
SHP[1], 46
SRP2[], 17
IP[], 30
SRP0[], 30
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="870">
      <instructions>
        <talk>/* 1DD7 */

YAnchor(6)
YDist(6,19)
YAnchor(33)
YDist(33,45)
YInterpolate(33,0,51,6)
YDist(0,26,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 870, char 0x1dd7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 19
MDAP[R], 33
MDRP[m&gt;RBl], 45
SRP2[], 6
IP[], 0
IP[], 51
SRP0[], 0
MDRP[m&gt;RGr], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="871">
      <instructions>
        <talk>/* 1DD9 */

YAnchor(0)	/* min */
YAnchor(27)	/* max */

/* YDir: Stroke #0 */
YInterpolate(27,6,0)
YAnchor(6)
YDist(6,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,20) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(27,36) /* max */
YShift(6,34) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 871, char 0x1dd9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 27
IP[], 6
MDAP[R], 6
MDRP[m&gt;RBl], 13
SRP0[], 0
MDRP[m&gt;RBl], 20
SRP1[], 27
SHP[1], 36
SRP1[], 6
SHP[1], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="872">
      <instructions>
        <talk>/* 0363 */

YAnchor(21)
YDist(21,8)
YAnchor(36)
YShift(36,0)
YInterpolate(36,43,21)
YDist(43,44,&gt;=)
YDist(36,51)
YShift(51,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 872, char 0x363 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 21
MDRP[m&gt;RBl], 8
MDAP[R], 36
SHP[1], 0
SRP2[], 21
IP[], 43
SRP0[], 43
MDRP[m&gt;RBl], 44
SRP0[], 36
MDRP[m&gt;RBl], 51
SHP[2], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="873">
      <instructions>
        <talk>/* 0364 */

YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YDist(6,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(6,20,0)
YAnchor(20)
YDist(20,10) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 873, char 0x364 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
MDRP[m&gt;RBl], 24
SRP2[], 0
IP[], 20
MDAP[R], 20
MDRP[m&gt;RBl], 10
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="874">
      <instructions>
        <talk>/* 0365 */

YAnchor(6)
YAnchor(12)
YShift(12,15)
YShift(12,25)
YDist(12,13)
YShift(13,27)
YInterpolate(12,20,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 874, char 0x365 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 12
SHP[1], 15
SHP[1], 25
MDRP[m&gt;RBl], 13
SHP[2], 27
SRP2[], 6
IP[], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="875">
      <instructions>
        <talk>/* 0366 */

YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,19) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 875, char 0x366 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 19
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="876">
      <instructions>
        <talk>/* 0367 */

YAnchor(0)
YDist(0,14)
YShift(0,21)
YAnchor(6)
YShift(6,26)
YDist(6,5)
YShift(5,24)

Smooth()
</talk>
        <assembly>/* TT glyph 876, char 0x367 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 14
SHP[1], 21
MDAP[R], 6
SHP[1], 26
MDRP[m&gt;RBl], 5
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="877">
      <instructions>
        <talk>/* 0368 */

YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,21) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,28) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 877, char 0x368 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="878">
      <instructions>
        <talk>/* 0369 */

YAnchor(5)
YShift(5,0)
YDist(5,36)
YAnchor(20)
YIPAnchor(20,11,5)
YDist(11,43,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 878, char 0x369 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 0
MDRP[m&gt;RBl], 36
MDAP[R], 20
SRP2[], 5
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="879">
      <instructions>
        <talk>/* 036A */

YAnchor(5)
YAnchor(33)
YShift(33,10)
YShift(33,32)
YShift(33,38)
YIPAnchor(5,25,33)
YDist(25,18)
YDist(33,34)
YShift(34,39)

Smooth()
</talk>
        <assembly>/* TT glyph 879, char 0x36a */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 33
SHP[1], 10
SHP[1], 32
SHP[1], 38
SRP2[], 5
IP[], 25
MDAP[R], 25
MDRP[m&gt;RBl], 18
SRP0[], 33
MDRP[m&gt;RBl], 34
SHP[2], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="880">
      <instructions>
        <talk>/* 036B */

YAnchor(25)
YShift(25,5)
YShift(25,47)
YDist(25,18)
YShift(18,40)
YAnchor(55)
YShift(55,10)
YShift(55,32)
YShift(55,54)
YShift(55,60)
YShift(55,65)
YDist(55,56)
YShift(56,61)
YShift(56,66)

Smooth()

</talk>
        <assembly>/* TT glyph 880, char 0x36b */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 25
SHP[1], 5
SHP[1], 47
MDRP[m&gt;RBl], 18
SHP[2], 40
MDAP[R], 55
SHP[1], 10
SHP[1], 32
SHP[1], 54
SHP[1], 60
SHP[1], 65
MDRP[m&gt;RBl], 56
SHP[2], 61
SHP[2], 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="881">
      <instructions>
        <talk>/* uni036C */

/* Y direction */
YAnchor(8)
YDist(8,20)
YShift(8,33)
YAnchor(23)
YDist(23,24)
YShift(23,28)

Smooth()
</talk>
        <assembly>/* TT glyph 881, char 0x36c */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RBl], 20
SHP[1], 33
MDAP[R], 23
MDRP[m&gt;RBl], 24
SHP[1], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="882">
      <instructions>
        <talk>/* uni036D */

/* Min and Max */
YAnchor(0)	/* min */
YAnchor(12)	/* max */

/* YDir: Stroke #0 */
YInterpolate(12,14,0)
YAnchor(14)
YDist(14,17) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,24) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 882, char 0x36d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
IP[], 14
MDAP[R], 14
MDRP[m&gt;RBl], 17
SRP0[], 0
MDRP[m&gt;RBl], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="883">
      <instructions>
        <talk>/* 036E */

YAnchor(0)
YDist(0,4,&gt;=)
YAnchor(10)
YShift(10,1)
YShift(10,5)
YShift(10,15)
YDist(10,9)
YShift(9,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 883, char 0x36e */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 4
MDAP[R], 10
SHP[1], 1
SHP[1], 5
SHP[1], 15
MDRP[m&gt;RBl], 9
SHP[2], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="884">
      <instructions>
        <talk>/* uni036F */

/* Y direction */
YAnchor(8)
YShift(8,0)
YShift(8,4)
YShift(8,13)
YDist(8,9,&gt;=)
YShift(9,14)
YAnchor(20)
YShift(20,1)
YShift(20,5)
YShift(20,25)
YDist(20,19,&gt;=)
YShift(19,24)

Smooth()
</talk>
        <assembly>/* TT glyph 884, char 0x36f */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 0
SHP[1], 4
SHP[1], 13
MDRP[m&gt;RBl], 9
SHP[2], 14
MDAP[R], 20
SHP[1], 1
SHP[1], 5
SHP[1], 25
MDRP[m&gt;RBl], 19
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="885">
      <instructions>
        <talk>/* 1DD3 */

YAnchor(0)
YDist(0,14,&gt;=)
YDist(14,18,&gt;=)
YShift(18,8)
YShift(0,34)
YDist(34,26)

Smooth()

</talk>
        <assembly>/* TT glyph 885, char 0x1dd3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 14
MDRP[m&gt;RWh], 18
SHP[2], 8
SRP1[], 0
SHP[1], 34
SRP0[], 34
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="886">
      <instructions>
        <talk>/* 1DD4 */

YAnchor(0)
YDist(0,63)
YShift(0,24)
YDist(24,17)
YAnchor(46)
YShift(46,53)
YInterpolate(0,57,6,46)
YShift(57,56)
YShift(6,7)
YDist(46,33)
YShift(33,10)

Smooth()
</talk>
        <assembly>/* TT glyph 886, char 0x1dd4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 63
SHP[1], 24
SRP0[], 24
MDRP[m&gt;RBl], 17
MDAP[R], 46
SHP[1], 53
SRP2[], 0
IP[], 57
IP[], 6
SRP1[], 57
SHP[1], 56
SRP1[], 6
SHP[1], 7
MDRP[m&gt;RBl], 33
SHP[2], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="887">
      <instructions>
        <talk>/* 1DD8 */

YAnchor(0)
YDist(0,21,&gt;=)
YAnchor(12)
YInterpolate(0,7,12)
YDist(7,28,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 887, char 0x1dd8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 21
MDAP[R], 12
SRP2[], 0
IP[], 7
SRP0[], 7
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="888">
      <instructions>
        <talk>/* 1DDA */

YAnchor(0)
YDelta(0,-3/2@12..15,-1@16..17)
YDist(0,13,&gt;=)
YDist(13,19,&gt;=)
YDist(19,33,&gt;=)
YDist(33,40,&gt;=)
YDist(40,52,&gt;=)
YDist(52,58,&gt;=)
YDist(58,46,&gt;=)
YShift(46,68)
YAnchor(68)
YDist(68,82,&gt;=)

Smooth()
</talk>
        <assembly>/* TT glyph 888, char 0x1dda */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
CALL[], 0, -96, 12, 15, 72
DLTP1[(0 @7 -8)(0 @8 -8)]
MDRP[M&gt;RBl], 13
MDRP[M&gt;RWh], 19
MDRP[M&gt;RBl], 33
MDRP[M&gt;RWh], 40
MDRP[M&gt;RBl], 52
MDRP[M&gt;RWh], 58
MDRP[m&gt;RBl], 46
SHP[2], 68
MDAP[R], 68
MDRP[m&gt;RBl], 82
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="889">
      <instructions>
        <talk>/* 1DDC */

YAnchor(5)
YShift(5,4)
YAnchor(4)
YDist(4,3)
YAnchor(31)
YShift(31,10)
YShift(31,11)
YShift(31,32)
YInterpolate(31,16,39,5)
YDist(16,17,&gt;=)
YShift(39,22)
YDist(39,38,&gt;=)
YDist(31,30,&gt;=)
YShift(30,33)

Smooth()
</talk>
        <assembly>/* TT glyph 889, char 0x1ddc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
MDAP[R], 4
MDRP[m&gt;RBl], 3
MDAP[R], 31
SHP[1], 10
SHP[1], 11
SHP[1], 32
SRP2[], 5
IP[], 16
IP[], 39
SRP0[], 16
MDRP[m&gt;RBl], 17
SRP1[], 39
SHP[1], 22
SRP0[], 39
MDRP[m&gt;RBl], 38
SRP0[], 31
MDRP[m&gt;RBl], 30
SHP[2], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="890">
      <instructions>
        <talk>/* 1DDD */

YAnchor(5)
YShift(5,4)
YDist(4,3)
YAnchor(11)
YShift(11,10)
YDist(11,12)

Smooth()

</talk>
        <assembly>/* TT glyph 890, char 0x1ddd */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
SRP0[], 4
MDRP[m&gt;RBl], 3
MDAP[R], 11
SHP[1], 10
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="891">
      <instructions>
        <talk>/* 1DE0 */

YAnchor(14)
YDist(14,7)
YShift(14,37)
YShift(37,36)
YDist(36,35)
YAnchor(22)
YShift(22,0)
YShift(22,27)
YShift(22,32)
YDist(22,23)
YShift(23,28)

Smooth()

</talk>
        <assembly>/* TT glyph 891, char 0x1de0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 14
MDRP[m&gt;RBl], 7
SHP[1], 37
SRP1[], 37
SHP[1], 36
SRP0[], 36
MDRP[m&gt;RBl], 35
MDAP[R], 22
SHP[1], 0
SHP[1], 27
SHP[1], 32
MDRP[m&gt;RBl], 23
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="892">
      <instructions>
        <talk>/* 1DE3 */

YAnchor(0)	/* min */
YAnchor(15)	/* max */

/* YDir: Stroke #0 */
YDist(15,8) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,23) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 892, char 0x1de3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 15
MDRP[m&gt;RBl], 8
SRP0[], 0
MDRP[m&gt;RBl], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="893">
      <instructions>
        <talk>/* 1DE4 */

YAnchor(0)
YDist(0,10)
YAnchor(23)
YShift(23,29)
YAnchor(29)
YDist(23,39)
YInterpolate(0,16,45,23)

Smooth()

</talk>
        <assembly>/* TT glyph 893, char 0x1de4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 10
MDAP[R], 23
SHP[1], 29
MDAP[R], 29
SRP0[], 23
MDRP[m&gt;RBl], 39
SRP2[], 0
IP[], 16
IP[], 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="894">
      <instructions>
        <talk>/* 1DE5 */

YAnchor(9)
YDist(9,21)
YAnchor(26)
YShift(26,25)
YDist(26,27)
YInterpolate(26,2,9)
YDist(2,3)

Smooth()
</talk>
        <assembly>/* TT glyph 894, char 0x1de5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RBl], 21
MDAP[R], 26
SHP[1], 25
MDRP[m&gt;RBl], 27
SRP2[], 9
IP[], 2
SRP0[], 2
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="895">
      <instructions>
        <talk>/* 1DE6 */

YAnchor(4)	/* min */
YAnchor(20)	/* max */

/* YDir: Stroke #0 */
YDist(20,8) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,24) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(20,17)

/* Extreme Min */
YShift(4,0)

Smooth()

</talk>
        <assembly>/* TT glyph 895, char 0x1de6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 20
MDRP[m&gt;RBl], 8
SRP0[], 4
MDRP[m&gt;RBl], 24
SRP1[], 20
SHP[1], 17
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="896">
      <instructions>
        <talk>YAnchor(0)
YDist(0,4)
YDist(4,10)
YDist(10,16)
YAnchor(1)
YDist(1,28)

Smooth()
</talk>
        <assembly>/* TT glyph 896, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 4
MDRP[M&lt;RWh], 10
MDRP[m&gt;RBl], 16
MDAP[R], 1
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="897">
      <instructions>
        <talk>/* 16A0 */

YAnchor(35,86)
YShift(35,3)
YLink(35,34,87)
YAnchor(38,85)
YShift(38,2)
YShift(38,9)
YShift(38,20)
YShift(38,29)
YShift(38,43)
YIPAnchor(35,14,4,38)
YDist(14,15)
YDist(4,5)
YLink(38,37,87)
YShift(37,30)
YShift(37,42)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 897, char 0x16a0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 35, 86
SHP[1], 3
MIRP[m&gt;RBl], 34, 87
MIAP[R], 38, 85
SHP[1], 2
SHP[1], 9
SHP[1], 20
SHP[1], 29
SHP[1], 43
SRP2[], 35
IP[], 14
IP[], 4
MDAP[R], 14
MDAP[R], 4
SRP0[], 14
MDRP[m&gt;RBl], 15
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 38
MIRP[m&gt;RBl], 37, 87
SHP[2], 30
SHP[2], 42
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="898">
      <instructions>
        <talk>/* 16A1 */

YAnchor(31,86)
YShift(31,3)
YLink(31,30,87)
YAnchor(51,85)
YShift(51,9)
YAnchor(56,85)
YShift(56,2)
YShift(56,21)
YShift(56,35)
YIPAnchor(31,15,4,56)
YInterpolate(4,43,56)
YDist(15,16)
YDist(4,5)
YDist(43,37)
YLink(56,55,87)
YShift(55,36)
YShift(55,50)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 898, char 0x16a1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 31, 86
SHP[1], 3
MIRP[m&gt;RBl], 30, 87
MIAP[R], 51, 85
SHP[1], 9
MIAP[R], 56, 85
SHP[1], 2
SHP[1], 21
SHP[1], 35
SRP2[], 31
IP[], 15
IP[], 4
MDAP[R], 15
MDAP[R], 4
SRP2[], 56
IP[], 43
SRP0[], 15
MDRP[m&gt;RBl], 16
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 43
MDRP[m&gt;RBl], 37
SRP0[], 56
MIRP[m&gt;RBl], 55, 87
SHP[2], 36
SHP[2], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="899">
      <instructions>
        <talk>/* 16A2 */

YAnchor(2,85)
YShift(2,6)
YShift(2,7)
YShift(2,8)
YShift(2,9)
YAnchor(15,86)
YShift(15,5)
YShift(15,10)
YShift(15,16)
YLink(15,14,87)
YShift(14,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 899, char 0x16a2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 2, 85
SHP[1], 6
SHP[1], 7
SHP[1], 8
SHP[1], 9
MIAP[R], 15, 86
SHP[1], 5
SHP[1], 10
SHP[1], 16
MIRP[m&gt;RBl], 14, 87
SHP[2], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="900">
      <instructions>
        <talk>/* 16A3 */

YAnchor(0,86)
YShift(0,7)
YShift(0,8)
YShift(0,12)
YShift(0,17)
YLink(0,1,87)
YShift(1,6)
YAnchor(14,85)
YShift(14,15)
YShift(14,18)
YShift(14,19)
YShift(14,20)
YShift(14,21)
YIPAnchor(0,9,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 900, char 0x16a3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 86
SHP[2], 7
SHP[2], 8
SHP[2], 12
SHP[2], 17
MIRP[m&gt;RBl], 1, 87
SHP[2], 6
MIAP[R], 14, 85
SHP[1], 15
SHP[1], 18
SHP[1], 19
SHP[1], 20
SHP[1], 21
SRP2[], 0
IP[], 9
MDAP[R], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="901">
      <instructions>
        <talk>/* 16A4 */

YAnchor(2,85)
YAnchor(15,86)
YShift(15,5)
YShift(15,10)
YShift(15,16)
YLink(15,14,87)
YShift(14,17)
YInterpolate(2,27,21,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 901, char 0x16a4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 2, 85
MIAP[R], 15, 86
SHP[1], 5
SHP[1], 10
SHP[1], 16
MIRP[m&gt;RBl], 14, 87
SHP[2], 17
SRP2[], 2
IP[], 27
IP[], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="902">
      <instructions>
        <talk>/* 16A5 */

YAnchor(7,86)
YShift(7,0)
YShift(7,14)
YShift(7,15)
YShift(7,20)
YLink(7,8,87)
YShift(8,13)
YAnchor(17,85)
YShift(17,18)
YShift(17,21)
YShift(17,22)
YShift(17,23)
YShift(17,24)
YInterpolate(7,4,17)
YShift(4,5)
YLink(4,3,87)
YShift(3,1)
YShift(3,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 902, char 0x16a5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 0
SHP[1], 14
SHP[1], 15
SHP[1], 20
MIRP[m&gt;RBl], 8, 87
SHP[2], 13
MIAP[R], 17, 85
SHP[1], 18
SHP[1], 21
SHP[1], 22
SHP[1], 23
SHP[1], 24
SRP2[], 7
IP[], 4
SRP1[], 4
SHP[1], 5
SRP0[], 4
MIRP[m&gt;RBl], 3, 87
SHP[2], 1
SHP[2], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="903">
      <instructions>
        <talk>/* 16A6 */

YAnchor(18,86)
YShift(18,7)
YLink(18,17,87)
YAnchor(22,85)
YShift(22,2)
YLink(22,23,87)
YInterpolate(18,6,9,10,4,12,3,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 903, char 0x16a6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 18, 86
SHP[1], 7
MIRP[m&gt;RBl], 17, 87
MIAP[R], 22, 85
SHP[1], 2
MIRP[m&gt;RBl], 23, 87
SRP2[], 18
SLOOP[], 6
IP[], 6, 9, 10, 4, 12, 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="904">
      <instructions>
        <talk>/* 16A7 */

YAnchor(18,86)
YLink(18,17,87)
YAnchor(22,85)
YLink(22,23,87)
YInterpolate(18,6,24,5,10,30,3,22)
YShift(6,9)
YShift(3,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 904, char 0x16a7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 18, 86
MIRP[m&gt;RBl], 17, 87
MIAP[R], 22, 85
MIRP[m&gt;RBl], 23, 87
SRP2[], 18
SLOOP[], 6
IP[], 6, 24, 5, 10, 30, 3
SRP1[], 6
SHP[1], 9
SRP1[], 3
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="905">
      <instructions>
        <talk>/* 16A8 */

YAnchor(17,86)
YAnchor(24,85)
YLink(24,23,87)
YShift(24,2)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YInterpolate(17,15,24)
YShift(15,14)
YLink(15,9,90)
YShift(9,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 905, char 0x16a8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 17, 86
MIAP[R], 24, 85
MIRP[m&gt;RBl], 23, 87
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
SRP1[], 17
SRP2[], 24
IP[], 15
SRP1[], 15
SHP[1], 14
SRP0[], 15
MIRP[m&gt;RBl], 9, 90
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="906">
      <instructions>
        <talk>/* 16A9 */

YAnchor(26,86)
YShift(26,16)
YLink(26,25,87)
YAnchor(29,85)
YShift(29,4)
YShift(29,33)
YShift(29,2)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YIPAnchor(26,19,29)
YInterpolate(26,15,19)
YShift(15,14)
YLink(15,9,90)
YShift(9,10)
YShift(19,11)
YLink(19,18,87)
YLink(29,28,87)
YShift(28,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 906, char 0x16a9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 26, 86
SHP[1], 16
MIRP[m&gt;RBl], 25, 87
MIAP[R], 29, 85
SHP[1], 4
SHP[1], 33
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
SRP1[], 26
SRP2[], 29
IP[], 19
MDAP[R], 19
SRP2[], 26
IP[], 15
SRP1[], 15
SHP[1], 14
SRP0[], 15
MIRP[m&gt;RBl], 9, 90
SHP[2], 10
SRP1[], 19
SHP[1], 11
SRP0[], 19
MIRP[m&gt;RBl], 18, 87
SRP0[], 29
MIRP[m&gt;RBl], 28, 87
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="907">
      <instructions>
        <talk>/* 16AA */

YAnchor(17,86)
YLink(17,18,87)
YAnchor(24,85)
YShift(24,4)
YShift(24,28)
YShift(24,2)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YInterpolate(17,15,24)
YShift(15,14)
YLink(15,9,90)
YShift(9,10)
YLink(24,23,87)
YShift(23,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 907, char 0x16aa */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 17, 86
MIRP[m&gt;RBl], 18, 87
MIAP[R], 24, 85
SHP[1], 4
SHP[1], 28
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
SRP1[], 17
SRP2[], 24
IP[], 15
SRP1[], 15
SHP[1], 14
SRP0[], 15
MIRP[m&gt;RBl], 9, 90
SHP[2], 10
SRP0[], 24
MIRP[m&gt;RBl], 23, 87
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="908">
      <instructions>
        <talk>/* 16AB */

YAnchor(21,86)
YShift(21,16)
YLink(21,20,87)
YAnchor(24,85)
YLink(24,23,87)
YShift(24,2)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YInterpolate(21,15,24)
YShift(15,14)
YLink(15,9,90)
YShift(9,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 908, char 0x16ab */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 86
SHP[1], 16
MIRP[m&gt;RBl], 20, 87
MIAP[R], 24, 85
MIRP[m&gt;RBl], 23, 87
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
SRP1[], 21
SRP2[], 24
IP[], 15
SRP1[], 15
SHP[1], 14
SRP0[], 15
MIRP[m&gt;RBl], 9, 90
SHP[2], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="909">
      <instructions>
        <talk>/* OssLB 16AC */

YAnchor(28,86)
YShift(28,3)
YLink(28,27,87)
YAnchor(32,85)
YShift(32,2)
YLink(32,33,87)
YInterpolate(28,19,9,32)
YShift(19,20)
YLink(19,15,90)
YShift(15,14)
YShift(9,10)
YLink(9,5,90)
YShift(5,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 909, char 0x16ac */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 28, 86
SHP[1], 3
MIRP[m&gt;RBl], 27, 87
MIAP[R], 32, 85
SHP[1], 2
MIRP[m&gt;RBl], 33, 87
SRP2[], 28
IP[], 19
IP[], 9
SRP1[], 19
SHP[1], 20
SRP0[], 19
MIRP[m&gt;RBl], 15, 90
SHP[2], 14
SRP1[], 9
SHP[1], 10
SRP0[], 9
MIRP[m&gt;RBl], 5, 90
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="910">
      <instructions>
        <talk>/* 16AD */

YAnchor(21,85)
YShift(21,16)
YLink(21,22,87)
YAnchor(27,86)
YShift(27,17)
YLink(27,26,87)
YInterpolate(27,8,1,21)
YShift(8,7)
YLink(8,9,90)
/* YDelta(9,1/4@12..17,1/2@18..24) */
YShift(9,10)
YShift(1,0)
YLink(1,2,90)
/* YDelta(2,1/4@12..17,1/2@18..24) */
YShift(2,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 910, char 0x16ad */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 16
MIRP[m&gt;RBl], 22, 87
MIAP[R], 27, 86
SHP[1], 17
MIRP[m&gt;RBl], 26, 87
SRP2[], 21
IP[], 8
IP[], 1
SRP1[], 8
SHP[1], 7
SRP0[], 8
MIRP[m&gt;RBl], 9, 90
SHP[2], 10
SRP1[], 1
SHP[1], 0
SRP0[], 1
MIRP[m&gt;RBl], 2, 90
SHP[2], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="911">
      <instructions>
        <talk>/* 16AE */

YAnchor(21,85)
YShift(21,16)
YLink(21,22,87)
YAnchor(27,86)
YShift(27,17)
YLink(27,26,87)
YInterpolate(27,12,5,21)
YShift(12,13)
YLink(12,11,90)
YShift(11,10)
YShift(5,6)
YLink(5,4,90)
YShift(4,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 911, char 0x16ae */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 16
MIRP[m&gt;RBl], 22, 87
MIAP[R], 27, 86
SHP[1], 17
MIRP[m&gt;RBl], 26, 87
SRP2[], 21
IP[], 12
IP[], 5
SRP1[], 12
SHP[1], 13
SRP0[], 12
MIRP[m&gt;RBl], 11, 90
SHP[2], 10
SRP1[], 5
SHP[1], 6
SRP0[], 5
MIRP[m&gt;RBl], 4, 90
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="912">
      <instructions>
        <talk>/* 16AF */

YAnchor(27,85)
YShift(27,22)
YLink(27,28,87)
YAnchor(33,86)
YShift(33,23)
YLink(33,32,87)
YInterpolate(33,14,4,27)
YShift(14,13)
YLink(14,18,90)
YShift(18,19)
YShift(4,3)
YLink(4,8,90)
YShift(8,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 912, char 0x16af */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 27, 85
SHP[1], 22
MIRP[m&gt;RBl], 28, 87
MIAP[R], 33, 86
SHP[1], 23
MIRP[m&gt;RBl], 32, 87
SRP2[], 27
IP[], 14
IP[], 4
SRP1[], 14
SHP[1], 13
SRP0[], 14
MIRP[m&gt;RBl], 18, 90
SHP[2], 19
SRP1[], 4
SHP[1], 3
SRP0[], 4
MIRP[m&gt;RBl], 8, 90
SHP[2], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="913">
      <instructions>
        <talk>/* 16B0 */

YAnchor(24,85)
YShift(24,19)
YLink(24,25,87)
YAnchor(30,86)
YShift(30,20)
YLink(30,29,87)
YInterpolate(30,16,9,24)
YShift(16,15)
YLink(16,13,90)
YShift(13,14)
YShift(9,8)
YLink(9,3,90)
YShift(3,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 913, char 0x16b0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 24, 85
SHP[1], 19
MIRP[m&gt;RBl], 25, 87
MIAP[R], 30, 86
SHP[1], 20
MIRP[m&gt;RBl], 29, 87
SRP2[], 24
IP[], 16
IP[], 9
SRP1[], 16
SHP[1], 15
SRP0[], 16
MIRP[m&gt;RBl], 13, 90
SHP[2], 14
SRP1[], 9
SHP[1], 8
SRP0[], 9
MIRP[m&gt;RBl], 3, 90
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="914">
      <instructions>
        <talk>/* 16B1 */

YAnchor(25,86)
YShift(25,6)
YShift(25,10)
YShift(25,11)
YLink(25,24,87)
YShift(24,9)
YAnchor(28,85)
YLink(28,27,87)
YShift(28,2)
YShift(2,19)
YShift(2,20)
YInterpolate(25,12,16,17,3,28)
YShift(16,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 914, char 0x16b1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 86
SHP[1], 6
SHP[1], 10
SHP[1], 11
MIRP[m&gt;RBl], 24, 87
SHP[2], 9
MIAP[R], 28, 85
MIRP[m&gt;RBl], 27, 87
SHP[1], 2
SRP1[], 2
SHP[1], 19
SHP[1], 20
SRP1[], 25
SRP2[], 28
SLOOP[], 4
IP[], 12, 16, 17, 3
SRP1[], 16
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="915">
      <instructions>
        <talk>/* 16B2 */

YAnchor(5)
YAnchor(14)
YInterpolate(14,2,9,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 915, char 0x16b2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 14
SRP2[], 5
IP[], 2
IP[], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="916">
      <instructions>
        <talk>/* 16B3 */

YAnchor(25,86)
YShift(25,0)
YShift(25,15)
YShift(25,16)
YLink(25,24,87)
YShift(24,17)
YAnchor(29,85)
YShift(29,14)
YLink(29,30,87)
YInterpolate(25,5,29)
YDist(5,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 916, char 0x16b3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 86
SHP[1], 0
SHP[1], 15
SHP[1], 16
MIRP[m&gt;RBl], 24, 87
SHP[2], 17
MIAP[R], 29, 85
SHP[1], 14
MIRP[m&gt;RBl], 30, 87
SRP2[], 25
IP[], 5
SRP0[], 5
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="917">
      <instructions>
        <talk>/* 16B4 */

YAnchor(16,86)
YLink(16,15,87)
YShift(16,20)
YAnchor(24,85)
YShift(24,6)
YShift(24,19)
YShift(24,28)
YInterpolate(16,0,24)
YDist(0,1)
YLink(24,25,87)
YShift(25,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 917, char 0x16b4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 86
MIRP[m&gt;RBl], 15, 87
SHP[1], 20
MIAP[R], 24, 85
SHP[1], 6
SHP[1], 19
SHP[1], 28
SRP2[], 16
IP[], 0
SRP0[], 0
MDRP[m&gt;RBl], 1
SRP0[], 24
MIRP[m&gt;RBl], 25, 87
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="918">
      <instructions>
        <talk>/* 16B5 */

YAnchor(16,86)
YLink(16,15,87)
YShift(16,20)
YAnchor(24,85)
YShift(24,6)
YShift(24,19)
YShift(24,28)
YInterpolate(16,0,31,37,24)
YLink(24,25,87)
YShift(25,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 918, char 0x16b5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 86
MIRP[m&gt;RBl], 15, 87
SHP[1], 20
MIAP[R], 24, 85
SHP[1], 6
SHP[1], 19
SHP[1], 28
SRP2[], 16
SLOOP[], 3
IP[], 0, 31, 37
MIRP[m&gt;RBl], 25, 87
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="919">
      <instructions>
        <talk>/* 16B6 */

YAnchor(34,85)
YShift(34,17)
YShift(34,25)
YLink(34,35,87)
YShift(34,43)
YAnchor(40,86)
YShift(40,18)
YLink(40,39,87)
YInterpolate(40,19,34)
YShift(19,0)
YDist(19,20)
YShift(20,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 919, char 0x16b6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 85
SHP[1], 17
SHP[1], 25
MIRP[m&gt;RBl], 35, 87
SHP[1], 43
MIAP[R], 40, 86
SHP[1], 18
MIRP[m&gt;RBl], 39, 87
SRP2[], 34
IP[], 19
SRP1[], 19
SHP[1], 0
SRP0[], 19
MDRP[m&gt;RBl], 20
SHP[2], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="920">
      <instructions>
        <talk>/* 16B7 */

YAnchor(11,85)
YShift(11,1)
YShift(11,6)
YShift(11,15)
YLink(11,12,87)
YShift(12,14)
YAnchor(27,86)
YShift(27,3)
YShift(27,4)
YShift(27,18)
YLink(27,26,87)
YShift(26,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 920, char 0x16b7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 85
SHP[1], 1
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 12, 87
SHP[2], 14
MIAP[R], 27, 86
SHP[1], 3
SHP[1], 4
SHP[1], 18
MIRP[m&gt;RBl], 26, 87
SHP[2], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="921">
      <instructions>
        <talk>/* 16B8 */

YAnchor(23,85)
YShift(23,13)
YShift(23,18)
YShift(23,27)
YLink(23,24,87)
YShift(24,26)
YAnchor(39,86)
YShift(39,15)
YShift(39,16)
YShift(39,30)
YInterpolate(39,0,6,2,10,23)
YLink(39,38,87)
YShift(38,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 921, char 0x16b8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 13
SHP[1], 18
SHP[1], 27
MIRP[m&gt;RBl], 24, 87
SHP[2], 26
MIAP[R], 39, 86
SHP[1], 15
SHP[1], 16
SHP[1], 30
SRP2[], 23
SLOOP[], 4
IP[], 0, 6, 2, 10
MIRP[m&gt;RBl], 38, 87
SHP[2], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="922">
      <instructions>
        <talk>/* 16B9 */

YAnchor(17,86)
YShift(17,6)
YLink(17,16,87)
YAnchor(20,85)
YShift(20,2)
YShift(20,12)
YLink(20,19,87)
YInterpolate(17,5,8,9,3,11,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 922, char 0x16b9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 17, 86
SHP[1], 6
MIRP[m&gt;RBl], 16, 87
MIAP[R], 20, 85
SHP[1], 2
SHP[1], 12
MIRP[m&gt;RBl], 19, 87
SRP2[], 17
SLOOP[], 5
IP[], 5, 8, 9, 3, 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="923">
      <instructions>
        <talk>/* 16BA */

YAnchor(16,86)
YShift(16,7)
YShift(16,8)
YShift(16,17)
YLink(16,15,87)
YShift(15,18)
YAnchor(25,85)
YShift(25,6)
YShift(25,9)
YShift(25,29)
YInterpolate(16,2,25)
YShift(2,3)
YDist(2,1)
YShift(1,0)
YLink(25,26,87)
YShift(26,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 923, char 0x16ba */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 86
SHP[1], 7
SHP[1], 8
SHP[1], 17
MIRP[m&gt;RBl], 15, 87
SHP[2], 18
MIAP[R], 25, 85
SHP[1], 6
SHP[1], 9
SHP[1], 29
SRP2[], 16
IP[], 2
SRP1[], 2
SHP[1], 3
SRP0[], 2
MDRP[m&gt;RBl], 1
SHP[2], 0
SRP0[], 25
MIRP[m&gt;RBl], 26, 87
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="924">
      <instructions>
        <talk>/* 16BB */

YAnchor(13,86)
YShift(13,3)
YShift(13,4)
YShift(13,12)
YLink(13,14,87)
YShift(14,11)
YAnchor(21,85)
YShift(21,2)
YShift(21,5)
YShift(21,25)
YLink(21,22,87)
YShift(22,24)
YInterpolate(13,33,29,21)
YShift(33,32)
YDist(33,34)
YShift(34,35)
YShift(29,28)
YDist(29,30)
YShift(30,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 924, char 0x16bb */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 86
SHP[1], 3
SHP[1], 4
SHP[1], 12
MIRP[m&gt;RBl], 14, 87
SHP[2], 11
MIAP[R], 21, 85
SHP[1], 2
SHP[1], 5
SHP[1], 25
MIRP[m&gt;RBl], 22, 87
SHP[2], 24
SRP2[], 13
IP[], 33
IP[], 29
SRP1[], 33
SHP[1], 32
SRP0[], 33
MDRP[m&gt;RBl], 34
SHP[2], 35
SRP1[], 29
SHP[1], 28
SRP0[], 29
MDRP[m&gt;RBl], 30
SHP[2], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="925">
      <instructions>
        <talk>/* 16BC */

YAnchor(23,85)
YLink(23,24,87)
YAnchor(25,86)
YLink(25,26,87)
YInterpolate(25,2,13,23)
YShift(2,1)
YLink(2,5,90)
YShift(5,6)
YShift(13,14)
YLink(13,10,90)
YShift(10,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 925, char 0x16bc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 85
MIRP[m&gt;RBl], 24, 87
MIAP[R], 25, 86
MIRP[m&gt;RBl], 26, 87
SRP2[], 23
IP[], 2
IP[], 13
SRP1[], 2
SHP[1], 1
SRP0[], 2
MIRP[m&gt;RBl], 5, 90
SHP[2], 6
SRP1[], 13
SHP[1], 14
SRP0[], 13
MIRP[m&gt;RBl], 10, 90
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="926">
      <instructions>
        <talk>/* 16BD */

YAnchor(23,85)
YShift(23,18)
YLink(23,24,87)
YAnchor(25,86)
YShift(25,16)
YLink(25,26,87)
YInterpolate(25,0,8,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 926, char 0x16bd */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 18
MIRP[m&gt;RBl], 24, 87
MIAP[R], 25, 86
SHP[1], 16
MIRP[m&gt;RBl], 26, 87
SRP2[], 23
IP[], 0
IP[], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="927">
      <instructions>
        <talk>/* 16BE */

YAnchor(15,85)
YShift(15,10)
YLink(15,16,87)
YAnchor(17,86)
YShift(17,8)
YLink(17,18,87)
YInterpolate(17,2,15)
YShift(2,1)
YLink(2,5,90)
YShift(5,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 927, char 0x16be */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 85
SHP[1], 10
MIRP[m&gt;RBl], 16, 87
MIAP[R], 17, 86
SHP[1], 8
MIRP[m&gt;RBl], 18, 87
SRP2[], 15
IP[], 2
SRP1[], 2
SHP[1], 1
SRP0[], 2
MIRP[m&gt;RBl], 5, 90
SHP[2], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="928">
      <instructions>
        <talk>/* 16BF */

YAnchor(13,85)
YShift(13,8)
YLink(13,14,87)
YAnchor(15,86)
YShift(15,6)
YLink(15,16,87)
YInterpolate(13,3,15)
YShift(3,4)
YLink(3,2,90)
YShift(2,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 928, char 0x16bf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 85
SHP[1], 8
MIRP[m&gt;RBl], 14, 87
MIAP[R], 15, 86
SHP[1], 6
MIRP[m&gt;RBl], 16, 87
SRP2[], 13
IP[], 3
SRP1[], 3
SHP[1], 4
SRP0[], 3
MIRP[m&gt;RBl], 2, 90
SHP[2], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="929">
      <instructions>
        <talk>/* 16C0 */

YAnchor(31,85)
YShift(31,26)
YLink(31,32,87)
YAnchor(33,86)
YShift(33,24)
YLink(33,34,87)
YInterpolate(33,0,8,18,31)
YShift(18,17)
YLink(18,21,90)
YShift(21,22)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 929, char 0x16c0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 31, 85
SHP[1], 26
MIRP[m&gt;RBl], 32, 87
MIAP[R], 33, 86
SHP[1], 24
MIRP[m&gt;RBl], 34, 87
SRP2[], 31
SLOOP[], 3
IP[], 0, 8, 18
SRP1[], 18
SHP[1], 17
SRP0[], 18
MIRP[m&gt;RBl], 21, 90
SHP[2], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="930">
      <instructions>
        <talk>/* 16C1 */

YAnchor(6,85)
YShift(6,1)
YLink(6,5,87)
YAnchor(13,86)
YShift(13,3)
YLink(13,12,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 930, char 0x16c1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 6, 85
SHP[1], 1
MIRP[m&gt;RBl], 5, 87
MIAP[R], 13, 86
SHP[1], 3
MIRP[m&gt;RBl], 12, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="931">
      <instructions>
        <talk>/* 16C2 */

YAnchor(23,85)
YShift(23,18)
YLink(23,24,87)
YAnchor(25,86)
YShift(25,16)
YLink(25,26,87)
YInterpolate(25,0,8,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 931, char 0x16c2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 18
MIRP[m&gt;RBl], 24, 87
MIAP[R], 25, 86
SHP[1], 16
MIRP[m&gt;RBl], 26, 87
SRP2[], 23
IP[], 0
IP[], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="932">
      <instructions>
        <talk>/* 16C3 */

YAnchor(0)
YAnchor(8)
YInterpolate(0,6,4,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 932, char 0x16c3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 6
IP[], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="933">
      <instructions>
        <talk>/* 16C4 */

YAnchor(15,85)
YShift(15,10)
YLink(15,16,87)
YAnchor(17,86)
YShift(17,8)
YLink(17,18,87)
YInterpolate(17,0,2,15)
YShift(0,4)
YShift(2,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 933, char 0x16c4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 85
SHP[1], 10
MIRP[m&gt;RBl], 16, 87
MIAP[R], 17, 86
SHP[1], 8
MIRP[m&gt;RBl], 18, 87
SRP2[], 15
IP[], 0
IP[], 2
SRP1[], 0
SHP[1], 4
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="934">
      <instructions>
        <talk>/* 16C5 */

YAnchor(15,85)
YShift(15,10)
YLink(15,16,87)
YAnchor(21,86)
YShift(21,11)
YLink(21,20,87)
YInterpolate(21,5,15)
YShift(5,6)
YLink(5,2,90)
YShift(2,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 934, char 0x16c5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 85
SHP[1], 10
MIRP[m&gt;RBl], 16, 87
MIAP[R], 21, 86
SHP[1], 11
MIRP[m&gt;RBl], 20, 87
SRP2[], 15
IP[], 5
SRP1[], 5
SHP[1], 6
SRP0[], 5
MIRP[m&gt;RBl], 2, 90
SHP[2], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="935">
      <instructions>
        <talk>/* 16C6 */

YAnchor(13,85)
YShift(13,8)
YLink(13,14,87)
YAnchor(15,86)
YShift(15,6)
YLink(15,16,87)
YInterpolate(15,3,13)
YShift(3,4)
YLink(3,2,90)
YShift(2,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 935, char 0x16c6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 85
SHP[1], 8
MIRP[m&gt;RBl], 14, 87
MIAP[R], 15, 86
SHP[1], 6
MIRP[m&gt;RBl], 16, 87
SRP2[], 13
IP[], 3
SRP1[], 3
SHP[1], 4
SRP0[], 3
MIRP[m&gt;RBl], 2, 90
SHP[2], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="936">
      <instructions>
        <talk>/* 16C7 */

YAnchor(0,86)
YShift(0,1)
YLink(0,6,90)
YShift(6,5)
YAnchor(8,85)
YShift(8,9)
YLink(8,14,90)
YShift(14,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 936, char 0x16c7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 86
SHP[2], 1
MIRP[m&gt;RBl], 6, 90
SHP[2], 5
MIAP[R], 8, 85
SHP[1], 9
MIRP[m&gt;RBl], 14, 90
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="937">
      <instructions>
        <talk>/* 16C8 */

YAnchor(18,86)
YShift(18,15)
YShift(18,26)
YShift(18,11)
YShift(11,12)
YShift(18,17)
YShift(17,16)
YLink(18,19,87)
YShift(19,27)
YAnchor(24,85)
YShift(24,4)
YShift(24,9)
YShift(24,33)
YShift(24,2)
YShift(2,3)
YShift(24,8)
YShift(8,7)
YLink(24,23,87)
YShift(23,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 937, char 0x16c8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 18, 86
SHP[1], 15
SHP[1], 26
SHP[1], 11
SRP1[], 11
SHP[1], 12
SRP1[], 18
SHP[1], 17
SRP1[], 17
SHP[1], 16
MIRP[m&gt;RBl], 19, 87
SHP[2], 27
MIAP[R], 24, 85
SHP[1], 4
SHP[1], 9
SHP[1], 33
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP1[], 24
SHP[1], 8
SRP1[], 8
SHP[1], 7
MIRP[m&gt;RBl], 23, 87
SHP[2], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="938">
      <instructions>
        <talk>/* 16c9 */

YAnchor(16,86)
YShift(16,7)
YLink(16,15,87)
YAnchor(25,85)
YShift(25,1)
YShift(25,2)
YShift(25,6)
YShift(25,10)
YShift(25,11)
YShift(25,20)
YShift(25,29)
YInterpolate(16,0,8,25)
YDist(0,3)
YDist(8,9)
YLink(25,26,87)
YShift(26,21)
YShift(26,28)

Smooth()

XDelta(8,1/8@12..30)
XDelta(11,1/8@12..30)
XDelta(9,-1/8@12..30)
XDelta(10,-1/8@12..30)

</talk>
        <assembly>/* TT glyph 938, char 0x16c9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 86
SHP[1], 7
MIRP[m&gt;RBl], 15, 87
MIAP[R], 25, 85
SHP[1], 1
SHP[1], 2
SHP[1], 6
SHP[1], 10
SHP[1], 11
SHP[1], 20
SHP[1], 29
SRP2[], 16
IP[], 0
IP[], 8
SRP0[], 0
MDRP[m&gt;RBl], 3
SRP0[], 8
MDRP[m&gt;RBl], 9
SRP0[], 25
MIRP[m&gt;RBl], 26, 87
SHP[2], 21
SHP[2], 28
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 8, 8, 12, 30, 72
CALL[], 11, 8, 12, 30, 72
CALL[], 9, -8, 12, 30, 72
CALL[], 10, -8, 12, 30, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="939">
      <instructions>
        <talk>/* 16ca */

YAnchor(0)
YAnchor(8)
YInterpolate(0,20,3,13,6,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 939, char 0x16ca */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SLOOP[], 4
IP[], 20, 3, 13, 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="940">
      <instructions>
        <talk>/* 16cb */

YAnchor(8,86)
YShift(8,0)
YLink(8,9,87)
YAnchor(16,85)
YShift(16,4)
YLink(16,17,87)
YInterpolate(8,2,6,16)
YShift(2,5)
YShift(6,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 940, char 0x16cb */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 86
SHP[1], 0
MIRP[m&gt;RBl], 9, 87
MIAP[R], 16, 85
SHP[1], 4
MIRP[m&gt;RBl], 17, 87
SRP2[], 8
IP[], 2
IP[], 6
SRP1[], 2
SHP[1], 5
SRP1[], 6
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="941">
      <instructions>
        <talk>/* 16cc */

YAnchor(7,85)
YShift(7,2)
YDist(7,3)
YLink(7,8,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 941, char 0x16cc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 85
SHP[1], 2
MDRP[m&lt;RGr], 3
MIRP[m&gt;RBl], 8, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="942">
      <instructions>
        <talk>/* 16cd */

YAnchor(23,85)
YShift(23,18)
YLink(23,24,87)
YDist(23,19)
YShift(19,0)
YShift(19,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 942, char 0x16cd */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 18
MIRP[m&gt;RBl], 24, 87
MDRP[m&lt;RGr], 19
SHP[2], 0
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="943">
      <instructions>
        <talk>/* 16ce */

YAnchor(0,86)
YShift(0,7)
YShift(0,12)
YAnchor(23,85)
YShift(23,10)
YLink(23,24,87)
YDist(23,19)
YShift(19,8)
YShift(19,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 943, char 0x16ce */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 86
SHP[2], 7
SHP[2], 12
MIAP[R], 23, 85
SHP[1], 10
MIRP[m&gt;RBl], 24, 87
MDRP[m&lt;RGr], 19
SHP[2], 8
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="944">
      <instructions>
        <talk>/* 16cf */

YAnchor(10,85)
YShift(10,1)
YShift(10,2)
YShift(10,17)
YShift(10,18)
YAnchor(24,86)
YShift(24,19)
YLink(24,23,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 944, char 0x16cf */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 10, 85
SHP[1], 1
SHP[1], 2
SHP[1], 17
SHP[1], 18
MIAP[R], 24, 86
SHP[1], 19
MIRP[m&gt;RBl], 23, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="945">
      <instructions>
        <talk>/* 16d0 */

YAnchor(9,85)
YShift(9,1)
YShift(9,2)
YAnchor(16,86)
YShift(16,11)
YLink(16,15,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 945, char 0x16d0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 9, 85
SHP[1], 1
SHP[1], 2
MIAP[R], 16, 86
SHP[1], 11
MIRP[m&gt;RBl], 15, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="946">
      <instructions>
        <talk>/* 16d1 */

YAnchor(25,85)
YShift(25,17)
YShift(25,18)
YAnchor(32,86)
YShift(32,27)
YLink(32,31,87)
YInterpolate(32,0,8,25)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 946, char 0x16d1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 85
SHP[1], 17
SHP[1], 18
MIAP[R], 32, 86
SHP[1], 27
MIRP[m&gt;RBl], 31, 87
SRP2[], 25
IP[], 0
IP[], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="947">
      <instructions>
        <talk>/* 16d2 */

YAnchor(22,86)
YShift(22,0)
YLink(22,23,87)
YAnchor(28,85)
YShift(28,1)
YLink(28,27,87)
YInterpolate(22,12,7,14,17,6,18,3,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 947, char 0x16d2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 22, 86
SHP[1], 0
MIRP[m&gt;RBl], 23, 87
MIAP[R], 28, 85
SHP[1], 1
MIRP[m&gt;RBl], 27, 87
SRP2[], 22
SLOOP[], 7
IP[], 12, 7, 14, 17, 6, 18, 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="948">
      <instructions>
        <talk>/* 16d3 */

YAnchor(21,85)
YShift(21,16)
YLink(21,22,87)
YAnchor(27,86)
YShift(27,17)
YLink(27,26,87)
YInterpolate(27,7,0,21)
YShift(7,13)
YLink(7,8,90)
YShift(8,9)
YShift(0,6)
YLink(0,1,90)
YShift(1,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 948, char 0x16d3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 16
MIRP[m&gt;RBl], 22, 87
MIAP[R], 27, 86
SHP[1], 17
MIRP[m&gt;RBl], 26, 87
SRP2[], 21
IP[], 7
IP[], 0
SRP1[], 7
SHP[1], 13
SRP0[], 7
MIRP[m&gt;RBl], 8, 90
SHP[2], 9
SRP1[], 0
SHP[1], 6
SRP0[], 0
MIRP[m&gt;RBl], 1, 90
SHP[2], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="949">
      <instructions>
        <talk>/* 16d4 */

YAnchor(46,86)
YShift(46,24)
YShift(46,35)
YLink(46,47,87)
YAnchor(52,85)
YShift(52,25)
YShift(52,45)
YLink(52,51,87)
YInterpolate(46,12,36,18,31,38,41,30,0,42,6,27,52)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 949, char 0x16d4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 46, 86
SHP[1], 24
SHP[1], 35
MIRP[m&gt;RBl], 47, 87
MIAP[R], 52, 85
SHP[1], 25
SHP[1], 45
MIRP[m&gt;RBl], 51, 87
SRP2[], 46
SLOOP[], 11
IP[], 12, 36, 18, 31, 38, 41, 30, 0, 42, 6, 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="950">
      <instructions>
        <talk>/* 16d5 */

YAnchor(15,86)
YShift(15,3)
YShift(15,4)
YShift(15,26)
YLink(15,14,87)
YShift(14,28)
YAnchor(19,85)
YShift(19,2)
YShift(19,6)
YShift(19,23)
YInterpolate(15,5,8,19)
YLink(19,20,87)
YShift(20,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 950, char 0x16d5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 86
SHP[1], 3
SHP[1], 4
SHP[1], 26
MIRP[m&gt;RBl], 14, 87
SHP[2], 28
MIAP[R], 19, 85
SHP[1], 2
SHP[1], 6
SHP[1], 23
SRP2[], 15
IP[], 5
IP[], 8
MIRP[m&gt;RBl], 20, 87
SHP[2], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="951">
      <instructions>
        <talk>/* 16d6 */

YAnchor(21,85)
YShift(21,1)
YShift(21,6)
YShift(21,17)
YLink(21,20,87)
YShift(20,18)
YAnchor(32,86)
YShift(32,8)
YShift(32,14)
YShift(32,23)
YLink(32,31,87)
YShift(31,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 951, char 0x16d6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 21, 85
SHP[1], 1
SHP[1], 6
SHP[1], 17
MIRP[m&gt;RBl], 20, 87
SHP[2], 18
MIAP[R], 32, 86
SHP[1], 8
SHP[1], 14
SHP[1], 23
MIRP[m&gt;RBl], 31, 87
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="952">
      <instructions>
        <talk>/* 16d7 */

YAnchor(34,85)
YShift(34,1)
YShift(34,5)
YShift(34,6)
YShift(34,20)
YShift(34,21)
YShift(34,23)
YShift(34,24)
YShift(34,30)
YLink(34,33,87)
YShift(33,31)
YAnchor(45,86)
YShift(45,8)
YShift(45,15)
YShift(45,36)
YInterpolate(45,10,13,34)
YShift(10,27)
YShift(13,17)
YLink(45,44,87)
YShift(44,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 952, char 0x16d7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 34, 85
SHP[1], 1
SHP[1], 5
SHP[1], 6
SHP[1], 20
SHP[1], 21
SHP[1], 23
SHP[1], 24
SHP[1], 30
MIRP[m&gt;RBl], 33, 87
SHP[2], 31
MIAP[R], 45, 86
SHP[1], 8
SHP[1], 15
SHP[1], 36
SRP2[], 34
IP[], 10
IP[], 13
SRP1[], 10
SHP[1], 27
SRP1[], 13
SHP[1], 17
MIRP[m&gt;RBl], 44, 87
SHP[2], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="953">
      <instructions>
        <talk>/* 16d8 */

YAnchor(32,85)
YShift(32,2)
YShift(32,9)
YShift(32,19)
YShift(32,27)
YShift(32,36)
YLink(32,33,87)
YShift(33,28)
YShift(33,35)
YAnchor(43,86)
YShift(43,3)
YLink(43,42,87)
YInterpolate(43,14,32)
YShift(14,4)
YDist(14,15)
YShift(15,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 953, char 0x16d8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 32, 85
SHP[1], 2
SHP[1], 9
SHP[1], 19
SHP[1], 27
SHP[1], 36
MIRP[m&gt;RBl], 33, 87
SHP[2], 28
SHP[2], 35
MIAP[R], 43, 86
SHP[1], 3
MIRP[m&gt;RBl], 42, 87
SRP2[], 32
IP[], 14
SRP1[], 14
SHP[1], 4
SRP0[], 14
MDRP[m&gt;RBl], 15
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="954">
      <instructions>
        <talk>/* 16d9 */

YAnchor(8,86)
YShift(8,3)
YLink(8,7,87)

YShift(2,9)
YShift(2,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 954, char 0x16d9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 86
SHP[1], 3
MIRP[m&gt;RBl], 7, 87
SRP1[], 2
SHP[1], 9
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="955">
      <instructions>
        <talk>/* 16DA */

YAnchor(2,85)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YAnchor(14,86)
YShift(14,9)
YLink(14,13,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 955, char 0x16da */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 2, 85
SHP[1], 3
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
MIAP[R], 14, 86
SHP[1], 9
MIRP[m&gt;RBl], 13, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="956">
      <instructions>
        <talk>/* 16db */

YAnchor(2,85)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YAnchor(30,86)
YShift(30,9)
YLink(30,29,87)
YInterpolate(30,10,18,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 956, char 0x16db */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 2, 85
SHP[1], 3
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
MIAP[R], 30, 86
SHP[1], 9
MIRP[m&gt;RBl], 29, 87
SRP2[], 2
IP[], 10
IP[], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="957">
      <instructions>
        <talk>/* 16dc */

YAnchor(0)
YShift(0,4)
YAnchor(2)
YShift(2,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 957, char 0x16dc */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 2
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="958">
      <instructions>
        <talk>/* 16dd */

YAnchor(15,85)
YShift(15,2)
YShift(15,9)
YShift(15,19)
YLink(15,16,87)
YShift(16,18)
YAnchor(31,86)
YShift(31,0)
YShift(31,11)
YShift(31,22)
YInterpolate(31,7,1,10,4,15)
YLink(31,30,87)
YShift(30,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 958, char 0x16dd */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 15, 85
SHP[1], 2
SHP[1], 9
SHP[1], 19
MIRP[m&gt;RBl], 16, 87
SHP[2], 18
MIAP[R], 31, 86
SHP[1], 0
SHP[1], 11
SHP[1], 22
SRP2[], 15
SLOOP[], 4
IP[], 7, 1, 10, 4
MIRP[m&gt;RBl], 30, 87
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="959">
      <instructions>
        <talk>/* 16de */

YAnchor(7,86)
YShift(7,2)
YShift(7,10)
YShift(7,17)
YShift(7,27)
YShift(7,30)
YLink(7,8,87)
YShift(8,29)
YAnchor(14,85)
YShift(14,0)
YShift(14,11)
YShift(14,18)
YShift(14,23)
YShift(14,26)
YInterpolate(14,21,20,4,5,7)
YLink(14,13,87)
YShift(13,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 959, char 0x16de */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 2
SHP[1], 10
SHP[1], 17
SHP[1], 27
SHP[1], 30
MIRP[m&gt;RBl], 8, 87
SHP[2], 29
MIAP[R], 14, 85
SHP[1], 0
SHP[1], 11
SHP[1], 18
SHP[1], 23
SHP[1], 26
SRP2[], 7
SLOOP[], 4
IP[], 21, 20, 4, 5
MIRP[m&gt;RBl], 13, 87
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="960">
      <instructions>
        <talk>/* 16df */

YAnchor(3,85)
YShift(3,12)
YAnchor(23,86)
YShift(23,7)
YShift(23,9)
YShift(23,14)
YInterpolate(3,10,5,1,8,23)
YLink(23,22,87)
YShift(22,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 960, char 0x16df */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 3, 85
SHP[1], 12
MIAP[R], 23, 86
SHP[1], 7
SHP[1], 9
SHP[1], 14
SRP2[], 3
SLOOP[], 4
IP[], 10, 5, 1, 8
MIRP[m&gt;RBl], 22, 87
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="961">
      <instructions>
        <talk>/* 16e0 */

YAnchor(25,85)
YShift(25,1)
YShift(25,6)
YShift(25,9)
YShift(25,11)
YShift(25,16)
YShift(25,21)
YLink(25,24,87)
YShift(24,22)
YAnchor(32,86)
YShift(32,17)
YLink(32,31,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 961, char 0x16e0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 25, 85
SHP[1], 1
SHP[1], 6
SHP[1], 9
SHP[1], 11
SHP[1], 16
SHP[1], 21
MIRP[m&gt;RBl], 24, 87
SHP[2], 22
MIAP[R], 32, 86
SHP[1], 17
MIRP[m&gt;RBl], 31, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="962">
      <instructions>
        <talk>/* 16e1 */

YAnchor(22,85)
YShift(22,17)
YLink(22,21,87)
YAnchor(29,86)
YShift(29,19)
YLink(29,28,87)
YInterpolate(29,2,13,22)
YShift(2,1)
YLink(2,5,90)
YShift(5,6)
YShift(13,14)
YLink(13,10,90)
YShift(10,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 962, char 0x16e1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 17
MIRP[m&gt;RBl], 21, 87
MIAP[R], 29, 86
SHP[1], 19
MIRP[m&gt;RBl], 28, 87
SRP2[], 22
IP[], 2
IP[], 13
SRP1[], 2
SHP[1], 1
SRP0[], 2
MIRP[m&gt;RBl], 5, 90
SHP[2], 6
SRP1[], 13
SHP[1], 14
SRP0[], 13
MIRP[m&gt;RBl], 10, 90
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="963">
      <instructions>
        <talk>/* 16e2 */

YAnchor(22,86)
YShift(22,2)
YShift(22,7)
YShift(22,17)
YShift(22,23)
YLink(22,21,87)
YShift(21,25)
YAnchor(33,85)
YShift(33,8)
YShift(33,11)
YShift(33,16)
YShift(33,29)
YLink(33,32,87)
YShift(32,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 963, char 0x16e2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 22, 86
SHP[1], 2
SHP[1], 7
SHP[1], 17
SHP[1], 23
MIRP[m&gt;RBl], 21, 87
SHP[2], 25
MIAP[R], 33, 85
SHP[1], 8
SHP[1], 11
SHP[1], 16
SHP[1], 29
MIRP[m&gt;RBl], 32, 87
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="964">
      <instructions>
        <talk>/* 16e3 */

YAnchor(13,86)
YShift(13,0)
YShift(13,1)
YShift(13,8)
YShift(13,14)
YShift(13,17)
YShift(13,18)
YShift(13,26)
YLink(13,12,87)
YShift(12,7)
YShift(12,19)
YAnchor(30,85)
YShift(30,25)
YLink(30,31,87)
YInterpolate(13,15,3,30)
YDist(15,16)
YDist(3,2)

/* X direction */

Smooth()
XDelta(15,-1/8@12..33)
XDelta(14,-1/8@12..33)
XDelta(16,1/8@12..33)
XDelta(17,1/8@12..33)
</talk>
        <assembly>/* TT glyph 964, char 0x16e3 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 86
SHP[1], 0
SHP[1], 1
SHP[1], 8
SHP[1], 14
SHP[1], 17
SHP[1], 18
SHP[1], 26
MIRP[m&gt;RBl], 12, 87
SHP[2], 7
SHP[2], 19
MIAP[R], 30, 85
SHP[1], 25
MIRP[m&gt;RBl], 31, 87
SRP2[], 13
IP[], 15
IP[], 3
SRP0[], 15
MDRP[m&gt;RBl], 16
SRP0[], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
SVTCA[X]
CALL[], 15, -8, 12, 33, 72
CALL[], 14, -8, 12, 33, 72
CALL[], 16, 8, 12, 33, 72
CALL[], 17, 8, 12, 33, 72

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="965">
      <instructions>
        <talk>/* 16e4 */

YAnchor(38,85)
YShift(38,2)
YShift(38,5)
YShift(38,11)
YShift(38,33)
YShift(38,42)
YLink(38,39,87)
YShift(39,34)
YShift(39,41)
YAnchor(54,86)
YShift(54,0)
YShift(54,7)
YShift(54,17)
YShift(54,49)
YShift(54,55)
YInterpolate(54,26,15,19,8,29,22,38)
YLink(54,53,87)
YShift(53,48)
YShift(53,56)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 965, char 0x16e4 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 38, 85
SHP[1], 2
SHP[1], 5
SHP[1], 11
SHP[1], 33
SHP[1], 42
MIRP[m&gt;RBl], 39, 87
SHP[2], 34
SHP[2], 41
MIAP[R], 54, 86
SHP[1], 0
SHP[1], 7
SHP[1], 17
SHP[1], 49
SHP[1], 55
SRP2[], 38
SLOOP[], 6
IP[], 26, 15, 19, 8, 29, 22
MIRP[m&gt;RBl], 53, 87
SHP[2], 48
SHP[2], 56
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="966">
      <instructions>
        <talk>/* 16e5 */

YAnchor(30,86)
YShift(30,0)
YShift(30,6)
YShift(30,37)
YLink(30,31,87)
YShift(31,36)
YAnchor(40,85)
YShift(40,1)
YShift(40,5)
YShift(40,44)
YLink(40,39,87)
YShift(39,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 966, char 0x16e5 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 30, 86
SHP[1], 0
SHP[1], 6
SHP[1], 37
MIRP[m&gt;RBl], 31, 87
SHP[2], 36
MIAP[R], 40, 85
SHP[1], 1
SHP[1], 5
SHP[1], 44
MIRP[m&gt;RBl], 39, 87
SHP[2], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="967">
      <instructions>
        <talk>/* 16e6 */

YAnchor(33,86)
YShift(33,0)
YShift(33,13)
YShift(33,23)
YShift(33,28)
YShift(33,34)
YLink(33,32,87)
YShift(32,27)
YShift(32,35)
YAnchor(42,85)
YShift(42,12)
YLink(42,43,87)
YInterpolate(42,5,33)
YShift(5,18)
YDist(5,4)
YShift(4,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 967, char 0x16e6 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 33, 86
SHP[1], 0
SHP[1], 13
SHP[1], 23
SHP[1], 28
SHP[1], 34
MIRP[m&gt;RBl], 32, 87
SHP[2], 27
SHP[2], 35
MIAP[R], 42, 85
SHP[1], 12
MIRP[m&gt;RBl], 43, 87
SRP2[], 33
IP[], 5
SRP1[], 5
SHP[1], 18
SRP0[], 5
MDRP[m&gt;RBl], 4
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="968">
      <instructions>
        <talk>/* 16e7 */

YAnchor(8,86)
YDist(8,2)
YShift(8,3)
YLink(8,7,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 968, char 0x16e7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 8, 86
MDRP[m&lt;RGr], 2
SHP[1], 3
MIRP[m&gt;RBl], 7, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="969">
      <instructions>
        <talk>/* 16e8 */

YAnchor(16,85)
YShift(16,14)
YShift(16,17)
YLink(16,23,90)
YShift(23,8)
YShift(23,9)
YShift(23,22)
YAnchor(31,86)
YShift(31,1)
YShift(31,30)
YLink(31,24,90)
YShift(24,6)
YShift(24,7)
YShift(24,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 969, char 0x16e8 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 16, 85
SHP[1], 14
SHP[1], 17
MIRP[m&gt;RBl], 23, 90
SHP[2], 8
SHP[2], 9
SHP[2], 22
MIAP[R], 31, 86
SHP[1], 1
SHP[1], 30
MIRP[m&gt;RBl], 24, 90
SHP[2], 6
SHP[2], 7
SHP[2], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="970">
      <instructions>
        <talk>/* 16e9 */

YAnchor(11,86)
YShift(11,6)
YLink(11,10,87)
YAnchor(20,85)
YShift(20,5)
YShift(20,14)
YShift(20,15)
YLink(20,21,87)
YInterpolate(11,12,2,16,20)
YShift(12,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 970, char 0x16e9 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 11, 86
SHP[1], 6
MIRP[m&gt;RBl], 10, 87
MIAP[R], 20, 85
SHP[1], 5
SHP[1], 14
SHP[1], 15
MIRP[m&gt;RBl], 21, 87
SRP2[], 11
SLOOP[], 3
IP[], 12, 2, 16
SRP1[], 12
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="971">
      <instructions>
        <talk>/* 16ea */

YAnchor(4,85)
YAnchor(7,86)
YIPAnchor(7,9,15,4)
YInterpolate(9,2,6,15)
YDist(9,8)
YShift(2,5)
YShift(6,1)
YDist(15,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 971, char 0x16ea */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 85
MIAP[R], 7, 86
SRP2[], 4
IP[], 9
IP[], 15
MDAP[R], 9
MDAP[R], 15
SRP2[], 9
IP[], 2
IP[], 6
SRP0[], 9
MDRP[m&gt;RBl], 8
SRP1[], 2
SHP[1], 5
SRP1[], 6
SHP[1], 1
SRP0[], 15
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="972">
      <instructions>
        <talk>/* 16eb */

YAnchor(0)
YDist(0,6)

Smooth()
</talk>
        <assembly>/* TT glyph 972, char 0x16eb */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="973">
      <instructions>
        <talk>/* 16ec */

YAnchor(0)
YDist(0,6)
YDist(6,12)
YDist(12,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 973, char 0x16ec */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[M&gt;RBl], 6
MDRP[M&lt;RWh], 12
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="974">
      <instructions>
        <talk>/* 16ed */

YAnchor(6)
YAnchor(11)
YInterpolate(11,10,7,6)
YShift(10,1)
YShift(7,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 974, char 0x16ed */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 11
SRP2[], 6
IP[], 10
IP[], 7
SRP1[], 10
SHP[1], 1
SRP1[], 7
SHP[1], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="975">
      <instructions>
        <talk>/* 16ee */

YAnchor(2,85)
YShift(2,3)
YLink(2,8,90)
YShift(8,7)
YAnchor(14,86)
YShift(14,9)
YLink(14,13,87)
YInterpolate(14,20,2)
YShift(20,21)
YLink(20,19,90)
YShift(19,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 975, char 0x16ee */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 2, 85
SHP[1], 3
MIRP[m&gt;RBl], 8, 90
SHP[2], 7
MIAP[R], 14, 86
SHP[1], 9
MIRP[m&gt;RBl], 13, 87
SRP2[], 2
IP[], 20
SRP1[], 20
SHP[1], 21
SRP0[], 20
MIRP[m&gt;RBl], 19, 90
SHP[2], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="976">
      <instructions>
        <talk>/* 16ef */

YAnchor(5,86)
YShift(5,4)
YShift(5,10)
YShift(5,30)
YShift(5,63)
YShift(5,64)
YLink(5,6,87)
YShift(6,3)
YShift(6,11)
YAnchor(23,85)
YShift(23,18)
YShift(23,27)
YShift(23,32)
YShift(23,39)
YShift(23,49)
YLink(23,24,87)
YShift(24,19)
YShift(24,26)
YInterpolate(5,58,44,23)
YShift(58,69)
YDist(58,59)
YShift(59,68)
YShift(44,34)
YDist(44,45)
YShift(45,43)

Smooth()

</talk>
        <assembly>/* TT glyph 976, char 0x16ef */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 5, 86
SHP[1], 4
SHP[1], 10
SHP[1], 30
SHP[1], 63
SHP[1], 64
MIRP[m&gt;RBl], 6, 87
SHP[2], 3
SHP[2], 11
MIAP[R], 23, 85
SHP[1], 18
SHP[1], 27
SHP[1], 32
SHP[1], 39
SHP[1], 49
MIRP[m&gt;RBl], 24, 87
SHP[2], 19
SHP[2], 26
SRP2[], 5
IP[], 58
IP[], 44
SRP1[], 58
SHP[1], 69
SRP0[], 58
MDRP[m&gt;RBl], 59
SHP[2], 68
SRP1[], 44
SHP[1], 34
SRP0[], 44
MDRP[m&gt;RBl], 45
SHP[2], 43
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="977">
      <instructions>
        <talk>/* 16f0 */

YAnchor(43,85)
YShift(43,38)
YLink(43,44,87)
YAnchor(45,86)
YShift(45,36)
YLink(45,46,87)
YInterpolate(45,0,10,43)
YDist(0,20)
YDist(10,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 977, char 0x16f0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 43, 85
SHP[1], 38
MIRP[m&gt;RBl], 44, 87
MIAP[R], 45, 86
SHP[1], 36
MIRP[m&gt;RBl], 46, 87
SRP2[], 43
IP[], 0
IP[], 10
SRP0[], 0
MDRP[m&lt;RWh], 20
SRP0[], 10
MDRP[m&lt;RWh], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="978">
      <instructions>
        <talk>/* 01C2 */

YAnchor(0,18)
YAnchor(2)
YIPAnchor(0,4,8,2)
YDist(4,5)
YDist(8,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 978, char 0x1c2 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 2
IP[], 4
IP[], 8
MDAP[R], 4
MDAP[R], 8
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 8
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="979">
      <instructions>
        <talk>/* 01C0 */

YAnchor(0,18)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 979, char 0x1c0 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="980">
      <instructions>
        <talk>/* 01c1 */

YAnchor(4,18)
YShift(4,0)
YAnchor(5)
YShift(5,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 980, char 0x1c1 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 4, 18
SHP[1], 0
MDAP[R], 5
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="981">
      <instructions>
        <talk></talk>
        <assembly>USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OVERLAP[]
OFFSET[R], 800, 754, -35

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="982">
      <instructions>
        <talk>/* VTTTalk glyph 982, char 0x2f7 */
/* GUI generated Sat Apr 25 07:36:33 2020 */

/* Y direction */
YAnchor(0)
YShift(0,19)
YDist(0,6,&gt;=)
YShift(6,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 982, char 0x2f7 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 19
MDRP[m&gt;RGr], 6
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="983">
      <instructions>
        <talk>/* VTTTalk glyph 983, char 0xa76d */
/* GUI generated Mon May 11 07:14:44 2020 */

/* Y direction */
YAnchor(0)
YDist(0,7)
YShift(0,10)
YDist(0,12)
YAnchor(20,0)
YDist(20,36)
YIPAnchor(0,28,20)
YDist(28,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 983, char 0xa76d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 7
SHP[1], 10
MDRP[m&lt;RGr], 12
MIAP[R], 20, 0
MDRP[m&gt;RBl], 36
SRP2[], 0
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="984">
      <instructions>
        <talk>/* VTTTalk glyph 984, char 0xa779 */
/* GUI generated Sat May 16 18:21:00 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,31,68)
YAnchor(21,2)
YShift(21,15)
YLink(21,39,67)
YShift(39,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 984, char 0xa779 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 31, 68
MIAP[R], 21, 2
SHP[1], 15
MIRP[m&gt;RBl], 39, 67
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="985">
      <instructions>
        <talk>/* VTTTalk glyph 985, char 0xa77b */
/* GUI generated Sun May 17 08:38:49 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,3)
YDist(8,6,&gt;=)
YShift(8,24)
YAnchor(24)
YDist(24,32)
YDist(24,38)
YIPAnchor(24,18,0)
YDist(18,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 985, char 0xa77b */
/* VTT 6.31 compiler Sun May 17 08:38:49 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 3
MDRP[m&gt;RBl], 6
SHP[1], 24
MDAP[R], 24
MDRP[m&gt;RBl], 32
MDRP[m&gt;RBl], 38
SRP2[], 0
IP[], 18
MDAP[R], 18
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="986">
      <instructions>
        <talk>/* VTTTalk glyph 986, char 0xa77d */
/* GUI generated Sat May 16 18:58:04 2020 */

/* Y direction */
YAnchor(0)
YLink(0,54,68)
YAnchor(30,2)
YShift(30,23)
YDist(30,20)
YShift(20,36)
YInterpolate(30,18,20)
YShift(18,37)
YIPAnchor(0,63,30)
YDist(63,10,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 986, char 0xa77d */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 54, 68
MIAP[R], 30, 2
SHP[1], 23
MDRP[m&gt;RBl], 20
SHP[2], 36
IP[], 18
SRP1[], 18
SHP[1], 37
SRP1[], 0
SRP2[], 30
IP[], 63
MDAP[R], 63
MDRP[m&gt;RGr], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="987">
      <instructions>
        <talk>/* VTTTalk glyph 987, char 0xa782 */
/* GUI generated Sat May 16 18:32:51 2020 */

/* Y direction */
YAnchor(13,3)
YLink(13,4,68)
YShift(13,28)
YDist(28,26,&gt;=)
YAnchor(20)
YAnchor(35,8)
YShift(35,0)
YLink(35,36,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 987, char 0xa782 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 13, 3
MIRP[m&gt;RBl], 4, 68
SHP[1], 28
SRP0[], 28
MDRP[m&gt;RBl], 26
MDAP[R], 20
MIAP[R], 35, 8
SHP[1], 0
MIRP[m&gt;RBl], 36, 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="988">
      <instructions>
        <talk>/* VTTTalk glyph 988, char 0xa784 */
/* GUI generated Sat May 16 18:34:18 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,3)
YDist(8,6,&gt;=)
YShift(8,20)
YAnchor(20)
YDist(20,28)
YDist(20,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 988, char 0xa784 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 3
MDRP[m&gt;RBl], 6
SHP[1], 20
MDAP[R], 20
MDRP[m&gt;RBl], 28
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="989">
      <instructions>
        <talk>/* VTTTalk glyph 989, char 0xa786 */
/* GUI generated Sat May 16 18:35:51 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,17,68)
YAnchor(44,2)
YShift(44,34)
YDist(44,32,&gt;=)
YInterpolate(32,8,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 989, char 0xa786 */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 17, 68
MIAP[R], 44, 2
SHP[1], 34
MDRP[m&gt;RBl], 32
IP[], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="990">
      <instructions>
        <talk>/* VTTTalk glyph 990, char 0xffff */
/* GUI generated Sun May 17 07:55:24 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,28,80)
YAnchor(20,75)
YShift(20,14)
YLink(20,36,79)
YShift(36,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 990, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 28, 80
MIAP[R], 20, 75
SHP[1], 14
MIRP[m&gt;RBl], 36, 79
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="991">
      <instructions>
        <talk>/* VTTTalk glyph 991, char 0xffff */
/* GUI generated Sun May 17 08:33:26 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,76)
YDist(8,6,&gt;=)
YIPAnchor(0,18,8)
YLink(18,17,81)
YShift(8,24)
YAnchor(24)
YDist(24,32)
YDist(24,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 991, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:33:26 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 76
MDRP[m&gt;RBl], 6
SRP2[], 0
IP[], 18
MDAP[R], 18
MIRP[m&gt;RBl], 17, 81
SRP1[], 8
SHP[1], 24
MDAP[R], 24
MDRP[m&gt;RBl], 32
MDRP[m&gt;RBl], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="992">
      <instructions>
        <talk>/* VTTTalk glyph 992, char 0xffff */
/* GUI generated Sun May 17 08:00:10 2020 */

/* Y direction */
YAnchor(0)
YDist(0,51)
YAnchor(30,75)
YShift(30,23)
YDist(30,20,&gt;=)
YShift(20,35)
YInterpolate(30,18,20)
YShift(18,36)
YIPAnchor(30,59,0)
YDist(59,10,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 992, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 51
MIAP[R], 30, 75
SHP[1], 23
MDRP[m&gt;RBl], 20
SHP[2], 35
IP[], 18
SRP1[], 18
SHP[1], 36
SRP1[], 30
SRP2[], 0
IP[], 59
MDAP[R], 59
MDRP[m&gt;RGr], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="993">
      <instructions>
        <talk>/* VTTTalk glyph 993, char 0xffff */
/* GUI generated Sun May 17 08:01:59 2020 */

/* Y direction */
YAnchor(14,76)
YLink(14,6,80)
YShift(14,30)
YAnchor(30)
YDist(30,28,&gt;=)
YAnchor(22)
YAnchor(37,77)
YShift(37,0)
YLink(37,38,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 993, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 14, 76
MIRP[m&gt;RBl], 6, 80
SHP[1], 30
MDAP[R], 30
MDRP[m&gt;RBl], 28
MDAP[R], 22
MIAP[R], 37, 77
SHP[1], 0
MIRP[m&gt;RBl], 38, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="994">
      <instructions>
        <talk>/* VTTTalk glyph 994, char 0xffff */
/* GUI generated Sun May 17 08:03:41 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8,76)
YNoRound(6)
YDist(8,6,&gt;=)
YShift(8,20)
YAnchor(20)
YDist(20,28)
YDist(20,34)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 994, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 76
MDRP[m&gt;rBl], 6
SHP[1], 20
MDAP[R], 20
MDRP[m&gt;RBl], 28
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="995">
      <instructions>
        <talk>/* VTTTalk glyph 995, char 0xffff */
/* GUI generated Sun May 17 08:05:08 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,16,80)
YAnchor(40,75)
YShift(40,33)
YDist(40,30,&gt;=)
YInterpolate(40,7,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 995, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 16, 80
MIAP[R], 40, 75
SHP[1], 33
MDRP[m&gt;RBl], 30
IP[], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="996">
      <instructions>
        <talk>/* The two big alt dollar signs are the same,
and the code for them can be the same. */

YAnchor(26)
YShift(26,28)
YShift(26,29)
YDist(26,42)
YAnchor(57)
YShift(57,0)
YShift(57,1)
YDist(57,12)
YInterpolate(57,18,50,26)

/* X direction */

Smooth()






</talk>
        <assembly>/* TT glyph 996, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 26
SHP[1], 28
SHP[1], 29
MDRP[m&gt;RBl], 42
MDAP[R], 57
SHP[1], 0
SHP[1], 1
MDRP[m&gt;RBl], 12
SRP2[], 26
IP[], 18
IP[], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="997">
      <instructions>
        <talk>/* The two big alt dollar signs are the same,
and the code for them can be the same. */

YAnchor(26)
YShift(26,28)
YShift(26,29)
YDist(26,42)
YAnchor(57)
YShift(57,0)
YShift(57,1)
YDist(57,12)
YInterpolate(57,18,50,26)

/* X direction */

Smooth()








</talk>
        <assembly>/* TT glyph 997, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MDAP[R], 26
SHP[1], 28
SHP[1], 29
MDRP[m&gt;RBl], 42
MDAP[R], 57
SHP[1], 0
SHP[1], 1
MDRP[m&gt;RBl], 12
SRP2[], 26
IP[], 18
IP[], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="998">
      <instructions>
        <talk>/* The two small alt dollar signs are the same,
and the code for them can be the same. */

YAnchor(0,11)
YDist(0,10)
YAnchor(24,7)
YInterpolate(0,16,48,24)
YDist(24,40)
YInterpolate(40,59,24)
YInterpolate(10,57,0)

/* X direction */

Smooth()







</talk>
        <assembly>/* TT glyph 998, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 10
MIAP[R], 24, 7
SRP2[], 0
IP[], 16
IP[], 48
MDRP[m&gt;RBl], 40
IP[], 59
SRP1[], 10
SRP2[], 0
IP[], 57
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="999">
      <instructions>
        <talk>/* The two small alt dollar signs are the same,
and the code for them can be the same. */

YAnchor(0,11)
YDist(0,10)
YAnchor(24,7)
YInterpolate(0,16,48,24)
YDist(24,40)
YInterpolate(40,59,24)
YInterpolate(10,57,0)

/* X direction */

Smooth()







</talk>
        <assembly>/* TT glyph 999, char 0xffff */
/* VTT 6.31 compiler Sun May 17 08:06:39 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 10
MIAP[R], 24, 7
SRP2[], 0
IP[], 16
IP[], 48
MDRP[m&gt;RBl], 40
IP[], 59
SRP1[], 10
SRP2[], 0
IP[], 57
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
  </glyf>
</ttFont>